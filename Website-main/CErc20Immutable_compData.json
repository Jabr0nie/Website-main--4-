{
	"compilerInput": "{\"language\":\"Solidity\",\"sources\":{\"Nyke-lending-protocol/contracts/CErc20Immutable.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./CErc20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title Compound's CErc20Immutable Contract\\r\\n * @notice CTokens which wrap an EIP-20 underlying and are immutable\\r\\n * @author Compound\\r\\n */\\r\\ncontract CErc20Immutable is CErc20 {\\r\\n    /**\\r\\n     * @notice Construct a new money market\\r\\n     * @param underlying_ The address of the underlying asset\\r\\n     * @param comptroller_ The address of the Comptroller\\r\\n     * @param interestRateModel_ The address of the interest rate model\\r\\n     * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\\r\\n     * @param name_ ERC-20 name of this token\\r\\n     * @param symbol_ ERC-20 symbol of this token\\r\\n     * @param decimals_ ERC-20 decimal precision of this token\\r\\n     * @param admin_ Address of the administrator of this token\\r\\n     */\\r\\n    constructor(address underlying_,\\r\\n                ComptrollerInterface comptroller_,\\r\\n                InterestRateModel interestRateModel_,\\r\\n                uint initialExchangeRateMantissa_,\\r\\n                string memory name_,\\r\\n                string memory symbol_,\\r\\n                uint8 decimals_,\\r\\n                address payable admin_) {\\r\\n        // Creator of the contract is admin during initialization\\r\\n        admin = payable(msg.sender);\\r\\n\\r\\n        // Initialize the market\\r\\n        initialize(underlying_, comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_);\\r\\n\\r\\n        // Set the proper admin now that initialization is done\\r\\n        admin = admin_;\\r\\n    }\\r\\n}\\r\\n\"},\"Nyke-lending-protocol/contracts/CErc20.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./CToken.sol\\\";\\r\\n\\r\\ninterface CompLike {\\r\\n    function delegate(address delegatee) external;\\r\\n}\\r\\n\\r\\n/**\\r\\n * @title Compound's CErc20 Contract\\r\\n * @notice CTokens which wrap an EIP-20 underlying\\r\\n * @author Compound\\r\\n */\\r\\ncontract CErc20 is CToken, CErc20Interface {\\r\\n    /**\\r\\n     * @notice Initialize the new money market\\r\\n     * @param underlying_ The address of the underlying asset\\r\\n     * @param comptroller_ The address of the Comptroller\\r\\n     * @param interestRateModel_ The address of the interest rate model\\r\\n     * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\\r\\n     * @param name_ ERC-20 name of this token\\r\\n     * @param symbol_ ERC-20 symbol of this token\\r\\n     * @param decimals_ ERC-20 decimal precision of this token\\r\\n     */\\r\\n    function initialize(address underlying_,\\r\\n                        ComptrollerInterface comptroller_,\\r\\n                        InterestRateModel interestRateModel_,\\r\\n                        uint initialExchangeRateMantissa_,\\r\\n                        string memory name_,\\r\\n                        string memory symbol_,\\r\\n                        uint8 decimals_) public {\\r\\n        // CToken initialize does the bulk of the work\\r\\n        super.initialize(comptroller_, interestRateModel_, initialExchangeRateMantissa_, name_, symbol_, decimals_);\\r\\n\\r\\n        // Set underlying and sanity check it\\r\\n        underlying = underlying_;\\r\\n        EIP20Interface(underlying).totalSupply();\\r\\n    }\\r\\n\\r\\n    /*** User Interface ***/\\r\\n\\r\\n    /**\\r\\n     * @notice Sender supplies assets into the market and receives cTokens in exchange\\r\\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\\r\\n     * @param mintAmount The amount of the underlying asset to supply\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function mint(uint mintAmount) override external returns (uint) {\\r\\n        mintInternal(mintAmount);\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender redeems cTokens in exchange for the underlying asset\\r\\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\\r\\n     * @param redeemTokens The number of cTokens to redeem into underlying\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function redeem(uint redeemTokens) override external returns (uint) {\\r\\n        redeemInternal(redeemTokens);\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender redeems cTokens in exchange for a specified amount of underlying asset\\r\\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\\r\\n     * @param redeemAmount The amount of underlying to redeem\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function redeemUnderlying(uint redeemAmount) override external returns (uint) {\\r\\n        redeemUnderlyingInternal(redeemAmount);\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @notice Sender borrows assets from the protocol to their own address\\r\\n      * @param borrowAmount The amount of the underlying asset to borrow\\r\\n      * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n      */\\r\\n    function borrow(uint borrowAmount) override external returns (uint) {\\r\\n        borrowInternal(borrowAmount);\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender repays their own borrow\\r\\n     * @param repayAmount The amount to repay, or -1 for the full outstanding amount\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function repayBorrow(uint repayAmount) override external returns (uint) {\\r\\n        repayBorrowInternal(repayAmount);\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender repays a borrow belonging to borrower\\r\\n     * @param borrower the account with the debt being payed off\\r\\n     * @param repayAmount The amount to repay, or -1 for the full outstanding amount\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function repayBorrowBehalf(address borrower, uint repayAmount) override external returns (uint) {\\r\\n        repayBorrowBehalfInternal(borrower, repayAmount);\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice The sender liquidates the borrowers collateral.\\r\\n     *  The collateral seized is transferred to the liquidator.\\r\\n     * @param borrower The borrower of this cToken to be liquidated\\r\\n     * @param repayAmount The amount of the underlying borrowed asset to repay\\r\\n     * @param cTokenCollateral The market in which to seize collateral from the borrower\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function liquidateBorrow(address borrower, uint repayAmount, CTokenInterface cTokenCollateral) override external returns (uint) {\\r\\n        liquidateBorrowInternal(borrower, repayAmount, cTokenCollateral);\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice A public function to sweep accidental ERC-20 transfers to this contract. Tokens are sent to admin (timelock)\\r\\n     * @param token The address of the ERC-20 token to sweep\\r\\n     */\\r\\n    function sweepToken(EIP20NonStandardInterface token) override external {\\r\\n        require(msg.sender == admin, \\\"CErc20::sweepToken: only admin can sweep tokens\\\");\\r\\n        require(address(token) != underlying, \\\"CErc20::sweepToken: can not sweep underlying token\\\");\\r\\n        uint256 balance = token.balanceOf(address(this));\\r\\n        token.transfer(admin, balance);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice The sender adds to reserves.\\r\\n     * @param addAmount The amount fo underlying token to add as reserves\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _addReserves(uint addAmount) override external returns (uint) {\\r\\n        return _addReservesInternal(addAmount);\\r\\n    }\\r\\n\\r\\n    /*** Safe Token ***/\\r\\n\\r\\n    /**\\r\\n     * @notice Gets balance of this contract in terms of the underlying\\r\\n     * @dev This excludes the value of the current message, if any\\r\\n     * @return The quantity of underlying tokens owned by this contract\\r\\n     */\\r\\n    function getCashPrior() virtual override internal view returns (uint) {\\r\\n        EIP20Interface token = EIP20Interface(underlying);\\r\\n        return token.balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Similar to EIP20 transfer, except it handles a False result from `transferFrom` and reverts in that case.\\r\\n     *      This will revert due to insufficient balance or insufficient allowance.\\r\\n     *      This function returns the actual amount received,\\r\\n     *      which may be less than `amount` if there is a fee attached to the transfer.\\r\\n     *\\r\\n     *      Note: This wrapper safely handles non-standard ERC-20 tokens that do not return a value.\\r\\n     *            See here: https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\\r\\n     */\\r\\n    function doTransferIn(address from, uint amount) virtual override internal returns (uint) {\\r\\n        // Read from storage once\\r\\n        address underlying_ = underlying;\\r\\n        EIP20NonStandardInterface token = EIP20NonStandardInterface(underlying_);\\r\\n        uint balanceBefore = EIP20Interface(underlying_).balanceOf(address(this));\\r\\n        token.transferFrom(from, address(this), amount);\\r\\n\\r\\n        bool success;\\r\\n        assembly {\\r\\n            switch returndatasize()\\r\\n                case 0 {                       // This is a non-standard ERC-20\\r\\n                    success := not(0)          // set success to true\\r\\n                }\\r\\n                case 32 {                      // This is a compliant ERC-20\\r\\n                    returndatacopy(0, 0, 32)\\r\\n                    success := mload(0)        // Set `success = returndata` of override external call\\r\\n                }\\r\\n                default {                      // This is an excessively non-compliant ERC-20, revert.\\r\\n                    revert(0, 0)\\r\\n                }\\r\\n        }\\r\\n        require(success, \\\"TOKEN_TRANSFER_IN_FAILED\\\");\\r\\n\\r\\n        // Calculate the amount that was *actually* transferred\\r\\n        uint balanceAfter = EIP20Interface(underlying_).balanceOf(address(this));\\r\\n        return balanceAfter - balanceBefore;   // underflow already checked above, just subtract\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Similar to EIP20 transfer, except it handles a False success from `transfer` and returns an explanatory\\r\\n     *      error code rather than reverting. If caller has not called checked protocol's balance, this may revert due to\\r\\n     *      insufficient cash held in this contract. If caller has checked protocol's balance prior to this call, and verified\\r\\n     *      it is >= amount, this should not revert in normal conditions.\\r\\n     *\\r\\n     *      Note: This wrapper safely handles non-standard ERC-20 tokens that do not return a value.\\r\\n     *            See here: https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\\r\\n     */\\r\\n    function doTransferOut(address payable to, uint amount) virtual override internal {\\r\\n        EIP20NonStandardInterface token = EIP20NonStandardInterface(underlying);\\r\\n        token.transfer(to, amount);\\r\\n\\r\\n        bool success;\\r\\n        assembly {\\r\\n            switch returndatasize()\\r\\n                case 0 {                      // This is a non-standard ERC-20\\r\\n                    success := not(0)          // set success to true\\r\\n                }\\r\\n                case 32 {                     // This is a compliant ERC-20\\r\\n                    returndatacopy(0, 0, 32)\\r\\n                    success := mload(0)        // Set `success = returndata` of override external call\\r\\n                }\\r\\n                default {                     // This is an excessively non-compliant ERC-20, revert.\\r\\n                    revert(0, 0)\\r\\n                }\\r\\n        }\\r\\n        require(success, \\\"TOKEN_TRANSFER_OUT_FAILED\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n    * @notice Admin call to delegate the votes of the COMP-like underlying\\r\\n    * @param compLikeDelegatee The address to delegate votes to\\r\\n    * @dev CTokens whose underlying are not CompLike should revert here\\r\\n    */\\r\\n    function _delegateCompLikeTo(address compLikeDelegatee) external {\\r\\n        require(msg.sender == admin, \\\"only the admin may set the comp-like delegate\\\");\\r\\n        CompLike(underlying).delegate(compLikeDelegatee);\\r\\n    }\\r\\n}\\r\\n\"},\"Nyke-lending-protocol/contracts/CToken.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./ComptrollerInterface.sol\\\";\\r\\nimport \\\"./CTokenInterfaces.sol\\\";\\r\\nimport \\\"./ErrorReporter.sol\\\";\\r\\nimport \\\"./EIP20Interface.sol\\\";\\r\\nimport \\\"./InterestRateModel.sol\\\";\\r\\nimport \\\"./ExponentialNoError.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title Compound's CToken Contract\\r\\n * @notice Abstract base for CTokens\\r\\n * @author Compound\\r\\n */\\r\\nabstract contract CToken is\\r\\n    CTokenInterface,\\r\\n    ExponentialNoError,\\r\\n    TokenErrorReporter\\r\\n{\\r\\n    /**\\r\\n     * @notice Initialize the money market\\r\\n     * @param comptroller_ The address of the Comptroller\\r\\n     * @param interestRateModel_ The address of the interest rate model\\r\\n     * @param initialExchangeRateMantissa_ The initial exchange rate, scaled by 1e18\\r\\n     * @param name_ EIP-20 name of this token\\r\\n     * @param symbol_ EIP-20 symbol of this token\\r\\n     * @param decimals_ EIP-20 decimal precision of this token\\r\\n     */\\r\\n    function initialize(\\r\\n        ComptrollerInterface comptroller_,\\r\\n        InterestRateModel interestRateModel_,\\r\\n        uint256 initialExchangeRateMantissa_,\\r\\n        string memory name_,\\r\\n        string memory symbol_,\\r\\n        uint8 decimals_\\r\\n    ) public {\\r\\n        require(msg.sender == admin, \\\"only admin may initialize the market\\\");\\r\\n        require(\\r\\n            accrualBlockNumber == 0 && borrowIndex == 0,\\r\\n            \\\"market may only be initialized once\\\"\\r\\n        );\\r\\n\\r\\n        // Set initial exchange rate\\r\\n        initialExchangeRateMantissa = initialExchangeRateMantissa_;\\r\\n        require(\\r\\n            initialExchangeRateMantissa > 0,\\r\\n            \\\"initial exchange rate must be greater than zero.\\\"\\r\\n        );\\r\\n\\r\\n        // Set the comptroller\\r\\n        uint256 err = _setComptroller(comptroller_);\\r\\n        require(err == NO_ERROR, \\\"setting comptroller failed\\\");\\r\\n\\r\\n        // Initialize block number and borrow index (block number mocks depend on comptroller being set)\\r\\n        accrualBlockNumber = getBlockNumber();\\r\\n        borrowIndex = mantissaOne;\\r\\n\\r\\n        // Set the interest rate model (depends on block number / borrow index)\\r\\n        err = _setInterestRateModelFresh(interestRateModel_);\\r\\n        require(err == NO_ERROR, \\\"setting interest rate model failed\\\");\\r\\n\\r\\n        name = name_;\\r\\n        symbol = symbol_;\\r\\n        decimals = decimals_;\\r\\n\\r\\n        // The counter starts true to prevent changing it from zero to non-zero (i.e. smaller cost/refund)\\r\\n        _notEntered = true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer `tokens` tokens from `src` to `dst` by `spender`\\r\\n     * @dev Called by both `transfer` and `transferFrom` internally\\r\\n     * @param spender The address of the account performing the transfer\\r\\n     * @param src The address of the source account\\r\\n     * @param dst The address of the destination account\\r\\n     * @param tokens The number of tokens to transfer\\r\\n     * @return 0 if the transfer succeeded, else revert\\r\\n     */\\r\\n    function transferTokens(\\r\\n        address spender,\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint256 tokens\\r\\n    ) internal returns (uint256) {\\r\\n        /* Fail if transfer not allowed */\\r\\n        uint256 allowed = comptroller.transferAllowed(\\r\\n            address(this),\\r\\n            src,\\r\\n            dst,\\r\\n            tokens\\r\\n        );\\r\\n        if (allowed != 0) {\\r\\n            revert TransferComptrollerRejection(allowed);\\r\\n        }\\r\\n\\r\\n        /* Do not allow self-transfers */\\r\\n        if (src == dst) {\\r\\n            revert TransferNotAllowed();\\r\\n        }\\r\\n\\r\\n        /* Get the allowance, infinite for the account owner */\\r\\n        uint256 startingAllowance = 0;\\r\\n        if (spender == src) {\\r\\n            startingAllowance = type(uint256).max;\\r\\n        } else {\\r\\n            startingAllowance = transferAllowances[src][spender];\\r\\n        }\\r\\n\\r\\n        /* Do the calculations, checking for {under,over}flow */\\r\\n        uint256 allowanceNew = startingAllowance - tokens;\\r\\n        uint256 srcTokensNew = accountTokens[src] - tokens;\\r\\n        uint256 dstTokensNew = accountTokens[dst] + tokens;\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        accountTokens[src] = srcTokensNew;\\r\\n        accountTokens[dst] = dstTokensNew;\\r\\n\\r\\n        /* Eat some of the allowance (if necessary) */\\r\\n        if (startingAllowance != type(uint256).max) {\\r\\n            transferAllowances[src][spender] = allowanceNew;\\r\\n        }\\r\\n\\r\\n        /* We emit a Transfer event */\\r\\n        emit Transfer(src, dst, tokens);\\r\\n\\r\\n        // unused function\\r\\n        // comptroller.transferVerify(address(this), src, dst, tokens);\\r\\n\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\r\\n     * @param dst The address of the destination account\\r\\n     * @param amount The number of tokens to transfer\\r\\n     * @return Whether or not the transfer succeeded\\r\\n     */\\r\\n    function transfer(address dst, uint256 amount)\\r\\n        external\\r\\n        override\\r\\n        nonReentrant\\r\\n        returns (bool)\\r\\n    {\\r\\n        return transferTokens(msg.sender, msg.sender, dst, amount) == NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Transfer `amount` tokens from `src` to `dst`\\r\\n     * @param src The address of the source account\\r\\n     * @param dst The address of the destination account\\r\\n     * @param amount The number of tokens to transfer\\r\\n     * @return Whether or not the transfer succeeded\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address src,\\r\\n        address dst,\\r\\n        uint256 amount\\r\\n    ) external override nonReentrant returns (bool) {\\r\\n        return transferTokens(msg.sender, src, dst, amount) == NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Approve `spender` to transfer up to `amount` from `src`\\r\\n     * @dev This will overwrite the approval amount for `spender`\\r\\n     *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\r\\n     * @param spender The address of the account which may transfer tokens\\r\\n     * @param amount The number of tokens that are approved (uint256.max means infinite)\\r\\n     * @return Whether or not the approval succeeded\\r\\n     */\\r\\n    function approve(address spender, uint256 amount)\\r\\n        external\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        address src = msg.sender;\\r\\n        transferAllowances[src][spender] = amount;\\r\\n        emit Approval(src, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get the current allowance from `owner` for `spender`\\r\\n     * @param owner The address of the account which owns the tokens to be spent\\r\\n     * @param spender The address of the account which may transfer tokens\\r\\n     * @return The number of tokens allowed to be spent (-1 means infinite)\\r\\n     */\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return transferAllowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get the token balance of the `owner`\\r\\n     * @param owner The address of the account to query\\r\\n     * @return The number of tokens owned by `owner`\\r\\n     */\\r\\n    function balanceOf(address owner) external view override returns (uint256) {\\r\\n        return accountTokens[owner];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get the underlying balance of the `owner`\\r\\n     * @dev This also accrues interest in a transaction\\r\\n     * @param owner The address of the account to query\\r\\n     * @return The amount of underlying owned by `owner`\\r\\n     */\\r\\n    function balanceOfUnderlying(address owner)\\r\\n        external\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        Exp memory exchangeRate = Exp({mantissa: exchangeRateCurrent()});\\r\\n        return mul_ScalarTruncate(exchangeRate, accountTokens[owner]);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get a snapshot of the account's balances, and the cached exchange rate\\r\\n     * @dev This is used by comptroller to more efficiently perform liquidity checks.\\r\\n     * @param account Address of the account to snapshot\\r\\n     * @return (possible error, token balance, borrow balance, exchange rate mantissa)\\r\\n     */\\r\\n    function getAccountSnapshot(address account)\\r\\n        external\\r\\n        view\\r\\n        override\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        )\\r\\n    {\\r\\n        return (\\r\\n            NO_ERROR,\\r\\n            accountTokens[account],\\r\\n            borrowBalanceStoredInternal(account),\\r\\n            exchangeRateStoredInternal()\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Function to simply retrieve block number\\r\\n     *  This exists mainly for inheriting test contracts to stub this result.\\r\\n     */\\r\\n    function getBlockNumber() internal view virtual returns (uint256) {\\r\\n        return block.timestamp;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the current per-block borrow interest rate for this cToken\\r\\n     * @return The borrow interest rate per block, scaled by 1e18\\r\\n     */\\r\\n    function borrowRatePerBlock() external view override returns (uint256) {\\r\\n        return\\r\\n            interestRateModel.getBorrowRate(\\r\\n                getCashPrior(),\\r\\n                totalBorrows,\\r\\n                totalReserves\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the current per-block supply interest rate for this cToken\\r\\n     * @return The supply interest rate per block, scaled by 1e18\\r\\n     */\\r\\n    function supplyRatePerBlock() external view override returns (uint256) {\\r\\n        return\\r\\n            interestRateModel.getSupplyRate(\\r\\n                getCashPrior(),\\r\\n                totalBorrows,\\r\\n                totalReserves,\\r\\n                reserveFactorMantissa\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Returns the current total borrows plus accrued interest\\r\\n     * @return The total borrows with interest\\r\\n     */\\r\\n    function totalBorrowsCurrent()\\r\\n        external\\r\\n        override\\r\\n        nonReentrant\\r\\n        returns (uint256)\\r\\n    {\\r\\n        accrueInterest();\\r\\n        return totalBorrows;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex\\r\\n     * @param account The address whose balance should be calculated after updating borrowIndex\\r\\n     * @return The calculated balance\\r\\n     */\\r\\n    function borrowBalanceCurrent(address account)\\r\\n        external\\r\\n        override\\r\\n        nonReentrant\\r\\n        returns (uint256)\\r\\n    {\\r\\n        accrueInterest();\\r\\n        return borrowBalanceStored(account);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Return the borrow balance of account based on stored data\\r\\n     * @param account The address whose balance should be calculated\\r\\n     * @return The calculated balance\\r\\n     */\\r\\n    function borrowBalanceStored(address account)\\r\\n        public\\r\\n        view\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return borrowBalanceStoredInternal(account);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Return the borrow balance of account based on stored data\\r\\n     * @param account The address whose balance should be calculated\\r\\n     * @return (error code, the calculated balance or 0 if error code is non-zero)\\r\\n     */\\r\\n    function borrowBalanceStoredInternal(address account)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        /* Get borrowBalance and borrowIndex */\\r\\n        BorrowSnapshot storage borrowSnapshot = accountBorrows[account];\\r\\n\\r\\n        /* If borrowBalance = 0 then borrowIndex is likely also 0.\\r\\n         * Rather than failing the calculation with a division by 0, we immediately return 0 in this case.\\r\\n         */\\r\\n        if (borrowSnapshot.principal == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        /* Calculate new borrow balance using the interest index:\\r\\n         *  recentBorrowBalance = borrower.borrowBalance * market.borrowIndex / borrower.borrowIndex\\r\\n         */\\r\\n        uint256 principalTimesIndex = borrowSnapshot.principal * borrowIndex;\\r\\n        return principalTimesIndex / borrowSnapshot.interestIndex;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accrue interest then return the up-to-date exchange rate\\r\\n     * @return Calculated exchange rate scaled by 1e18\\r\\n     */\\r\\n    function exchangeRateCurrent()\\r\\n        public\\r\\n        override\\r\\n        nonReentrant\\r\\n        returns (uint256)\\r\\n    {\\r\\n        accrueInterest();\\r\\n        return exchangeRateStored();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Calculates the exchange rate from the underlying to the CToken\\r\\n     * @dev This function does not accrue interest before calculating the exchange rate\\r\\n     * @return Calculated exchange rate scaled by 1e18\\r\\n     */\\r\\n    function exchangeRateStored() public view override returns (uint256) {\\r\\n        return exchangeRateStoredInternal();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Calculates the exchange rate from the underlying to the CToken\\r\\n     * @dev This function does not accrue interest before calculating the exchange rate\\r\\n     * @return calculated exchange rate scaled by 1e18\\r\\n     */\\r\\n    function exchangeRateStoredInternal()\\r\\n        internal\\r\\n        view\\r\\n        virtual\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 _totalSupply = totalSupply;\\r\\n        if (_totalSupply == 0) {\\r\\n            /*\\r\\n             * If there are no tokens minted:\\r\\n             *  exchangeRate = initialExchangeRate\\r\\n             */\\r\\n            return initialExchangeRateMantissa;\\r\\n        } else {\\r\\n            /*\\r\\n             * Otherwise:\\r\\n             *  exchangeRate = (totalCash + totalBorrows - totalReserves) / totalSupply\\r\\n             */\\r\\n            uint256 totalCash = getCashPrior();\\r\\n            uint256 cashPlusBorrowsMinusReserves = totalCash +\\r\\n                totalBorrows -\\r\\n                totalReserves;\\r\\n            uint256 exchangeRate = (cashPlusBorrowsMinusReserves * expScale) /\\r\\n                _totalSupply;\\r\\n\\r\\n            return exchangeRate;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Get cash balance of this cToken in the underlying asset\\r\\n     * @return The quantity of underlying asset owned by this contract\\r\\n     */\\r\\n    function getCash() external view override returns (uint256) {\\r\\n        return getCashPrior();\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Applies accrued interest to total borrows and reserves\\r\\n     * @dev This calculates interest accrued from the last checkpointed block\\r\\n     *   up to the current block and writes new checkpoint to storage.\\r\\n     */\\r\\n    function accrueInterest() public virtual override returns (uint256) {\\r\\n        /* Remember the initial block number */\\r\\n        uint256 currentBlockNumber = getBlockNumber();\\r\\n        uint256 accrualBlockNumberPrior = accrualBlockNumber;\\r\\n\\r\\n        /* Short-circuit accumulating 0 interest */\\r\\n        if (accrualBlockNumberPrior == currentBlockNumber) {\\r\\n            return NO_ERROR;\\r\\n        }\\r\\n\\r\\n        /* Read the previous values out of storage */\\r\\n        uint256 cashPrior = getCashPrior();\\r\\n        uint256 borrowsPrior = totalBorrows;\\r\\n        uint256 reservesPrior = totalReserves;\\r\\n        uint256 borrowIndexPrior = borrowIndex;\\r\\n\\r\\n        /* Calculate the current borrow interest rate */\\r\\n        uint256 borrowRateMantissa = interestRateModel.getBorrowRate(\\r\\n            cashPrior,\\r\\n            borrowsPrior,\\r\\n            reservesPrior\\r\\n        );\\r\\n        require(\\r\\n            borrowRateMantissa <= borrowRateMaxMantissa,\\r\\n            \\\"borrow rate is absurdly high\\\"\\r\\n        );\\r\\n\\r\\n        /* Calculate the number of blocks elapsed since the last accrual */\\r\\n        uint256 blockDelta = currentBlockNumber - accrualBlockNumberPrior;\\r\\n\\r\\n        /*\\r\\n         * Calculate the interest accumulated into borrows and reserves and the new index:\\r\\n         *  simpleInterestFactor = borrowRate * blockDelta\\r\\n         *  interestAccumulated = simpleInterestFactor * totalBorrows\\r\\n         *  totalBorrowsNew = interestAccumulated + totalBorrows\\r\\n         *  totalReservesNew = interestAccumulated * reserveFactor + totalReserves\\r\\n         *  borrowIndexNew = simpleInterestFactor * borrowIndex + borrowIndex\\r\\n         */\\r\\n\\r\\n        Exp memory simpleInterestFactor = mul_(\\r\\n            Exp({mantissa: borrowRateMantissa}),\\r\\n            blockDelta\\r\\n        );\\r\\n        uint256 interestAccumulated = mul_ScalarTruncate(\\r\\n            simpleInterestFactor,\\r\\n            borrowsPrior\\r\\n        );\\r\\n        uint256 totalBorrowsNew = interestAccumulated + borrowsPrior;\\r\\n        uint256 totalReservesNew = mul_ScalarTruncateAddUInt(\\r\\n            Exp({mantissa: reserveFactorMantissa}),\\r\\n            interestAccumulated,\\r\\n            reservesPrior\\r\\n        );\\r\\n        uint256 borrowIndexNew = mul_ScalarTruncateAddUInt(\\r\\n            simpleInterestFactor,\\r\\n            borrowIndexPrior,\\r\\n            borrowIndexPrior\\r\\n        );\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        /* We write the previously calculated values into storage */\\r\\n        accrualBlockNumber = currentBlockNumber;\\r\\n        borrowIndex = borrowIndexNew;\\r\\n        totalBorrows = totalBorrowsNew;\\r\\n        totalReserves = totalReservesNew;\\r\\n\\r\\n        /* We emit an AccrueInterest event */\\r\\n        emit AccrueInterest(\\r\\n            cashPrior,\\r\\n            interestAccumulated,\\r\\n            borrowIndexNew,\\r\\n            totalBorrowsNew\\r\\n        );\\r\\n\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender supplies assets into the market and receives cTokens in exchange\\r\\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\\r\\n     * @param mintAmount The amount of the underlying asset to supply\\r\\n     */\\r\\n    function mintInternal(uint256 mintAmount) internal nonReentrant {\\r\\n        accrueInterest();\\r\\n        // mintFresh emits the actual Mint event if successful and logs on errors, so we don't need to\\r\\n        mintFresh(msg.sender, mintAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice User supplies assets into the market and receives cTokens in exchange\\r\\n     * @dev Assumes interest has already been accrued up to the current block\\r\\n     * @param minter The address of the account which is supplying the assets\\r\\n     * @param mintAmount The amount of the underlying asset to supply\\r\\n     */\\r\\n    function mintFresh(address minter, uint256 mintAmount) internal {\\r\\n        /* Fail if mint not allowed */\\r\\n        uint256 allowed = comptroller.mintAllowed(\\r\\n            address(this),\\r\\n            minter,\\r\\n            mintAmount\\r\\n        );\\r\\n        if (allowed != 0) {\\r\\n            revert MintComptrollerRejection(allowed);\\r\\n        }\\r\\n\\r\\n        /* Verify market's block number equals current block number */\\r\\n        if (accrualBlockNumber != getBlockNumber()) {\\r\\n            revert MintFreshnessCheck();\\r\\n        }\\r\\n\\r\\n        Exp memory exchangeRate = Exp({mantissa: exchangeRateStoredInternal()});\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        /*\\r\\n         *  We call `doTransferIn` for the minter and the mintAmount.\\r\\n         *  Note: The cToken must handle variations between ERC-20 and ETH underlying.\\r\\n         *  `doTransferIn` reverts if anything goes wrong, since we can't be sure if\\r\\n         *  side-effects occurred. The function returns the amount actually transferred,\\r\\n         *  in case of a fee. On success, the cToken holds an additional `actualMintAmount`\\r\\n         *  of cash.\\r\\n         */\\r\\n        uint256 actualMintAmount = doTransferIn(minter, mintAmount);\\r\\n\\r\\n        /*\\r\\n         * We get the current exchange rate and calculate the number of cTokens to be minted:\\r\\n         *  mintTokens = actualMintAmount / exchangeRate\\r\\n         */\\r\\n\\r\\n        uint256 mintTokens = div_(actualMintAmount, exchangeRate);\\r\\n\\r\\n        /*\\r\\n         * We calculate the new total supply of cTokens and minter token balance, checking for overflow:\\r\\n         *  totalSupplyNew = totalSupply + mintTokens\\r\\n         *  accountTokensNew = accountTokens[minter] + mintTokens\\r\\n         * And write them into storage\\r\\n         */\\r\\n        totalSupply = totalSupply + mintTokens;\\r\\n        accountTokens[minter] = accountTokens[minter] + mintTokens;\\r\\n\\r\\n        /* We emit a Mint event, and a Transfer event */\\r\\n        emit Mint(minter, actualMintAmount, mintTokens);\\r\\n        emit Transfer(address(this), minter, mintTokens);\\r\\n\\r\\n        /* We call the defense hook */\\r\\n        comptroller.mintVerify(address(this), minter, actualMintAmount, mintTokens);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender redeems cTokens in exchange for the underlying asset\\r\\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\\r\\n     * @param redeemTokens The number of cTokens to redeem into underlying\\r\\n     */\\r\\n    function redeemInternal(uint256 redeemTokens) internal nonReentrant {\\r\\n        accrueInterest();\\r\\n        // redeemFresh emits redeem-specific logs on errors, so we don't need to\\r\\n        redeemFresh(payable(msg.sender), redeemTokens, 0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender redeems cTokens in exchange for a specified amount of underlying asset\\r\\n     * @dev Accrues interest whether or not the operation succeeds, unless reverted\\r\\n     * @param redeemAmount The amount of underlying to receive from redeeming cTokens\\r\\n     */\\r\\n    function redeemUnderlyingInternal(uint256 redeemAmount)\\r\\n        internal\\r\\n        nonReentrant\\r\\n    {\\r\\n        accrueInterest();\\r\\n        // redeemFresh emits redeem-specific logs on errors, so we don't need to\\r\\n        redeemFresh(payable(msg.sender), 0, redeemAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice User redeems cTokens in exchange for the underlying asset\\r\\n     * @dev Assumes interest has already been accrued up to the current block\\r\\n     * @param redeemer The address of the account which is redeeming the tokens\\r\\n     * @param redeemTokensIn The number of cTokens to redeem into underlying (only one of redeemTokensIn or redeemAmountIn may be non-zero)\\r\\n     * @param redeemAmountIn The number of underlying tokens to receive from redeeming cTokens (only one of redeemTokensIn or redeemAmountIn may be non-zero)\\r\\n     */\\r\\n    function redeemFresh(\\r\\n        address payable redeemer,\\r\\n        uint256 redeemTokensIn,\\r\\n        uint256 redeemAmountIn\\r\\n    ) internal {\\r\\n        require(\\r\\n            redeemTokensIn == 0 || redeemAmountIn == 0,\\r\\n            \\\"one of redeemTokensIn or redeemAmountIn must be zero\\\"\\r\\n        );\\r\\n\\r\\n        /* exchangeRate = invoke Exchange Rate Stored() */\\r\\n        Exp memory exchangeRate = Exp({mantissa: exchangeRateStoredInternal()});\\r\\n\\r\\n        uint256 redeemTokens;\\r\\n        uint256 redeemAmount;\\r\\n        /* If redeemTokensIn > 0: */\\r\\n        if (redeemTokensIn > 0) {\\r\\n            /*\\r\\n             * We calculate the exchange rate and the amount of underlying to be redeemed:\\r\\n             *  redeemTokens = redeemTokensIn\\r\\n             *  redeemAmount = redeemTokensIn x exchangeRateCurrent\\r\\n             */\\r\\n            redeemTokens = redeemTokensIn;\\r\\n            redeemAmount = mul_ScalarTruncate(exchangeRate, redeemTokensIn);\\r\\n        } else {\\r\\n            /*\\r\\n             * We get the current exchange rate and calculate the amount to be redeemed:\\r\\n             *  redeemTokens = redeemAmountIn / exchangeRate\\r\\n             *  redeemAmount = redeemAmountIn\\r\\n             */\\r\\n            redeemTokens = div_(redeemAmountIn, exchangeRate);\\r\\n            redeemAmount = redeemAmountIn;\\r\\n        }\\r\\n\\r\\n        /* Fail if redeem not allowed */\\r\\n        uint256 allowed = comptroller.redeemAllowed(\\r\\n            address(this),\\r\\n            redeemer,\\r\\n            redeemTokens\\r\\n        );\\r\\n        if (allowed != 0) {\\r\\n            revert RedeemComptrollerRejection(allowed);\\r\\n        }\\r\\n\\r\\n        /* Verify market's block number equals current block number */\\r\\n        if (accrualBlockNumber != getBlockNumber()) {\\r\\n            revert RedeemFreshnessCheck();\\r\\n        }\\r\\n\\r\\n        /* Fail gracefully if protocol has insufficient cash */\\r\\n        if (getCashPrior() < redeemAmount) {\\r\\n            revert RedeemTransferOutNotPossible();\\r\\n        }\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        /*\\r\\n         * We write the previously calculated values into storage.\\r\\n         *  Note: Avoid token reentrancy attacks by writing reduced supply before external transfer.\\r\\n         */\\r\\n        totalSupply = totalSupply - redeemTokens;\\r\\n        accountTokens[redeemer] = accountTokens[redeemer] - redeemTokens;\\r\\n\\r\\n        /*\\r\\n         * We invoke doTransferOut for the redeemer and the redeemAmount.\\r\\n         *  Note: The cToken must handle variations between ERC-20 and ETH underlying.\\r\\n         *  On success, the cToken has redeemAmount less of cash.\\r\\n         *  doTransferOut reverts if anything goes wrong, since we can't be sure if side effects occurred.\\r\\n         */\\r\\n        doTransferOut(redeemer, redeemAmount);\\r\\n\\r\\n        /* We emit a Transfer event, and a Redeem event */\\r\\n        emit Transfer(redeemer, address(this), redeemTokens);\\r\\n        emit Redeem(redeemer, redeemAmount, redeemTokens);\\r\\n\\r\\n        /* We call the defense hook */\\r\\n        comptroller.redeemVerify(\\r\\n            address(this),\\r\\n            redeemer,\\r\\n            redeemAmount,\\r\\n            redeemTokens\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender borrows assets from the protocol to their own address\\r\\n     * @param borrowAmount The amount of the underlying asset to borrow\\r\\n     */\\r\\n    function borrowInternal(uint256 borrowAmount) internal nonReentrant {\\r\\n        accrueInterest();\\r\\n        // borrowFresh emits borrow-specific logs on errors, so we don't need to\\r\\n        borrowFresh(payable(msg.sender), borrowAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Users borrow assets from the protocol to their own address\\r\\n     * @param borrowAmount The amount of the underlying asset to borrow\\r\\n     */\\r\\n    function borrowFresh(address payable borrower, uint256 borrowAmount)\\r\\n        internal\\r\\n    {\\r\\n        /* Fail if borrow not allowed */\\r\\n        uint256 allowed = comptroller.borrowAllowed(\\r\\n            address(this),\\r\\n            borrower,\\r\\n            borrowAmount\\r\\n        );\\r\\n        if (allowed != 0) {\\r\\n            revert BorrowComptrollerRejection(allowed);\\r\\n        }\\r\\n\\r\\n        /* Verify market's block number equals current block number */\\r\\n        if (accrualBlockNumber != getBlockNumber()) {\\r\\n            revert BorrowFreshnessCheck();\\r\\n        }\\r\\n\\r\\n        /* Fail gracefully if protocol has insufficient underlying cash */\\r\\n        if (getCashPrior() < borrowAmount) {\\r\\n            revert BorrowCashNotAvailable();\\r\\n        }\\r\\n\\r\\n        /*\\r\\n         * We calculate the new borrower and total borrow balances, failing on overflow:\\r\\n         *  accountBorrowNew = accountBorrow + borrowAmount\\r\\n         *  totalBorrowsNew = totalBorrows + borrowAmount\\r\\n         */\\r\\n        uint256 accountBorrowsPrev = borrowBalanceStoredInternal(borrower);\\r\\n        uint256 accountBorrowsNew = accountBorrowsPrev + borrowAmount;\\r\\n        uint256 totalBorrowsNew = totalBorrows + borrowAmount;\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        /*\\r\\n         * We write the previously calculated values into storage.\\r\\n         *  Note: Avoid token reentrancy attacks by writing increased borrow before external transfer.\\r\\n        `*/\\r\\n        accountBorrows[borrower].principal = accountBorrowsNew;\\r\\n        accountBorrows[borrower].interestIndex = borrowIndex;\\r\\n        totalBorrows = totalBorrowsNew;\\r\\n\\r\\n        /*\\r\\n         * We invoke doTransferOut for the borrower and the borrowAmount.\\r\\n         *  Note: The cToken must handle variations between ERC-20 and ETH underlying.\\r\\n         *  On success, the cToken borrowAmount less of cash.\\r\\n         *  doTransferOut reverts if anything goes wrong, since we can't be sure if side effects occurred.\\r\\n         */\\r\\n        doTransferOut(borrower, borrowAmount);\\r\\n\\r\\n        /* We emit a Borrow event */\\r\\n        emit Borrow(borrower, borrowAmount, accountBorrowsNew, totalBorrowsNew);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender repays their own borrow\\r\\n     * @param repayAmount The amount to repay, or -1 for the full outstanding amount\\r\\n     */\\r\\n    function repayBorrowInternal(uint256 repayAmount) internal nonReentrant {\\r\\n        accrueInterest();\\r\\n        // repayBorrowFresh emits repay-borrow-specific logs on errors, so we don't need to\\r\\n        repayBorrowFresh(msg.sender, msg.sender, repayAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sender repays a borrow belonging to borrower\\r\\n     * @param borrower the account with the debt being payed off\\r\\n     * @param repayAmount The amount to repay, or -1 for the full outstanding amount\\r\\n     */\\r\\n    function repayBorrowBehalfInternal(address borrower, uint256 repayAmount)\\r\\n        internal\\r\\n        nonReentrant\\r\\n    {\\r\\n        accrueInterest();\\r\\n        // repayBorrowFresh emits repay-borrow-specific logs on errors, so we don't need to\\r\\n        repayBorrowFresh(msg.sender, borrower, repayAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Borrows are repaid by another user (possibly the borrower).\\r\\n     * @param payer the account paying off the borrow\\r\\n     * @param borrower the account with the debt being payed off\\r\\n     * @param repayAmount the amount of underlying tokens being returned, or -1 for the full outstanding amount\\r\\n     * @return (uint) the actual repayment amount.\\r\\n     */\\r\\n    function repayBorrowFresh(\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint256 repayAmount\\r\\n    ) internal returns (uint256) {\\r\\n        /* Fail if repayBorrow not allowed */\\r\\n        uint256 allowed = comptroller.repayBorrowAllowed(\\r\\n            address(this),\\r\\n            payer,\\r\\n            borrower,\\r\\n            repayAmount\\r\\n        );\\r\\n        if (allowed != 0) {\\r\\n            revert RepayBorrowComptrollerRejection(allowed);\\r\\n        }\\r\\n\\r\\n        /* Verify market's block number equals current block number */\\r\\n        if (accrualBlockNumber != getBlockNumber()) {\\r\\n            revert RepayBorrowFreshnessCheck();\\r\\n        }\\r\\n\\r\\n        /* We fetch the amount the borrower owes, with accumulated interest */\\r\\n        uint256 accountBorrowsPrev = borrowBalanceStoredInternal(borrower);\\r\\n\\r\\n        /* If repayAmount == -1, repayAmount = accountBorrows */\\r\\n        uint256 repayAmountFinal = repayAmount == type(uint256).max\\r\\n            ? accountBorrowsPrev\\r\\n            : repayAmount;\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        /*\\r\\n         * We call doTransferIn for the payer and the repayAmount\\r\\n         *  Note: The cToken must handle variations between ERC-20 and ETH underlying.\\r\\n         *  On success, the cToken holds an additional repayAmount of cash.\\r\\n         *  doTransferIn reverts if anything goes wrong, since we can't be sure if side effects occurred.\\r\\n         *   it returns the amount actually transferred, in case of a fee.\\r\\n         */\\r\\n        uint256 actualRepayAmount = doTransferIn(payer, repayAmountFinal);\\r\\n\\r\\n        /*\\r\\n         * We calculate the new borrower and total borrow balances, failing on underflow:\\r\\n         *  accountBorrowsNew = accountBorrows - actualRepayAmount\\r\\n         *  totalBorrowsNew = totalBorrows - actualRepayAmount\\r\\n         */\\r\\n        uint256 accountBorrowsNew = accountBorrowsPrev - actualRepayAmount;\\r\\n        uint256 totalBorrowsNew = totalBorrows - actualRepayAmount;\\r\\n\\r\\n        /* We write the previously calculated values into storage */\\r\\n        accountBorrows[borrower].principal = accountBorrowsNew;\\r\\n        accountBorrows[borrower].interestIndex = borrowIndex;\\r\\n        totalBorrows = totalBorrowsNew;\\r\\n\\r\\n        /* We emit a RepayBorrow event */\\r\\n        emit RepayBorrow(\\r\\n            payer,\\r\\n            borrower,\\r\\n            actualRepayAmount,\\r\\n            accountBorrowsNew,\\r\\n            totalBorrowsNew\\r\\n        );\\r\\n\\r\\n        return actualRepayAmount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice The sender liquidates the borrowers collateral.\\r\\n     *  The collateral seized is transferred to the liquidator.\\r\\n     * @param borrower The borrower of this cToken to be liquidated\\r\\n     * @param cTokenCollateral The market in which to seize collateral from the borrower\\r\\n     * @param repayAmount The amount of the underlying borrowed asset to repay\\r\\n     */\\r\\n    function liquidateBorrowInternal(\\r\\n        address borrower,\\r\\n        uint256 repayAmount,\\r\\n        CTokenInterface cTokenCollateral\\r\\n    ) internal nonReentrant {\\r\\n        accrueInterest();\\r\\n\\r\\n        uint256 error = cTokenCollateral.accrueInterest();\\r\\n        if (error != NO_ERROR) {\\r\\n            // accrueInterest emits logs on errors, but we still want to log the fact that an attempted liquidation failed\\r\\n            revert LiquidateAccrueCollateralInterestFailed(error);\\r\\n        }\\r\\n\\r\\n        // liquidateBorrowFresh emits borrow-specific logs on errors, so we don't need to\\r\\n        liquidateBorrowFresh(\\r\\n            msg.sender,\\r\\n            borrower,\\r\\n            repayAmount,\\r\\n            cTokenCollateral\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice The liquidator liquidates the borrowers collateral.\\r\\n     *  The collateral seized is transferred to the liquidator.\\r\\n     * @param borrower The borrower of this cToken to be liquidated\\r\\n     * @param liquidator The address repaying the borrow and seizing collateral\\r\\n     * @param cTokenCollateral The market in which to seize collateral from the borrower\\r\\n     * @param repayAmount The amount of the underlying borrowed asset to repay\\r\\n     */\\r\\n    function liquidateBorrowFresh(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint256 repayAmount,\\r\\n        CTokenInterface cTokenCollateral\\r\\n    ) internal {\\r\\n        /* Fail if liquidate not allowed */\\r\\n        uint256 allowed = comptroller.liquidateBorrowAllowed(\\r\\n            address(this),\\r\\n            address(cTokenCollateral),\\r\\n            liquidator,\\r\\n            borrower,\\r\\n            repayAmount\\r\\n        );\\r\\n        if (allowed != 0) {\\r\\n            revert LiquidateComptrollerRejection(allowed);\\r\\n        }\\r\\n\\r\\n        /* Verify market's block number equals current block number */\\r\\n        if (accrualBlockNumber != getBlockNumber()) {\\r\\n            revert LiquidateFreshnessCheck();\\r\\n        }\\r\\n\\r\\n        /* Verify cTokenCollateral market's block number equals current block number */\\r\\n        if (cTokenCollateral.accrualBlockNumber() != getBlockNumber()) {\\r\\n            revert LiquidateCollateralFreshnessCheck();\\r\\n        }\\r\\n\\r\\n        /* Fail if borrower = liquidator */\\r\\n        if (borrower == liquidator) {\\r\\n            revert LiquidateLiquidatorIsBorrower();\\r\\n        }\\r\\n\\r\\n        /* Fail if repayAmount = 0 */\\r\\n        if (repayAmount == 0) {\\r\\n            revert LiquidateCloseAmountIsZero();\\r\\n        }\\r\\n\\r\\n        /* Fail if repayAmount = -1 */\\r\\n        if (repayAmount == type(uint256).max) {\\r\\n            revert LiquidateCloseAmountIsUintMax();\\r\\n        }\\r\\n\\r\\n        /* Fail if repayBorrow fails */\\r\\n        uint256 actualRepayAmount = repayBorrowFresh(\\r\\n            liquidator,\\r\\n            borrower,\\r\\n            repayAmount\\r\\n        );\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        /* We calculate the number of collateral tokens that will be seized */\\r\\n        (uint256 amountSeizeError, uint256 seizeTokens) = comptroller\\r\\n            .liquidateCalculateSeizeTokens(\\r\\n                address(this),\\r\\n                address(cTokenCollateral),\\r\\n                actualRepayAmount\\r\\n            );\\r\\n        require(\\r\\n            amountSeizeError == NO_ERROR,\\r\\n            \\\"LIQUIDATE_COMPTROLLER_CALCULATE_AMOUNT_SEIZE_FAILED\\\"\\r\\n        );\\r\\n\\r\\n        /* Revert if borrower collateral token balance < seizeTokens */\\r\\n        require(\\r\\n            cTokenCollateral.balanceOf(borrower) >= seizeTokens,\\r\\n            \\\"LIQUIDATE_SEIZE_TOO_MUCH\\\"\\r\\n        );\\r\\n\\r\\n        // If this is also the collateral, run seizeInternal to avoid re-entrancy, otherwise make an external call\\r\\n        if (address(cTokenCollateral) == address(this)) {\\r\\n            seizeInternal(address(this), liquidator, borrower, seizeTokens);\\r\\n        } else {\\r\\n            require(\\r\\n                cTokenCollateral.seize(liquidator, borrower, seizeTokens) ==\\r\\n                    NO_ERROR,\\r\\n                \\\"token seizure failed\\\"\\r\\n            );\\r\\n        }\\r\\n\\r\\n        /* We emit a LiquidateBorrow event */\\r\\n        emit LiquidateBorrow(\\r\\n            liquidator,\\r\\n            borrower,\\r\\n            actualRepayAmount,\\r\\n            address(cTokenCollateral),\\r\\n            seizeTokens\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Transfers collateral tokens (this market) to the liquidator.\\r\\n     * @dev Will fail unless called by another cToken during the process of liquidation.\\r\\n     *  Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.\\r\\n     * @param liquidator The account receiving seized collateral\\r\\n     * @param borrower The account having collateral seized\\r\\n     * @param seizeTokens The number of cTokens to seize\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function seize(\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint256 seizeTokens\\r\\n    ) external override nonReentrant returns (uint256) {\\r\\n        seizeInternal(msg.sender, liquidator, borrower, seizeTokens);\\r\\n\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Transfers collateral tokens (this market) to the liquidator.\\r\\n     * @dev Called only during an in-kind liquidation, or by liquidateBorrow during the liquidation of another CToken.\\r\\n     *  Its absolutely critical to use msg.sender as the seizer cToken and not a parameter.\\r\\n     * @param seizerToken The contract seizing the collateral (i.e. borrowed cToken)\\r\\n     * @param liquidator The account receiving seized collateral\\r\\n     * @param borrower The account having collateral seized\\r\\n     * @param seizeTokens The number of cTokens to seize\\r\\n     */\\r\\n    function seizeInternal(\\r\\n        address seizerToken,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint256 seizeTokens\\r\\n    ) internal {\\r\\n        /* Fail if seize not allowed */\\r\\n        uint256 allowed = comptroller.seizeAllowed(\\r\\n            address(this),\\r\\n            seizerToken,\\r\\n            liquidator,\\r\\n            borrower,\\r\\n            seizeTokens\\r\\n        );\\r\\n        if (allowed != 0) {\\r\\n            revert LiquidateSeizeComptrollerRejection(allowed);\\r\\n        }\\r\\n\\r\\n        /* Fail if borrower = liquidator */\\r\\n        if (borrower == liquidator) {\\r\\n            revert LiquidateSeizeLiquidatorIsBorrower();\\r\\n        }\\r\\n\\r\\n        /*\\r\\n         * We calculate the new borrower and liquidator token balances, failing on underflow/overflow:\\r\\n         *  borrowerTokensNew = accountTokens[borrower] - seizeTokens\\r\\n         *  liquidatorTokensNew = accountTokens[liquidator] + seizeTokens\\r\\n         */\\r\\n        uint256 protocolSeizeTokens = mul_(\\r\\n            seizeTokens,\\r\\n            Exp({mantissa: protocolSeizeShareMantissa})\\r\\n        );\\r\\n        uint256 liquidatorSeizeTokens = seizeTokens - protocolSeizeTokens;\\r\\n        Exp memory exchangeRate = Exp({mantissa: exchangeRateStoredInternal()});\\r\\n        uint256 protocolSeizeAmount = mul_ScalarTruncate(\\r\\n            exchangeRate,\\r\\n            protocolSeizeTokens\\r\\n        );\\r\\n        uint256 totalReservesNew = totalReserves + protocolSeizeAmount;\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        /* We write the calculated values into storage */\\r\\n        totalReserves = totalReservesNew;\\r\\n        totalSupply = totalSupply - protocolSeizeTokens;\\r\\n        accountTokens[borrower] = accountTokens[borrower] - seizeTokens;\\r\\n        accountTokens[liquidator] =\\r\\n            accountTokens[liquidator] +\\r\\n            liquidatorSeizeTokens;\\r\\n\\r\\n        /* Emit a Transfer event */\\r\\n        emit Transfer(borrower, liquidator, liquidatorSeizeTokens);\\r\\n        emit Transfer(borrower, address(this), protocolSeizeTokens);\\r\\n        emit ReservesAdded(\\r\\n            address(this),\\r\\n            protocolSeizeAmount,\\r\\n            totalReservesNew\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n    /**\\r\\n     * @notice Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\r\\n     * @dev Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\\r\\n     * @param newPendingAdmin New pending admin.\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setPendingAdmin(address payable newPendingAdmin)\\r\\n        external\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // Check caller = admin\\r\\n        if (msg.sender != admin) {\\r\\n            revert SetPendingAdminOwnerCheck();\\r\\n        }\\r\\n\\r\\n        // Save current value, if any, for inclusion in log\\r\\n        address oldPendingAdmin = pendingAdmin;\\r\\n\\r\\n        // Store pendingAdmin with value newPendingAdmin\\r\\n        pendingAdmin = newPendingAdmin;\\r\\n\\r\\n        // Emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin)\\r\\n        emit NewPendingAdmin(oldPendingAdmin, newPendingAdmin);\\r\\n\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accepts transfer of admin rights. msg.sender must be pendingAdmin\\r\\n     * @dev Admin function for pending admin to accept role and update admin\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _acceptAdmin() external override returns (uint256) {\\r\\n        // Check caller is pendingAdmin and pendingAdmin ≠ address(0)\\r\\n        if (msg.sender != pendingAdmin || msg.sender == address(0)) {\\r\\n            revert AcceptAdminPendingAdminCheck();\\r\\n        }\\r\\n\\r\\n        // Save current values for inclusion in log\\r\\n        address oldAdmin = admin;\\r\\n        address oldPendingAdmin = pendingAdmin;\\r\\n\\r\\n        // Store admin with value pendingAdmin\\r\\n        admin = pendingAdmin;\\r\\n\\r\\n        // Clear the pending value\\r\\n        pendingAdmin = payable(address(0));\\r\\n\\r\\n        emit NewAdmin(oldAdmin, admin);\\r\\n        emit NewPendingAdmin(oldPendingAdmin, pendingAdmin);\\r\\n\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sets a new comptroller for the market\\r\\n     * @dev Admin function to set a new comptroller\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setComptroller(ComptrollerInterface newComptroller)\\r\\n        public\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // Check caller is admin\\r\\n        if (msg.sender != admin) {\\r\\n            revert SetComptrollerOwnerCheck();\\r\\n        }\\r\\n\\r\\n        ComptrollerInterface oldComptroller = comptroller;\\r\\n        // Ensure invoke comptroller.isComptroller() returns true\\r\\n        require(newComptroller.isComptroller(), \\\"marker method returned false\\\");\\r\\n\\r\\n        // Set market's comptroller to newComptroller\\r\\n        comptroller = newComptroller;\\r\\n\\r\\n        // Emit NewComptroller(oldComptroller, newComptroller)\\r\\n        emit NewComptroller(oldComptroller, newComptroller);\\r\\n\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh\\r\\n     * @dev Admin function to accrue interest and set a new reserve factor\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setReserveFactor(uint256 newReserveFactorMantissa)\\r\\n        external\\r\\n        override\\r\\n        nonReentrant\\r\\n        returns (uint256)\\r\\n    {\\r\\n        accrueInterest();\\r\\n        // _setReserveFactorFresh emits reserve-factor-specific logs on errors, so we don't need to.\\r\\n        return _setReserveFactorFresh(newReserveFactorMantissa);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Sets a new reserve factor for the protocol (*requires fresh interest accrual)\\r\\n     * @dev Admin function to set a new reserve factor\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setReserveFactorFresh(uint256 newReserveFactorMantissa)\\r\\n        internal\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // Check caller is admin\\r\\n        if (msg.sender != admin) {\\r\\n            revert SetReserveFactorAdminCheck();\\r\\n        }\\r\\n\\r\\n        // Verify market's block number equals current block number\\r\\n        if (accrualBlockNumber != getBlockNumber()) {\\r\\n            revert SetReserveFactorFreshCheck();\\r\\n        }\\r\\n\\r\\n        // Check newReserveFactor ≤ maxReserveFactor\\r\\n        if (newReserveFactorMantissa > reserveFactorMaxMantissa) {\\r\\n            revert SetReserveFactorBoundsCheck();\\r\\n        }\\r\\n\\r\\n        uint256 oldReserveFactorMantissa = reserveFactorMantissa;\\r\\n        reserveFactorMantissa = newReserveFactorMantissa;\\r\\n\\r\\n        emit NewReserveFactor(\\r\\n            oldReserveFactorMantissa,\\r\\n            newReserveFactorMantissa\\r\\n        );\\r\\n\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accrues interest and reduces reserves by transferring from msg.sender\\r\\n     * @param addAmount Amount of addition to reserves\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _addReservesInternal(uint256 addAmount)\\r\\n        internal\\r\\n        nonReentrant\\r\\n        returns (uint256)\\r\\n    {\\r\\n        accrueInterest();\\r\\n\\r\\n        // _addReservesFresh emits reserve-addition-specific logs on errors, so we don't need to.\\r\\n        _addReservesFresh(addAmount);\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Add reserves by transferring from caller\\r\\n     * @dev Requires fresh interest accrual\\r\\n     * @param addAmount Amount of addition to reserves\\r\\n     * @return (uint, uint) An error code (0=success, otherwise a failure (see ErrorReporter.sol for details)) and the actual amount added, net token fees\\r\\n     */\\r\\n    function _addReservesFresh(uint256 addAmount)\\r\\n        internal\\r\\n        returns (uint256, uint256)\\r\\n    {\\r\\n        // totalReserves + actualAddAmount\\r\\n        uint256 totalReservesNew;\\r\\n        uint256 actualAddAmount;\\r\\n\\r\\n        // We fail gracefully unless market's block number equals current block number\\r\\n        if (accrualBlockNumber != getBlockNumber()) {\\r\\n            revert AddReservesFactorFreshCheck(actualAddAmount);\\r\\n        }\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        /*\\r\\n         * We call doTransferIn for the caller and the addAmount\\r\\n         *  Note: The cToken must handle variations between ERC-20 and ETH underlying.\\r\\n         *  On success, the cToken holds an additional addAmount of cash.\\r\\n         *  doTransferIn reverts if anything goes wrong, since we can't be sure if side effects occurred.\\r\\n         *  it returns the amount actually transferred, in case of a fee.\\r\\n         */\\r\\n\\r\\n        actualAddAmount = doTransferIn(msg.sender, addAmount);\\r\\n\\r\\n        totalReservesNew = totalReserves + actualAddAmount;\\r\\n\\r\\n        // Store reserves[n+1] = reserves[n] + actualAddAmount\\r\\n        totalReserves = totalReservesNew;\\r\\n\\r\\n        /* Emit NewReserves(admin, actualAddAmount, reserves[n+1]) */\\r\\n        emit ReservesAdded(msg.sender, actualAddAmount, totalReservesNew);\\r\\n\\r\\n        /* Return (NO_ERROR, actualAddAmount) */\\r\\n        return (NO_ERROR, actualAddAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Accrues interest and reduces reserves by transferring to admin\\r\\n     * @param reduceAmount Amount of reduction to reserves\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _reduceReserves(uint256 reduceAmount)\\r\\n        external\\r\\n        override\\r\\n        nonReentrant\\r\\n        returns (uint256)\\r\\n    {\\r\\n        accrueInterest();\\r\\n        // _reduceReservesFresh emits reserve-reduction-specific logs on errors, so we don't need to.\\r\\n        return _reduceReservesFresh(reduceAmount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice Reduces reserves by transferring to admin\\r\\n     * @dev Requires fresh interest accrual\\r\\n     * @param reduceAmount Amount of reduction to reserves\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _reduceReservesFresh(uint256 reduceAmount)\\r\\n        internal\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // totalReserves - reduceAmount\\r\\n        uint256 totalReservesNew;\\r\\n\\r\\n        // Check caller is admin\\r\\n        if (msg.sender != admin) {\\r\\n            revert ReduceReservesAdminCheck();\\r\\n        }\\r\\n\\r\\n        // We fail gracefully unless market's block number equals current block number\\r\\n        if (accrualBlockNumber != getBlockNumber()) {\\r\\n            revert ReduceReservesFreshCheck();\\r\\n        }\\r\\n\\r\\n        // Fail gracefully if protocol has insufficient underlying cash\\r\\n        if (getCashPrior() < reduceAmount) {\\r\\n            revert ReduceReservesCashNotAvailable();\\r\\n        }\\r\\n\\r\\n        // Check reduceAmount ≤ reserves[n] (totalReserves)\\r\\n        if (reduceAmount > totalReserves) {\\r\\n            revert ReduceReservesCashValidation();\\r\\n        }\\r\\n\\r\\n        /////////////////////////\\r\\n        // EFFECTS & INTERACTIONS\\r\\n        // (No safe failures beyond this point)\\r\\n\\r\\n        totalReservesNew = totalReserves - reduceAmount;\\r\\n\\r\\n        // Store reserves[n+1] = reserves[n] - reduceAmount\\r\\n        totalReserves = totalReservesNew;\\r\\n\\r\\n        // doTransferOut reverts if anything goes wrong, since we can't be sure if side effects occurred.\\r\\n        doTransferOut(admin, reduceAmount);\\r\\n\\r\\n        emit ReservesReduced(admin, reduceAmount, totalReservesNew);\\r\\n\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice accrues interest and updates the interest rate model using _setInterestRateModelFresh\\r\\n     * @dev Admin function to accrue interest and update the interest rate model\\r\\n     * @param newInterestRateModel the new interest rate model to use\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setInterestRateModel(InterestRateModel newInterestRateModel)\\r\\n        public\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        accrueInterest();\\r\\n        // _setInterestRateModelFresh emits interest-rate-model-update-specific logs on errors, so we don't need to.\\r\\n        return _setInterestRateModelFresh(newInterestRateModel);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice updates the interest rate model (*requires fresh interest accrual)\\r\\n     * @dev Admin function to update the interest rate model\\r\\n     * @param newInterestRateModel the new interest rate model to use\\r\\n     * @return uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\\r\\n     */\\r\\n    function _setInterestRateModelFresh(InterestRateModel newInterestRateModel)\\r\\n        internal\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // Used to store old model for use in the event that is emitted on success\\r\\n        InterestRateModel oldInterestRateModel;\\r\\n\\r\\n        // Check caller is admin\\r\\n        if (msg.sender != admin) {\\r\\n            revert SetInterestRateModelOwnerCheck();\\r\\n        }\\r\\n\\r\\n        // We fail gracefully unless market's block number equals current block number\\r\\n        if (accrualBlockNumber != getBlockNumber()) {\\r\\n            revert SetInterestRateModelFreshCheck();\\r\\n        }\\r\\n\\r\\n        // Track the market's current interest rate model\\r\\n        oldInterestRateModel = interestRateModel;\\r\\n\\r\\n        // Ensure invoke newInterestRateModel.isInterestRateModel() returns true\\r\\n        require(\\r\\n            newInterestRateModel.isInterestRateModel(),\\r\\n            \\\"marker method returned false\\\"\\r\\n        );\\r\\n\\r\\n        // Set the interest rate model to newInterestRateModel\\r\\n        interestRateModel = newInterestRateModel;\\r\\n\\r\\n        // Emit NewMarketInterestRateModel(oldInterestRateModel, newInterestRateModel)\\r\\n        emit NewMarketInterestRateModel(\\r\\n            oldInterestRateModel,\\r\\n            newInterestRateModel\\r\\n        );\\r\\n\\r\\n        return NO_ERROR;\\r\\n    }\\r\\n\\r\\n    /*** Safe Token ***/\\r\\n\\r\\n    /**\\r\\n     * @notice Gets balance of this contract in terms of the underlying\\r\\n     * @dev This excludes the value of the current message, if any\\r\\n     * @return The quantity of underlying owned by this contract\\r\\n     */\\r\\n    function getCashPrior() internal view virtual returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a transfer in, reverting upon failure. Returns the amount actually transferred to the protocol, in case of a fee.\\r\\n     *  This may revert due to insufficient balance or insufficient allowance.\\r\\n     */\\r\\n    function doTransferIn(address from, uint256 amount)\\r\\n        internal\\r\\n        virtual\\r\\n        returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a transfer out, ideally returning an explanatory error code upon failure rather than reverting.\\r\\n     *  If caller has not called checked protocol's balance, may revert due to insufficient cash held in the contract.\\r\\n     *  If caller has checked protocol's balance, and verified it is >= amount, this should not revert in normal conditions.\\r\\n     */\\r\\n    function doTransferOut(address payable to, uint256 amount) internal virtual;\\r\\n\\r\\n    /*** Reentrancy Guard ***/\\r\\n\\r\\n    /**\\r\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\r\\n     */\\r\\n    modifier nonReentrant() {\\r\\n        require(_notEntered, \\\"re-entered\\\");\\r\\n        _notEntered = false;\\r\\n        _;\\r\\n        _notEntered = true; // get a gas-refund post-Istanbul\\r\\n    }\\r\\n}\\r\\n\"},\"Nyke-lending-protocol/contracts/ExponentialNoError.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n/**\\r\\n * @title Exponential module for storing fixed-precision decimals\\r\\n * @author Compound\\r\\n * @notice Exp is a struct which stores decimals with a fixed precision of 18 decimal places.\\r\\n *         Thus, if we wanted to store the 5.1, mantissa would store 5.1e18. That is:\\r\\n *         `Exp({mantissa: 5100000000000000000})`.\\r\\n */\\r\\ncontract ExponentialNoError {\\r\\n    uint constant expScale = 1e18;\\r\\n    uint constant doubleScale = 1e36;\\r\\n    uint constant halfExpScale = expScale/2;\\r\\n    uint constant mantissaOne = expScale;\\r\\n\\r\\n    struct Exp {\\r\\n        uint mantissa;\\r\\n    }\\r\\n\\r\\n    struct Double {\\r\\n        uint mantissa;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Truncates the given exp to a whole number value.\\r\\n     *      For example, truncate(Exp{mantissa: 15 * expScale}) = 15\\r\\n     */\\r\\n    function truncate(Exp memory exp) pure internal returns (uint) {\\r\\n        // Note: We are not using careful math here as we're performing a division that cannot fail\\r\\n        return exp.mantissa / expScale;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Multiply an Exp by a scalar, then truncate to return an unsigned integer.\\r\\n     */\\r\\n    function mul_ScalarTruncate(Exp memory a, uint scalar) pure internal returns (uint) {\\r\\n        Exp memory product = mul_(a, scalar);\\r\\n        return truncate(product);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Multiply an Exp by a scalar, truncate, then add an to an unsigned integer, returning an unsigned integer.\\r\\n     */\\r\\n    function mul_ScalarTruncateAddUInt(Exp memory a, uint scalar, uint addend) pure internal returns (uint) {\\r\\n        Exp memory product = mul_(a, scalar);\\r\\n        return add_(truncate(product), addend);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Checks if first Exp is less than second Exp.\\r\\n     */\\r\\n    function lessThanExp(Exp memory left, Exp memory right) pure internal returns (bool) {\\r\\n        return left.mantissa < right.mantissa;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Checks if left Exp <= right Exp.\\r\\n     */\\r\\n    function lessThanOrEqualExp(Exp memory left, Exp memory right) pure internal returns (bool) {\\r\\n        return left.mantissa <= right.mantissa;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Checks if left Exp > right Exp.\\r\\n     */\\r\\n    function greaterThanExp(Exp memory left, Exp memory right) pure internal returns (bool) {\\r\\n        return left.mantissa > right.mantissa;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev returns true if Exp is exactly zero\\r\\n     */\\r\\n    function isZeroExp(Exp memory value) pure internal returns (bool) {\\r\\n        return value.mantissa == 0;\\r\\n    }\\r\\n\\r\\n    function safe224(uint n, string memory errorMessage) pure internal returns (uint224) {\\r\\n        require(n < 2**224, errorMessage);\\r\\n        return uint224(n);\\r\\n    }\\r\\n\\r\\n    function safe32(uint n, string memory errorMessage) pure internal returns (uint32) {\\r\\n        require(n < 2**32, errorMessage);\\r\\n        return uint32(n);\\r\\n    }\\r\\n\\r\\n    function add_(Exp memory a, Exp memory b) pure internal returns (Exp memory) {\\r\\n        return Exp({mantissa: add_(a.mantissa, b.mantissa)});\\r\\n    }\\r\\n\\r\\n    function add_(Double memory a, Double memory b) pure internal returns (Double memory) {\\r\\n        return Double({mantissa: add_(a.mantissa, b.mantissa)});\\r\\n    }\\r\\n\\r\\n    function add_(uint a, uint b) pure internal returns (uint) {\\r\\n        return a + b;\\r\\n    }\\r\\n\\r\\n    function sub_(Exp memory a, Exp memory b) pure internal returns (Exp memory) {\\r\\n        return Exp({mantissa: sub_(a.mantissa, b.mantissa)});\\r\\n    }\\r\\n\\r\\n    function sub_(Double memory a, Double memory b) pure internal returns (Double memory) {\\r\\n        return Double({mantissa: sub_(a.mantissa, b.mantissa)});\\r\\n    }\\r\\n\\r\\n    function sub_(uint a, uint b) pure internal returns (uint) {\\r\\n        return a - b;\\r\\n    }\\r\\n\\r\\n    function mul_(Exp memory a, Exp memory b) pure internal returns (Exp memory) {\\r\\n        return Exp({mantissa: mul_(a.mantissa, b.mantissa) / expScale});\\r\\n    }\\r\\n\\r\\n    function mul_(Exp memory a, uint b) pure internal returns (Exp memory) {\\r\\n        return Exp({mantissa: mul_(a.mantissa, b)});\\r\\n    }\\r\\n\\r\\n    function mul_(uint a, Exp memory b) pure internal returns (uint) {\\r\\n        return mul_(a, b.mantissa) / expScale;\\r\\n    }\\r\\n\\r\\n    function mul_(Double memory a, Double memory b) pure internal returns (Double memory) {\\r\\n        return Double({mantissa: mul_(a.mantissa, b.mantissa) / doubleScale});\\r\\n    }\\r\\n\\r\\n    function mul_(Double memory a, uint b) pure internal returns (Double memory) {\\r\\n        return Double({mantissa: mul_(a.mantissa, b)});\\r\\n    }\\r\\n\\r\\n    function mul_(uint a, Double memory b) pure internal returns (uint) {\\r\\n        return mul_(a, b.mantissa) / doubleScale;\\r\\n    }\\r\\n\\r\\n    function mul_(uint a, uint b) pure internal returns (uint) {\\r\\n        return a * b;\\r\\n    }\\r\\n\\r\\n    function div_(Exp memory a, Exp memory b) pure internal returns (Exp memory) {\\r\\n        return Exp({mantissa: div_(mul_(a.mantissa, expScale), b.mantissa)});\\r\\n    }\\r\\n\\r\\n    function div_(Exp memory a, uint b) pure internal returns (Exp memory) {\\r\\n        return Exp({mantissa: div_(a.mantissa, b)});\\r\\n    }\\r\\n\\r\\n    function div_(uint a, Exp memory b) pure internal returns (uint) {\\r\\n        return div_(mul_(a, expScale), b.mantissa);\\r\\n    }\\r\\n\\r\\n    function div_(Double memory a, Double memory b) pure internal returns (Double memory) {\\r\\n        return Double({mantissa: div_(mul_(a.mantissa, doubleScale), b.mantissa)});\\r\\n    }\\r\\n\\r\\n    function div_(Double memory a, uint b) pure internal returns (Double memory) {\\r\\n        return Double({mantissa: div_(a.mantissa, b)});\\r\\n    }\\r\\n\\r\\n    function div_(uint a, Double memory b) pure internal returns (uint) {\\r\\n        return div_(mul_(a, doubleScale), b.mantissa);\\r\\n    }\\r\\n\\r\\n    function div_(uint a, uint b) pure internal returns (uint) {\\r\\n        return a / b;\\r\\n    }\\r\\n\\r\\n    function fraction(uint a, uint b) pure internal returns (Double memory) {\\r\\n        return Double({mantissa: div_(mul_(a, doubleScale), b)});\\r\\n    }\\r\\n}\\r\\n\"},\"Nyke-lending-protocol/contracts/InterestRateModel.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n/**\\r\\n  * @title Compound's InterestRateModel Interface\\r\\n  * @author Compound\\r\\n  */\\r\\nabstract contract InterestRateModel {\\r\\n    /// @notice Indicator that this is an InterestRateModel contract (for inspection)\\r\\n    bool public constant isInterestRateModel = true;\\r\\n\\r\\n    /**\\r\\n      * @notice Calculates the current borrow interest rate per block\\r\\n      * @param cash The total amount of cash the market has\\r\\n      * @param borrows The total amount of borrows the market has outstanding\\r\\n      * @param reserves The total amount of reserves the market has\\r\\n      * @return The borrow rate per block (as a percentage, and scaled by 1e18)\\r\\n      */\\r\\n    function getBorrowRate(uint cash, uint borrows, uint reserves) virtual external view returns (uint);\\r\\n\\r\\n    /**\\r\\n      * @notice Calculates the current supply interest rate per block\\r\\n      * @param cash The total amount of cash the market has\\r\\n      * @param borrows The total amount of borrows the market has outstanding\\r\\n      * @param reserves The total amount of reserves the market has\\r\\n      * @param reserveFactorMantissa The current reserve factor the market has\\r\\n      * @return The supply rate per block (as a percentage, and scaled by 1e18)\\r\\n      */\\r\\n    function getSupplyRate(uint cash, uint borrows, uint reserves, uint reserveFactorMantissa) virtual external view returns (uint);\\r\\n}\\r\\n\"},\"Nyke-lending-protocol/contracts/EIP20Interface.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n/**\\r\\n * @title ERC 20 Token Standard Interface\\r\\n *  https://eips.ethereum.org/EIPS/eip-20\\r\\n */\\r\\ninterface EIP20Interface {\\r\\n    function name() external view returns (string memory);\\r\\n    function symbol() external view returns (string memory);\\r\\n    function decimals() external view returns (uint8);\\r\\n\\r\\n    /**\\r\\n      * @notice Get the total number of tokens in circulation\\r\\n      * @return The supply of tokens\\r\\n      */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Gets the balance of the specified address\\r\\n     * @param owner The address from which the balance will be retrieved\\r\\n     * @return balance The balance\\r\\n     */\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    /**\\r\\n      * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\r\\n      * @param dst The address of the destination account\\r\\n      * @param amount The number of tokens to transfer\\r\\n      * @return success Whether or not the transfer succeeded\\r\\n      */\\r\\n    function transfer(address dst, uint256 amount) external returns (bool success);\\r\\n\\r\\n    /**\\r\\n      * @notice Transfer `amount` tokens from `src` to `dst`\\r\\n      * @param src The address of the source account\\r\\n      * @param dst The address of the destination account\\r\\n      * @param amount The number of tokens to transfer\\r\\n      * @return success Whether or not the transfer succeeded\\r\\n      */\\r\\n    function transferFrom(address src, address dst, uint256 amount) external returns (bool success);\\r\\n\\r\\n    /**\\r\\n      * @notice Approve `spender` to transfer up to `amount` from `src`\\r\\n      * @dev This will overwrite the approval amount for `spender`\\r\\n      *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\r\\n      * @param spender The address of the account which may transfer tokens\\r\\n      * @param amount The number of tokens that are approved (-1 means infinite)\\r\\n      * @return success Whether or not the approval succeeded\\r\\n      */\\r\\n    function approve(address spender, uint256 amount) external returns (bool success);\\r\\n\\r\\n    /**\\r\\n      * @notice Get the current allowance from `owner` for `spender`\\r\\n      * @param owner The address of the account which owns the tokens to be spent\\r\\n      * @param spender The address of the account which may transfer tokens\\r\\n      * @return remaining The number of tokens allowed to be spent (-1 means infinite)\\r\\n      */\\r\\n    function allowance(address owner, address spender) external view returns (uint256 remaining);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\r\\n}\\r\\n\"},\"Nyke-lending-protocol/contracts/ErrorReporter.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\ncontract ComptrollerErrorReporter {\\r\\n    enum Error {\\r\\n        NO_ERROR,\\r\\n        UNAUTHORIZED,\\r\\n        COMPTROLLER_MISMATCH,\\r\\n        INSUFFICIENT_SHORTFALL,\\r\\n        INSUFFICIENT_LIQUIDITY,\\r\\n        INVALID_CLOSE_FACTOR,\\r\\n        INVALID_COLLATERAL_FACTOR,\\r\\n        INVALID_LIQUIDATION_INCENTIVE,\\r\\n        MARKET_NOT_ENTERED, // no longer possible\\r\\n        MARKET_NOT_LISTED,\\r\\n        MARKET_ALREADY_LISTED,\\r\\n        MATH_ERROR,\\r\\n        NONZERO_BORROW_BALANCE,\\r\\n        PRICE_ERROR,\\r\\n        REJECTION,\\r\\n        SNAPSHOT_ERROR,\\r\\n        TOO_MANY_ASSETS,\\r\\n        TOO_MUCH_REPAY\\r\\n    }\\r\\n\\r\\n    enum FailureInfo {\\r\\n        ACCEPT_ADMIN_PENDING_ADMIN_CHECK,\\r\\n        ACCEPT_PENDING_IMPLEMENTATION_ADDRESS_CHECK,\\r\\n        EXIT_MARKET_BALANCE_OWED,\\r\\n        EXIT_MARKET_REJECTION,\\r\\n        SET_CLOSE_FACTOR_OWNER_CHECK,\\r\\n        SET_CLOSE_FACTOR_VALIDATION,\\r\\n        SET_COLLATERAL_FACTOR_OWNER_CHECK,\\r\\n        SET_COLLATERAL_FACTOR_NO_EXISTS,\\r\\n        SET_COLLATERAL_FACTOR_VALIDATION,\\r\\n        SET_COLLATERAL_FACTOR_WITHOUT_PRICE,\\r\\n        SET_IMPLEMENTATION_OWNER_CHECK,\\r\\n        SET_LIQUIDATION_INCENTIVE_OWNER_CHECK,\\r\\n        SET_LIQUIDATION_INCENTIVE_VALIDATION,\\r\\n        SET_MAX_ASSETS_OWNER_CHECK,\\r\\n        SET_PENDING_ADMIN_OWNER_CHECK,\\r\\n        SET_PENDING_IMPLEMENTATION_OWNER_CHECK,\\r\\n        SET_PRICE_ORACLE_OWNER_CHECK,\\r\\n        SUPPORT_MARKET_EXISTS,\\r\\n        SUPPORT_MARKET_OWNER_CHECK,\\r\\n        SET_PAUSE_GUARDIAN_OWNER_CHECK\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev `error` corresponds to enum Error; `info` corresponds to enum FailureInfo, and `detail` is an arbitrary\\r\\n      * contract-specific code that enables us to report opaque error codes from upgradeable contracts.\\r\\n      **/\\r\\n    event Failure(uint error, uint info, uint detail);\\r\\n\\r\\n    /**\\r\\n      * @dev use this when reporting a known error from the money market or a non-upgradeable collaborator\\r\\n      */\\r\\n    function fail(Error err, FailureInfo info) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), 0);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n      * @dev use this when reporting an opaque error from an upgradeable collaborator contract\\r\\n      */\\r\\n    function failOpaque(Error err, FailureInfo info, uint opaqueError) internal returns (uint) {\\r\\n        emit Failure(uint(err), uint(info), opaqueError);\\r\\n\\r\\n        return uint(err);\\r\\n    }\\r\\n}\\r\\n\\r\\ncontract TokenErrorReporter {\\r\\n    uint public constant NO_ERROR = 0; // support legacy return codes\\r\\n\\r\\n    error TransferComptrollerRejection(uint256 errorCode);\\r\\n    error TransferNotAllowed();\\r\\n    error TransferNotEnough();\\r\\n    error TransferTooMuch();\\r\\n\\r\\n    error MintComptrollerRejection(uint256 errorCode);\\r\\n    error MintFreshnessCheck();\\r\\n\\r\\n    error RedeemComptrollerRejection(uint256 errorCode);\\r\\n    error RedeemFreshnessCheck();\\r\\n    error RedeemTransferOutNotPossible();\\r\\n\\r\\n    error BorrowComptrollerRejection(uint256 errorCode);\\r\\n    error BorrowFreshnessCheck();\\r\\n    error BorrowCashNotAvailable();\\r\\n\\r\\n    error RepayBorrowComptrollerRejection(uint256 errorCode);\\r\\n    error RepayBorrowFreshnessCheck();\\r\\n\\r\\n    error LiquidateComptrollerRejection(uint256 errorCode);\\r\\n    error LiquidateFreshnessCheck();\\r\\n    error LiquidateCollateralFreshnessCheck();\\r\\n    error LiquidateAccrueBorrowInterestFailed(uint256 errorCode);\\r\\n    error LiquidateAccrueCollateralInterestFailed(uint256 errorCode);\\r\\n    error LiquidateLiquidatorIsBorrower();\\r\\n    error LiquidateCloseAmountIsZero();\\r\\n    error LiquidateCloseAmountIsUintMax();\\r\\n    error LiquidateRepayBorrowFreshFailed(uint256 errorCode);\\r\\n\\r\\n    error LiquidateSeizeComptrollerRejection(uint256 errorCode);\\r\\n    error LiquidateSeizeLiquidatorIsBorrower();\\r\\n\\r\\n    error AcceptAdminPendingAdminCheck();\\r\\n\\r\\n    error SetComptrollerOwnerCheck();\\r\\n    error SetPendingAdminOwnerCheck();\\r\\n\\r\\n    error SetReserveFactorAdminCheck();\\r\\n    error SetReserveFactorFreshCheck();\\r\\n    error SetReserveFactorBoundsCheck();\\r\\n\\r\\n    error AddReservesFactorFreshCheck(uint256 actualAddAmount);\\r\\n\\r\\n    error ReduceReservesAdminCheck();\\r\\n    error ReduceReservesFreshCheck();\\r\\n    error ReduceReservesCashNotAvailable();\\r\\n    error ReduceReservesCashValidation();\\r\\n\\r\\n    error SetInterestRateModelOwnerCheck();\\r\\n    error SetInterestRateModelFreshCheck();\\r\\n}\\r\\n\"},\"Nyke-lending-protocol/contracts/CTokenInterfaces.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nimport \\\"./ComptrollerInterface.sol\\\";\\r\\nimport \\\"./InterestRateModel.sol\\\";\\r\\nimport \\\"./EIP20NonStandardInterface.sol\\\";\\r\\nimport \\\"./ErrorReporter.sol\\\";\\r\\n\\r\\ncontract CTokenStorage {\\r\\n    /**\\r\\n     * @dev Guard variable for re-entrancy checks\\r\\n     */\\r\\n    bool internal _notEntered;\\r\\n\\r\\n    /**\\r\\n     * @notice EIP-20 token name for this token\\r\\n     */\\r\\n    string public name;\\r\\n\\r\\n    /**\\r\\n     * @notice EIP-20 token symbol for this token\\r\\n     */\\r\\n    string public symbol;\\r\\n\\r\\n    /**\\r\\n     * @notice EIP-20 token decimals for this token\\r\\n     */\\r\\n    uint8 public decimals;\\r\\n\\r\\n    // Maximum borrow rate that can ever be applied (.00004% / block)\\r\\n    uint internal constant borrowRateMaxMantissa = 0.00004e16;\\r\\n\\r\\n    // Maximum fraction of interest that can be set aside for reserves\\r\\n    uint internal constant reserveFactorMaxMantissa = 1e18;\\r\\n\\r\\n    /**\\r\\n     * @notice Administrator for this contract\\r\\n     */\\r\\n    address payable public admin;\\r\\n\\r\\n    /**\\r\\n     * @notice Pending administrator for this contract\\r\\n     */\\r\\n    address payable public pendingAdmin;\\r\\n\\r\\n    /**\\r\\n     * @notice Contract which oversees inter-cToken operations\\r\\n     */\\r\\n    ComptrollerInterface public comptroller;\\r\\n\\r\\n    /**\\r\\n     * @notice Model which tells what the current interest rate should be\\r\\n     */\\r\\n    InterestRateModel public interestRateModel;\\r\\n\\r\\n    // Initial exchange rate used when minting the first CTokens (used when totalSupply = 0)\\r\\n    uint internal initialExchangeRateMantissa;\\r\\n\\r\\n    /**\\r\\n     * @notice Fraction of interest currently set aside for reserves\\r\\n     */\\r\\n    uint public reserveFactorMantissa;\\r\\n\\r\\n    /**\\r\\n     * @notice Block number that interest was last accrued at\\r\\n     */\\r\\n    uint public accrualBlockNumber;\\r\\n\\r\\n    /**\\r\\n     * @notice Accumulator of the total earned interest rate since the opening of the market\\r\\n     */\\r\\n    uint public borrowIndex;\\r\\n\\r\\n    /**\\r\\n     * @notice Total amount of outstanding borrows of the underlying in this market\\r\\n     */\\r\\n    uint public totalBorrows;\\r\\n\\r\\n    /**\\r\\n     * @notice Total amount of reserves of the underlying held in this market\\r\\n     */\\r\\n    uint public totalReserves;\\r\\n\\r\\n    /**\\r\\n     * @notice Total number of tokens in circulation\\r\\n     */\\r\\n    uint public totalSupply;\\r\\n\\r\\n    // Official record of token balances for each account\\r\\n    mapping (address => uint) internal accountTokens;\\r\\n\\r\\n    // Approved token transfer amounts on behalf of others\\r\\n    mapping (address => mapping (address => uint)) internal transferAllowances;\\r\\n\\r\\n    /**\\r\\n     * @notice Container for borrow balance information\\r\\n     * @member principal Total balance (with accrued interest), after applying the most recent balance-changing action\\r\\n     * @member interestIndex Global borrowIndex as of the most recent balance-changing action\\r\\n     */\\r\\n    struct BorrowSnapshot {\\r\\n        uint principal;\\r\\n        uint interestIndex;\\r\\n    }\\r\\n\\r\\n    // Mapping of account addresses to outstanding borrow balances\\r\\n    mapping(address => BorrowSnapshot) internal accountBorrows;\\r\\n\\r\\n    /**\\r\\n     * @notice Share of seized collateral that is added to reserves\\r\\n     */\\r\\n    uint public constant protocolSeizeShareMantissa = 2.8e16; //2.8%\\r\\n}\\r\\n\\r\\nabstract contract CTokenInterface is CTokenStorage {\\r\\n    /**\\r\\n     * @notice Indicator that this is a CToken contract (for inspection)\\r\\n     */\\r\\n    bool public constant isCToken = true;\\r\\n\\r\\n\\r\\n    /*** Market Events ***/\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when interest is accrued\\r\\n     */\\r\\n    event AccrueInterest(uint cashPrior, uint interestAccumulated, uint borrowIndex, uint totalBorrows);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when tokens are minted\\r\\n     */\\r\\n    event Mint(address minter, uint mintAmount, uint mintTokens);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when tokens are redeemed\\r\\n     */\\r\\n    event Redeem(address redeemer, uint redeemAmount, uint redeemTokens);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when underlying is borrowed\\r\\n     */\\r\\n    event Borrow(address borrower, uint borrowAmount, uint accountBorrows, uint totalBorrows);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when a borrow is repaid\\r\\n     */\\r\\n    event RepayBorrow(address payer, address borrower, uint repayAmount, uint accountBorrows, uint totalBorrows);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when a borrow is liquidated\\r\\n     */\\r\\n    event LiquidateBorrow(address liquidator, address borrower, uint repayAmount, address cTokenCollateral, uint seizeTokens);\\r\\n\\r\\n\\r\\n    /*** Admin Events ***/\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when pendingAdmin is changed\\r\\n     */\\r\\n    event NewPendingAdmin(address oldPendingAdmin, address newPendingAdmin);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when pendingAdmin is accepted, which means admin is updated\\r\\n     */\\r\\n    event NewAdmin(address oldAdmin, address newAdmin);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when comptroller is changed\\r\\n     */\\r\\n    event NewComptroller(ComptrollerInterface oldComptroller, ComptrollerInterface newComptroller);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when interestRateModel is changed\\r\\n     */\\r\\n    event NewMarketInterestRateModel(InterestRateModel oldInterestRateModel, InterestRateModel newInterestRateModel);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when the reserve factor is changed\\r\\n     */\\r\\n    event NewReserveFactor(uint oldReserveFactorMantissa, uint newReserveFactorMantissa);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when the reserves are added\\r\\n     */\\r\\n    event ReservesAdded(address benefactor, uint addAmount, uint newTotalReserves);\\r\\n\\r\\n    /**\\r\\n     * @notice Event emitted when the reserves are reduced\\r\\n     */\\r\\n    event ReservesReduced(address admin, uint reduceAmount, uint newTotalReserves);\\r\\n\\r\\n    /**\\r\\n     * @notice EIP20 Transfer event\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint amount);\\r\\n\\r\\n    /**\\r\\n     * @notice EIP20 Approval event\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint amount);\\r\\n\\r\\n\\r\\n    /*** User Interface ***/\\r\\n\\r\\n    function transfer(address dst, uint amount) virtual external returns (bool);\\r\\n    function transferFrom(address src, address dst, uint amount) virtual external returns (bool);\\r\\n    function approve(address spender, uint amount) virtual external returns (bool);\\r\\n    function allowance(address owner, address spender) virtual external view returns (uint);\\r\\n    function balanceOf(address owner) virtual external view returns (uint);\\r\\n    function balanceOfUnderlying(address owner) virtual external returns (uint);\\r\\n    function getAccountSnapshot(address account) virtual external view returns (uint, uint, uint, uint);\\r\\n    function borrowRatePerBlock() virtual external view returns (uint);\\r\\n    function supplyRatePerBlock() virtual external view returns (uint);\\r\\n    function totalBorrowsCurrent() virtual external returns (uint);\\r\\n    function borrowBalanceCurrent(address account) virtual external returns (uint);\\r\\n    function borrowBalanceStored(address account) virtual external view returns (uint);\\r\\n    function exchangeRateCurrent() virtual external returns (uint);\\r\\n    function exchangeRateStored() virtual external view returns (uint);\\r\\n    function getCash() virtual external view returns (uint);\\r\\n    function accrueInterest() virtual external returns (uint);\\r\\n    function seize(address liquidator, address borrower, uint seizeTokens) virtual external returns (uint);\\r\\n\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n    function _setPendingAdmin(address payable newPendingAdmin) virtual external returns (uint);\\r\\n    function _acceptAdmin() virtual external returns (uint);\\r\\n    function _setComptroller(ComptrollerInterface newComptroller) virtual external returns (uint);\\r\\n    function _setReserveFactor(uint newReserveFactorMantissa) virtual external returns (uint);\\r\\n    function _reduceReserves(uint reduceAmount) virtual external returns (uint);\\r\\n    function _setInterestRateModel(InterestRateModel newInterestRateModel) virtual external returns (uint);\\r\\n}\\r\\n\\r\\ncontract CErc20Storage {\\r\\n    /**\\r\\n     * @notice Underlying asset for this CToken\\r\\n     */\\r\\n    address public underlying;\\r\\n}\\r\\n\\r\\nabstract contract CErc20Interface is CErc20Storage {\\r\\n\\r\\n    /*** User Interface ***/\\r\\n\\r\\n    function mint(uint mintAmount) virtual external returns (uint);\\r\\n    function redeem(uint redeemTokens) virtual external returns (uint);\\r\\n    function redeemUnderlying(uint redeemAmount) virtual external returns (uint);\\r\\n    function borrow(uint borrowAmount) virtual external returns (uint);\\r\\n    function repayBorrow(uint repayAmount) virtual external returns (uint);\\r\\n    function repayBorrowBehalf(address borrower, uint repayAmount) virtual external returns (uint);\\r\\n    function liquidateBorrow(address borrower, uint repayAmount, CTokenInterface cTokenCollateral) virtual external returns (uint);\\r\\n    function sweepToken(EIP20NonStandardInterface token) virtual external;\\r\\n\\r\\n\\r\\n    /*** Admin Functions ***/\\r\\n\\r\\n    function _addReserves(uint addAmount) virtual external returns (uint);\\r\\n}\\r\\n\\r\\ncontract CDelegationStorage {\\r\\n    /**\\r\\n     * @notice Implementation address for this contract\\r\\n     */\\r\\n    address public implementation;\\r\\n}\\r\\n\\r\\nabstract contract CDelegatorInterface is CDelegationStorage {\\r\\n    /**\\r\\n     * @notice Emitted when implementation is changed\\r\\n     */\\r\\n    event NewImplementation(address oldImplementation, address newImplementation);\\r\\n\\r\\n    /**\\r\\n     * @notice Called by the admin to update the implementation of the delegator\\r\\n     * @param implementation_ The address of the new implementation for delegation\\r\\n     * @param allowResign Flag to indicate whether to call _resignImplementation on the old implementation\\r\\n     * @param becomeImplementationData The encoded bytes data to be passed to _becomeImplementation\\r\\n     */\\r\\n    function _setImplementation(address implementation_, bool allowResign, bytes memory becomeImplementationData) virtual external;\\r\\n}\\r\\n\\r\\nabstract contract CDelegateInterface is CDelegationStorage {\\r\\n    /**\\r\\n     * @notice Called by the delegator on a delegate to initialize it for duty\\r\\n     * @dev Should revert if any issues arise which make it unfit for delegation\\r\\n     * @param data The encoded bytes data for any initialization\\r\\n     */\\r\\n    function _becomeImplementation(bytes memory data) virtual external;\\r\\n\\r\\n    /**\\r\\n     * @notice Called by the delegator on a delegate to forfeit its responsibility\\r\\n     */\\r\\n    function _resignImplementation() virtual external;\\r\\n}\\r\\n\"},\"Nyke-lending-protocol/contracts/ComptrollerInterface.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\nabstract contract ComptrollerInterface {\\r\\n    /// @notice Indicator that this is a Comptroller contract (for inspection)\\r\\n    bool public constant isComptroller = true;\\r\\n\\r\\n    /*** Assets You Are In ***/\\r\\n\\r\\n    function enterMarkets(address[] calldata cTokens) virtual external returns (uint[] memory);\\r\\n    function exitMarket(address cToken) virtual external returns (uint);\\r\\n\\r\\n    /*** Policy Hooks ***/\\r\\n\\r\\n    function mintAllowed(address cToken, address minter, uint mintAmount) virtual external returns (uint);\\r\\n    function mintVerify(address cToken, address minter, uint mintAmount, uint mintTokens) virtual external;\\r\\n\\r\\n    function redeemAllowed(address cToken, address redeemer, uint redeemTokens) virtual external returns (uint);\\r\\n    function redeemVerify(address cToken, address redeemer, uint redeemAmount, uint redeemTokens) virtual external;\\r\\n\\r\\n    function borrowAllowed(address cToken, address borrower, uint borrowAmount) virtual external returns (uint);\\r\\n    function borrowVerify(address cToken, address borrower, uint borrowAmount) virtual external;\\r\\n\\r\\n    function repayBorrowAllowed(\\r\\n        address cToken,\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount) virtual external returns (uint);\\r\\n    function repayBorrowVerify(\\r\\n        address cToken,\\r\\n        address payer,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint borrowerIndex) virtual external;\\r\\n\\r\\n    function liquidateBorrowAllowed(\\r\\n        address cTokenBorrowed,\\r\\n        address cTokenCollateral,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount) virtual external returns (uint);\\r\\n    function liquidateBorrowVerify(\\r\\n        address cTokenBorrowed,\\r\\n        address cTokenCollateral,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint repayAmount,\\r\\n        uint seizeTokens) virtual external;\\r\\n\\r\\n    function seizeAllowed(\\r\\n        address cTokenCollateral,\\r\\n        address cTokenBorrowed,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint seizeTokens) virtual external returns (uint);\\r\\n    function seizeVerify(\\r\\n        address cTokenCollateral,\\r\\n        address cTokenBorrowed,\\r\\n        address liquidator,\\r\\n        address borrower,\\r\\n        uint seizeTokens) virtual external;\\r\\n\\r\\n    function transferAllowed(address cToken, address src, address dst, uint transferTokens) virtual external returns (uint);\\r\\n    function transferVerify(address cToken, address src, address dst, uint transferTokens) virtual external;\\r\\n\\r\\n    /*** Liquidity/Liquidation Calculations ***/\\r\\n\\r\\n    function liquidateCalculateSeizeTokens(\\r\\n        address cTokenBorrowed,\\r\\n        address cTokenCollateral,\\r\\n        uint repayAmount) virtual external view returns (uint, uint);\\r\\n}\\r\\n\"},\"Nyke-lending-protocol/contracts/EIP20NonStandardInterface.sol\":{\"content\":\"// SPDX-License-Identifier: BSD-3-Clause\\r\\npragma solidity ^0.8.10;\\r\\n\\r\\n/**\\r\\n * @title EIP20NonStandardInterface\\r\\n * @dev Version of ERC20 with no return values for `transfer` and `transferFrom`\\r\\n *  See https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca\\r\\n */\\r\\ninterface EIP20NonStandardInterface {\\r\\n\\r\\n    /**\\r\\n     * @notice Get the total number of tokens in circulation\\r\\n     * @return The supply of tokens\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @notice Gets the balance of the specified address\\r\\n     * @param owner The address from which the balance will be retrieved\\r\\n     * @return balance The balance\\r\\n     */\\r\\n    function balanceOf(address owner) external view returns (uint256 balance);\\r\\n\\r\\n    ///\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    /// !!! NOTICE !!! `transfer` does not return a value, in violation of the ERC-20 specification\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    ///\\r\\n\\r\\n    /**\\r\\n      * @notice Transfer `amount` tokens from `msg.sender` to `dst`\\r\\n      * @param dst The address of the destination account\\r\\n      * @param amount The number of tokens to transfer\\r\\n      */\\r\\n    function transfer(address dst, uint256 amount) external;\\r\\n\\r\\n    ///\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    /// !!! NOTICE !!! `transferFrom` does not return a value, in violation of the ERC-20 specification\\r\\n    /// !!!!!!!!!!!!!!\\r\\n    ///\\r\\n\\r\\n    /**\\r\\n      * @notice Transfer `amount` tokens from `src` to `dst`\\r\\n      * @param src The address of the source account\\r\\n      * @param dst The address of the destination account\\r\\n      * @param amount The number of tokens to transfer\\r\\n      */\\r\\n    function transferFrom(address src, address dst, uint256 amount) external;\\r\\n\\r\\n    /**\\r\\n      * @notice Approve `spender` to transfer up to `amount` from `src`\\r\\n      * @dev This will overwrite the approval amount for `spender`\\r\\n      *  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\\r\\n      * @param spender The address of the account which may transfer tokens\\r\\n      * @param amount The number of tokens that are approved\\r\\n      * @return success Whether or not the approval succeeded\\r\\n      */\\r\\n    function approve(address spender, uint256 amount) external returns (bool success);\\r\\n\\r\\n    /**\\r\\n      * @notice Get the current allowance from `owner` for `spender`\\r\\n      * @param owner The address of the account which owns the tokens to be spent\\r\\n      * @param spender The address of the account which may transfer tokens\\r\\n      * @return remaining The number of tokens allowed to be spent\\r\\n      */\\r\\n    function allowance(address owner, address spender) external view returns (uint256 remaining);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\r\\n}\\r\\n\"}},\"settings\":{\"optimizer\":{\"enabled\":true,\"runs\":200},\"outputSelection\":{\"*\":{\"\":[\"ast\"],\"*\":[\"abi\",\"metadata\",\"devdoc\",\"userdoc\",\"storageLayout\",\"evm.legacyAssembly\",\"evm.bytecode\",\"evm.deployedBytecode\",\"evm.methodIdentifiers\",\"evm.gasEstimates\",\"evm.assembly\"]}},\"remappings\":[]}}",
	"name": "CErc20Immutable",
	"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AcceptAdminPendingAdminCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actualAddAmount\",\"type\":\"uint256\"}],\"name\":\"AddReservesFactorFreshCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowCashNotAvailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"BorrowComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateAccrueBorrowInterestFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateAccrueCollateralInterestFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateCloseAmountIsUintMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateCloseAmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateCollateralFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateLiquidatorIsBorrower\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateRepayBorrowFreshFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateSeizeComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateSeizeLiquidatorIsBorrower\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"MintComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"RedeemComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RedeemFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RedeemTransferOutNotPossible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReduceReservesAdminCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReduceReservesCashNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReduceReservesCashValidation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReduceReservesFreshCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"RepayBorrowComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RepayBorrowFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetComptrollerOwnerCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetInterestRateModelFreshCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetInterestRateModelOwnerCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetPendingAdminOwnerCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetReserveFactorAdminCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetReserveFactorBoundsCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetReserveFactorFreshCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"TransferComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferNotEnough\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferTooMuch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashPrior\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestAccumulated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"AccrueInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"LiquidateBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintTokens\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"oldComptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"NewComptroller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"oldInterestRateModel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"NewMarketInterestRateModel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldReserveFactorMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"NewReserveFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"RepayBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"addAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesReduced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NO_ERROR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"addAmount\",\"type\":\"uint256\"}],\"name\":\"_addReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"compLikeDelegatee\",\"type\":\"address\"}],\"name\":\"_delegateCompLikeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"}],\"name\":\"_reduceReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"_setComptroller\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"_setInterestRateModel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"_setReserveFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrualBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRateModel\",\"outputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract CTokenInterface\",\"name\":\"cTokenCollateral\",\"type\":\"address\"}],\"name\":\"liquidateBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolSeizeShareMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"repayBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"repayBorrowBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"seize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract EIP20NonStandardInterface\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrowsCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Compound\",\"kind\":\"dev\",\"methods\":{\"_acceptAdmin()\":{\"details\":\"Admin function for pending admin to accept role and update admin\",\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_addReserves(uint256)\":{\"params\":{\"addAmount\":\"The amount fo underlying token to add as reserves\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_delegateCompLikeTo(address)\":{\"details\":\"CTokens whose underlying are not CompLike should revert here\",\"params\":{\"compLikeDelegatee\":\"The address to delegate votes to\"}},\"_reduceReserves(uint256)\":{\"params\":{\"reduceAmount\":\"Amount of reduction to reserves\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_setComptroller(address)\":{\"details\":\"Admin function to set a new comptroller\",\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_setInterestRateModel(address)\":{\"details\":\"Admin function to accrue interest and update the interest rate model\",\"params\":{\"newInterestRateModel\":\"the new interest rate model to use\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_setPendingAdmin(address)\":{\"details\":\"Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\",\"params\":{\"newPendingAdmin\":\"New pending admin.\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"_setReserveFactor(uint256)\":{\"details\":\"Admin function to accrue interest and set a new reserve factor\",\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"accrueInterest()\":{\"details\":\"This calculates interest accrued from the last checkpointed block   up to the current block and writes new checkpoint to storage.\"},\"allowance(address,address)\":{\"params\":{\"owner\":\"The address of the account which owns the tokens to be spent\",\"spender\":\"The address of the account which may transfer tokens\"},\"returns\":{\"_0\":\"The number of tokens allowed to be spent (-1 means infinite)\"}},\"approve(address,uint256)\":{\"details\":\"This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)\",\"params\":{\"amount\":\"The number of tokens that are approved (uint256.max means infinite)\",\"spender\":\"The address of the account which may transfer tokens\"},\"returns\":{\"_0\":\"Whether or not the approval succeeded\"}},\"balanceOf(address)\":{\"params\":{\"owner\":\"The address of the account to query\"},\"returns\":{\"_0\":\"The number of tokens owned by `owner`\"}},\"balanceOfUnderlying(address)\":{\"details\":\"This also accrues interest in a transaction\",\"params\":{\"owner\":\"The address of the account to query\"},\"returns\":{\"_0\":\"The amount of underlying owned by `owner`\"}},\"borrow(uint256)\":{\"params\":{\"borrowAmount\":\"The amount of the underlying asset to borrow\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"borrowBalanceCurrent(address)\":{\"params\":{\"account\":\"The address whose balance should be calculated after updating borrowIndex\"},\"returns\":{\"_0\":\"The calculated balance\"}},\"borrowBalanceStored(address)\":{\"params\":{\"account\":\"The address whose balance should be calculated\"},\"returns\":{\"_0\":\"The calculated balance\"}},\"borrowRatePerBlock()\":{\"returns\":{\"_0\":\"The borrow interest rate per block, scaled by 1e18\"}},\"constructor\":{\"params\":{\"admin_\":\"Address of the administrator of this token\",\"comptroller_\":\"The address of the Comptroller\",\"decimals_\":\"ERC-20 decimal precision of this token\",\"initialExchangeRateMantissa_\":\"The initial exchange rate, scaled by 1e18\",\"interestRateModel_\":\"The address of the interest rate model\",\"name_\":\"ERC-20 name of this token\",\"symbol_\":\"ERC-20 symbol of this token\",\"underlying_\":\"The address of the underlying asset\"}},\"exchangeRateCurrent()\":{\"returns\":{\"_0\":\"Calculated exchange rate scaled by 1e18\"}},\"exchangeRateStored()\":{\"details\":\"This function does not accrue interest before calculating the exchange rate\",\"returns\":{\"_0\":\"Calculated exchange rate scaled by 1e18\"}},\"getAccountSnapshot(address)\":{\"details\":\"This is used by comptroller to more efficiently perform liquidity checks.\",\"params\":{\"account\":\"Address of the account to snapshot\"},\"returns\":{\"_0\":\"(possible error, token balance, borrow balance, exchange rate mantissa)\"}},\"getCash()\":{\"returns\":{\"_0\":\"The quantity of underlying asset owned by this contract\"}},\"initialize(address,address,address,uint256,string,string,uint8)\":{\"params\":{\"comptroller_\":\"The address of the Comptroller\",\"decimals_\":\"ERC-20 decimal precision of this token\",\"initialExchangeRateMantissa_\":\"The initial exchange rate, scaled by 1e18\",\"interestRateModel_\":\"The address of the interest rate model\",\"name_\":\"ERC-20 name of this token\",\"symbol_\":\"ERC-20 symbol of this token\",\"underlying_\":\"The address of the underlying asset\"}},\"initialize(address,address,uint256,string,string,uint8)\":{\"params\":{\"comptroller_\":\"The address of the Comptroller\",\"decimals_\":\"EIP-20 decimal precision of this token\",\"initialExchangeRateMantissa_\":\"The initial exchange rate, scaled by 1e18\",\"interestRateModel_\":\"The address of the interest rate model\",\"name_\":\"EIP-20 name of this token\",\"symbol_\":\"EIP-20 symbol of this token\"}},\"liquidateBorrow(address,uint256,address)\":{\"params\":{\"borrower\":\"The borrower of this cToken to be liquidated\",\"cTokenCollateral\":\"The market in which to seize collateral from the borrower\",\"repayAmount\":\"The amount of the underlying borrowed asset to repay\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"mint(uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"mintAmount\":\"The amount of the underlying asset to supply\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"redeem(uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"redeemTokens\":\"The number of cTokens to redeem into underlying\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"redeemUnderlying(uint256)\":{\"details\":\"Accrues interest whether or not the operation succeeds, unless reverted\",\"params\":{\"redeemAmount\":\"The amount of underlying to redeem\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"repayBorrow(uint256)\":{\"params\":{\"repayAmount\":\"The amount to repay, or -1 for the full outstanding amount\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"repayBorrowBehalf(address,uint256)\":{\"params\":{\"borrower\":\"the account with the debt being payed off\",\"repayAmount\":\"The amount to repay, or -1 for the full outstanding amount\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"seize(address,address,uint256)\":{\"details\":\"Will fail unless called by another cToken during the process of liquidation.  Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.\",\"params\":{\"borrower\":\"The account having collateral seized\",\"liquidator\":\"The account receiving seized collateral\",\"seizeTokens\":\"The number of cTokens to seize\"},\"returns\":{\"_0\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"}},\"supplyRatePerBlock()\":{\"returns\":{\"_0\":\"The supply interest rate per block, scaled by 1e18\"}},\"sweepToken(address)\":{\"params\":{\"token\":\"The address of the ERC-20 token to sweep\"}},\"totalBorrowsCurrent()\":{\"returns\":{\"_0\":\"The total borrows with interest\"}},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"The number of tokens to transfer\",\"dst\":\"The address of the destination account\",\"src\":\"The address of the source account\"},\"returns\":{\"_0\":\"Whether or not the transfer succeeded\"}}},\"title\":\"Compound's CErc20Immutable Contract\",\"version\":1},\"userdoc\":{\"events\":{\"AccrueInterest(uint256,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when interest is accrued\"},\"Approval(address,address,uint256)\":{\"notice\":\"EIP20 Approval event\"},\"Borrow(address,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when underlying is borrowed\"},\"LiquidateBorrow(address,address,uint256,address,uint256)\":{\"notice\":\"Event emitted when a borrow is liquidated\"},\"Mint(address,uint256,uint256)\":{\"notice\":\"Event emitted when tokens are minted\"},\"NewAdmin(address,address)\":{\"notice\":\"Event emitted when pendingAdmin is accepted, which means admin is updated\"},\"NewComptroller(address,address)\":{\"notice\":\"Event emitted when comptroller is changed\"},\"NewMarketInterestRateModel(address,address)\":{\"notice\":\"Event emitted when interestRateModel is changed\"},\"NewPendingAdmin(address,address)\":{\"notice\":\"Event emitted when pendingAdmin is changed\"},\"NewReserveFactor(uint256,uint256)\":{\"notice\":\"Event emitted when the reserve factor is changed\"},\"Redeem(address,uint256,uint256)\":{\"notice\":\"Event emitted when tokens are redeemed\"},\"RepayBorrow(address,address,uint256,uint256,uint256)\":{\"notice\":\"Event emitted when a borrow is repaid\"},\"ReservesAdded(address,uint256,uint256)\":{\"notice\":\"Event emitted when the reserves are added\"},\"ReservesReduced(address,uint256,uint256)\":{\"notice\":\"Event emitted when the reserves are reduced\"},\"Transfer(address,address,uint256)\":{\"notice\":\"EIP20 Transfer event\"}},\"kind\":\"user\",\"methods\":{\"_acceptAdmin()\":{\"notice\":\"Accepts transfer of admin rights. msg.sender must be pendingAdmin\"},\"_addReserves(uint256)\":{\"notice\":\"The sender adds to reserves.\"},\"_delegateCompLikeTo(address)\":{\"notice\":\"Admin call to delegate the votes of the COMP-like underlying\"},\"_reduceReserves(uint256)\":{\"notice\":\"Accrues interest and reduces reserves by transferring to admin\"},\"_setComptroller(address)\":{\"notice\":\"Sets a new comptroller for the market\"},\"_setInterestRateModel(address)\":{\"notice\":\"accrues interest and updates the interest rate model using _setInterestRateModelFresh\"},\"_setPendingAdmin(address)\":{\"notice\":\"Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.\"},\"_setReserveFactor(uint256)\":{\"notice\":\"accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh\"},\"accrualBlockNumber()\":{\"notice\":\"Block number that interest was last accrued at\"},\"accrueInterest()\":{\"notice\":\"Applies accrued interest to total borrows and reserves\"},\"admin()\":{\"notice\":\"Administrator for this contract\"},\"allowance(address,address)\":{\"notice\":\"Get the current allowance from `owner` for `spender`\"},\"approve(address,uint256)\":{\"notice\":\"Approve `spender` to transfer up to `amount` from `src`\"},\"balanceOf(address)\":{\"notice\":\"Get the token balance of the `owner`\"},\"balanceOfUnderlying(address)\":{\"notice\":\"Get the underlying balance of the `owner`\"},\"borrow(uint256)\":{\"notice\":\"Sender borrows assets from the protocol to their own address\"},\"borrowBalanceCurrent(address)\":{\"notice\":\"Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex\"},\"borrowBalanceStored(address)\":{\"notice\":\"Return the borrow balance of account based on stored data\"},\"borrowIndex()\":{\"notice\":\"Accumulator of the total earned interest rate since the opening of the market\"},\"borrowRatePerBlock()\":{\"notice\":\"Returns the current per-block borrow interest rate for this cToken\"},\"comptroller()\":{\"notice\":\"Contract which oversees inter-cToken operations\"},\"constructor\":{\"notice\":\"Construct a new money market\"},\"decimals()\":{\"notice\":\"EIP-20 token decimals for this token\"},\"exchangeRateCurrent()\":{\"notice\":\"Accrue interest then return the up-to-date exchange rate\"},\"exchangeRateStored()\":{\"notice\":\"Calculates the exchange rate from the underlying to the CToken\"},\"getAccountSnapshot(address)\":{\"notice\":\"Get a snapshot of the account's balances, and the cached exchange rate\"},\"getCash()\":{\"notice\":\"Get cash balance of this cToken in the underlying asset\"},\"initialize(address,address,address,uint256,string,string,uint8)\":{\"notice\":\"Initialize the new money market\"},\"initialize(address,address,uint256,string,string,uint8)\":{\"notice\":\"Initialize the money market\"},\"interestRateModel()\":{\"notice\":\"Model which tells what the current interest rate should be\"},\"isCToken()\":{\"notice\":\"Indicator that this is a CToken contract (for inspection)\"},\"liquidateBorrow(address,uint256,address)\":{\"notice\":\"The sender liquidates the borrowers collateral.  The collateral seized is transferred to the liquidator.\"},\"mint(uint256)\":{\"notice\":\"Sender supplies assets into the market and receives cTokens in exchange\"},\"name()\":{\"notice\":\"EIP-20 token name for this token\"},\"pendingAdmin()\":{\"notice\":\"Pending administrator for this contract\"},\"protocolSeizeShareMantissa()\":{\"notice\":\"Share of seized collateral that is added to reserves\"},\"redeem(uint256)\":{\"notice\":\"Sender redeems cTokens in exchange for the underlying asset\"},\"redeemUnderlying(uint256)\":{\"notice\":\"Sender redeems cTokens in exchange for a specified amount of underlying asset\"},\"repayBorrow(uint256)\":{\"notice\":\"Sender repays their own borrow\"},\"repayBorrowBehalf(address,uint256)\":{\"notice\":\"Sender repays a borrow belonging to borrower\"},\"reserveFactorMantissa()\":{\"notice\":\"Fraction of interest currently set aside for reserves\"},\"seize(address,address,uint256)\":{\"notice\":\"Transfers collateral tokens (this market) to the liquidator.\"},\"supplyRatePerBlock()\":{\"notice\":\"Returns the current per-block supply interest rate for this cToken\"},\"sweepToken(address)\":{\"notice\":\"A public function to sweep accidental ERC-20 transfers to this contract. Tokens are sent to admin (timelock)\"},\"symbol()\":{\"notice\":\"EIP-20 token symbol for this token\"},\"totalBorrows()\":{\"notice\":\"Total amount of outstanding borrows of the underlying in this market\"},\"totalBorrowsCurrent()\":{\"notice\":\"Returns the current total borrows plus accrued interest\"},\"totalReserves()\":{\"notice\":\"Total amount of reserves of the underlying held in this market\"},\"totalSupply()\":{\"notice\":\"Total number of tokens in circulation\"},\"transfer(address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `msg.sender` to `dst`\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfer `amount` tokens from `src` to `dst`\"},\"underlying()\":{\"notice\":\"Underlying asset for this CToken\"}},\"notice\":\"CTokens which wrap an EIP-20 underlying and are immutable\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Nyke-lending-protocol/contracts/CErc20Immutable.sol\":\"CErc20Immutable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Nyke-lending-protocol/contracts/CErc20.sol\":{\"keccak256\":\"0x248c13982104a3731db5bb91981ea88684596fbf569770a615a4ce56f2eaf85e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://6b66db04f563cf28af8b178033ca2693886268e5296b2b349a01c6c22b11f0e8\",\"dweb:/ipfs/QmUTreJgrFdAZyMediRaqwaeAUEqsZpe2Be8mV7HVikkui\"]},\"Nyke-lending-protocol/contracts/CErc20Immutable.sol\":{\"keccak256\":\"0x5617651817058735066ec9f91c47428648f7a215ed9b40089d5018e643e629ad\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://9551ccebb146e78a4bdafb5a841cc75504aab293ce3306b37300556bd8be96f0\",\"dweb:/ipfs/QmNmdDGRqxXe9uDecryyautt9Gq1owBeddjyLPpEWLQZne\"]},\"Nyke-lending-protocol/contracts/CToken.sol\":{\"keccak256\":\"0x17f98706dda2550609f3ad1a0f587b42dafd4ef6e2fc294b29d86eb84baf6444\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://b55e57fc2597ab1c53ec1b1da85ff54d4e23520f32f4d8c8e3f36250fa364e24\",\"dweb:/ipfs/QmYAcTHGPxhdLupLn9iNqETMwqGruknQvsVfmxhJbFNwzE\"]},\"Nyke-lending-protocol/contracts/CTokenInterfaces.sol\":{\"keccak256\":\"0xb8a954ad43ef40d3ef7f3b0cc0786e1fb346a8cbed0c7e760d83ab796bbae0a1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://e91c7df34df8ef4ca3bcdb201b7f969c8691d650f9cd481bd16f2ea5719a7461\",\"dweb:/ipfs/QmVfEmFCtt2Dk6zPjFYB9TXMaz4xHujo1ytXUqnJ6y31kg\"]},\"Nyke-lending-protocol/contracts/ComptrollerInterface.sol\":{\"keccak256\":\"0x35b21331eeb8adcbe6c81ef059f467051db884d42a5816c9254ad5df33e1ddc1\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://2f959b51e2a07797c9d25f8965e59cc2afb0a3e83259fb14528454a3e62cc38e\",\"dweb:/ipfs/QmY2NkW3skXpV5wgwQLbjJdRhsZGwWi3BiSkJ1FoAyK3kZ\"]},\"Nyke-lending-protocol/contracts/EIP20Interface.sol\":{\"keccak256\":\"0x6766042a407f17e340589ec7c0205456ddb83db990fe917586cbaec8e381e506\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://5710f893f8ad3b4625714f75f6cac7fda3f6a5773d6d65d2afc4303f016c35b3\",\"dweb:/ipfs/QmZxoKJhMQ7te3aCtBgPnstAPcvaaTnnNNk5FXA3MDHcKm\"]},\"Nyke-lending-protocol/contracts/EIP20NonStandardInterface.sol\":{\"keccak256\":\"0xc73640b236e5f5993d48ea7b8607c1825d700b852fe3fbc2bc07112b62bd249e\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://facf04f1843f8da5c52bec0e9e3cfacaa585c53660ec10ca8daf020ccbd0bfee\",\"dweb:/ipfs/QmTjdRDWG8DGd7eSmvxUbHeaaiGsUkuHmcJHYXTYHqG84s\"]},\"Nyke-lending-protocol/contracts/ErrorReporter.sol\":{\"keccak256\":\"0x3f8fa3350921f633b45a9312a90b3375db3c6844dca40daaf8256ab4f32d902c\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://5b4e0e1914b1eb13062c56b7a32133ead94431b1f5bd73a0e8fe06f7addf04b7\",\"dweb:/ipfs/QmdsxZafm88dE8pkjkxifbBrFy6Ct6DLhE8Lbq59KVxbHZ\"]},\"Nyke-lending-protocol/contracts/ExponentialNoError.sol\":{\"keccak256\":\"0x37e1a38f9d77e12761f079a277904f2fd20b80fb79da9f5854851fefe1b5d358\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://a468607fa9779d35dcdfcaa152430174add421fd76a5ed7530288c2378eb1dfc\",\"dweb:/ipfs/QmencrEm5bupkLKU1wCWgsQushfZNAtCvuTYMtHBfyLZKn\"]},\"Nyke-lending-protocol/contracts/InterestRateModel.sol\":{\"keccak256\":\"0xc9165c6470843312db10221c408840d907786ab238156cd22b1e428b9dc93c2a\",\"license\":\"BSD-3-Clause\",\"urls\":[\"bzz-raw://fda54b0b9ab834fa0d8337563801f5397c18cde8d776e1e0f99ac697277926b2\",\"dweb:/ipfs/QmUu36Lc4mppGLEK8wAp1tgYUo28777xKC8oVeZoWg4W1W\"]}},\"version\":1}",
	"bytecode": {
		"functionDebugData": {
			"@_436": {
				"entryPoint": null,
				"id": 436,
				"parameterSlots": 8,
				"returnSlots": 0
			},
			"@_setComptroller_2283": {
				"entryPoint": 935,
				"id": 2283,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_setInterestRateModelFresh_2589": {
				"entryPoint": 1279,
				"id": 2589,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@getBlockNumber_860": {
				"entryPoint": null,
				"id": 860,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@initialize_55": {
				"entryPoint": 144,
				"id": 55,
				"parameterSlots": 7,
				"returnSlots": 0
			},
			"@initialize_552": {
				"entryPoint": 309,
				"id": 552,
				"parameterSlots": 6,
				"returnSlots": 0
			},
			"abi_decode_address_payable_fromMemory": {
				"entryPoint": 2056,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_decode_string_fromMemory": {
				"entryPoint": 1873,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_contract$_ComptrollerInterface_$3351t_contract$_InterestRateModel_$4397t_uint256t_string_memory_ptrt_string_memory_ptrt_uint8t_address_payable_fromMemory": {
				"entryPoint": 2074,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 8
			},
			"abi_decode_tuple_t_bool_fromMemory": {
				"entryPoint": 2325,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256_fromMemory": {
				"entryPoint": 2299,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_contract$_ComptrollerInterface_$3351_t_contract$_ComptrollerInterface_$3351__to_t_address_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_contract$_InterestRateModel_$4397_t_contract$_InterestRateModel_$4397__to_t_address_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_0d998648c97be54311575d3a2c41b4b9b1a42ee050ec72752cd3e44128c6d6c6__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_1bebca39b478e42a6b88dcff87467d0e08b422ebc72c3d074bd236265624e814__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_427426a02e699ec0d6d6d22f3254c7e686696e18d2de7af9416d6b5cc786ff6c__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_59076c676f223cb9d4de55d807fe5a438ed31bccfb7626e1e7791e8e0eec7464__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_73c0b9b9fc59551809f9e3f686bb994cac13db80a83fd9ccdfe6d53da80fe637__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_b20ca7ca5fb4cb4511b58e112cf8b8663096873b0029b9b6aeb6bb29723b6450__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"extract_byte_array_length": {
				"entryPoint": 2368,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x41": {
				"entryPoint": 1851,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"validator_revert_address": {
				"entryPoint": 1826,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nodeType": "YulBlock",
					"src": "0:6588:10",
					"statements": [
						{
							"nodeType": "YulBlock",
							"src": "6:3:10",
							"statements": []
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "59:86:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "123:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "132:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "135:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "125:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "125:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "125:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "82:5:10"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:10"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "108:3:10",
																					"type": "",
																					"value": "160"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "113:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nodeType": "YulIdentifier",
																				"src": "104:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "104:11:10"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "117:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "sub",
																		"nodeType": "YulIdentifier",
																		"src": "100:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "100:19:10"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "89:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "89:31:10"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "79:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "79:42:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "72:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "72:50:10"
										},
										"nodeType": "YulIf",
										"src": "69:70:10"
									}
								]
							},
							"name": "validator_revert_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "48:5:10",
									"type": ""
								}
							],
							"src": "14:131:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "182:95:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "199:1:10",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "206:3:10",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "211:10:10",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "202:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "202:20:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "192:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "192:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "192:31:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "239:1:10",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "242:4:10",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "232:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "232:15:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "232:15:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "263:1:10",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "266:4:10",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "256:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "256:15:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "256:15:10"
									}
								]
							},
							"name": "panic_error_0x41",
							"nodeType": "YulFunctionDefinition",
							"src": "150:127:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "346:821:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "395:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "404:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "407:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "397:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "397:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "397:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "374:6:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "382:4:10",
																	"type": "",
																	"value": "0x1f"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "370:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "370:17:10"
														},
														{
															"name": "end",
															"nodeType": "YulIdentifier",
															"src": "389:3:10"
														}
													],
													"functionName": {
														"name": "slt",
														"nodeType": "YulIdentifier",
														"src": "366:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "366:27:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "359:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "359:35:10"
										},
										"nodeType": "YulIf",
										"src": "356:55:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "420:23:10",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "436:6:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "430:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "430:13:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "424:2:10",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "452:28:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "470:2:10",
															"type": "",
															"value": "64"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "474:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "466:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "466:10:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "478:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "462:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "462:18:10"
										},
										"variables": [
											{
												"name": "_2",
												"nodeType": "YulTypedName",
												"src": "456:2:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "503:22:10",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nodeType": "YulIdentifier",
															"src": "505:16:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "505:18:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "505:18:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "495:2:10"
												},
												{
													"name": "_2",
													"nodeType": "YulIdentifier",
													"src": "499:2:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "492:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "492:10:10"
										},
										"nodeType": "YulIf",
										"src": "489:36:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "534:17:10",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "548:2:10",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "not",
												"nodeType": "YulIdentifier",
												"src": "544:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "544:7:10"
										},
										"variables": [
											{
												"name": "_3",
												"nodeType": "YulTypedName",
												"src": "538:2:10",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "560:23:10",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "580:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "574:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "574:9:10"
										},
										"variables": [
											{
												"name": "memPtr",
												"nodeType": "YulTypedName",
												"src": "564:6:10",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "592:71:10",
										"value": {
											"arguments": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "614:6:10"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "638:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "642:4:10",
																					"type": "",
																					"value": "0x1f"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "634:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "634:13:10"
																		},
																		{
																			"name": "_3",
																			"nodeType": "YulIdentifier",
																			"src": "649:2:10"
																		}
																	],
																	"functionName": {
																		"name": "and",
																		"nodeType": "YulIdentifier",
																		"src": "630:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "630:22:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "654:2:10",
																	"type": "",
																	"value": "63"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "626:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "626:31:10"
														},
														{
															"name": "_3",
															"nodeType": "YulIdentifier",
															"src": "659:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "622:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "622:40:10"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "610:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "610:53:10"
										},
										"variables": [
											{
												"name": "newFreePtr",
												"nodeType": "YulTypedName",
												"src": "596:10:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "722:22:10",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nodeType": "YulIdentifier",
															"src": "724:16:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "724:18:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "724:18:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "newFreePtr",
															"nodeType": "YulIdentifier",
															"src": "681:10:10"
														},
														{
															"name": "_2",
															"nodeType": "YulIdentifier",
															"src": "693:2:10"
														}
													],
													"functionName": {
														"name": "gt",
														"nodeType": "YulIdentifier",
														"src": "678:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "678:18:10"
												},
												{
													"arguments": [
														{
															"name": "newFreePtr",
															"nodeType": "YulIdentifier",
															"src": "701:10:10"
														},
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "713:6:10"
														}
													],
													"functionName": {
														"name": "lt",
														"nodeType": "YulIdentifier",
														"src": "698:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "698:22:10"
												}
											],
											"functionName": {
												"name": "or",
												"nodeType": "YulIdentifier",
												"src": "675:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "675:46:10"
										},
										"nodeType": "YulIf",
										"src": "672:72:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "760:2:10",
													"type": "",
													"value": "64"
												},
												{
													"name": "newFreePtr",
													"nodeType": "YulIdentifier",
													"src": "764:10:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "753:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "753:22:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "753:22:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "791:6:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "799:2:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "784:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "784:18:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "784:18:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "811:14:10",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "821:4:10",
											"type": "",
											"value": "0x20"
										},
										"variables": [
											{
												"name": "_4",
												"nodeType": "YulTypedName",
												"src": "815:2:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "871:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "880:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "883:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "873:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "873:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "873:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "848:6:10"
																},
																{
																	"name": "_1",
																	"nodeType": "YulIdentifier",
																	"src": "856:2:10"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "844:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "844:15:10"
														},
														{
															"name": "_4",
															"nodeType": "YulIdentifier",
															"src": "861:2:10"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "840:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "840:24:10"
												},
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "866:3:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "837:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "837:33:10"
										},
										"nodeType": "YulIf",
										"src": "834:53:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "896:10:10",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "905:1:10",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "i",
												"nodeType": "YulTypedName",
												"src": "900:1:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "961:87:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "990:6:10"
																			},
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "998:1:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "986:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "986:14:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1002:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "982:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "982:23:10"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1021:6:10"
																					},
																					{
																						"name": "i",
																						"nodeType": "YulIdentifier",
																						"src": "1029:1:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1017:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1017:14:10"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1033:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1013:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1013:23:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1007:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1007:30:10"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "975:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "975:63:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "975:63:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nodeType": "YulIdentifier",
													"src": "926:1:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "929:2:10"
												}
											],
											"functionName": {
												"name": "lt",
												"nodeType": "YulIdentifier",
												"src": "923:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "923:9:10"
										},
										"nodeType": "YulForLoop",
										"post": {
											"nodeType": "YulBlock",
											"src": "933:19:10",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "935:15:10",
													"value": {
														"arguments": [
															{
																"name": "i",
																"nodeType": "YulIdentifier",
																"src": "944:1:10"
															},
															{
																"name": "_4",
																"nodeType": "YulIdentifier",
																"src": "947:2:10"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "940:3:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "940:10:10"
													},
													"variableNames": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "935:1:10"
														}
													]
												}
											]
										},
										"pre": {
											"nodeType": "YulBlock",
											"src": "919:3:10",
											"statements": []
										},
										"src": "915:133:10"
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "1078:59:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1107:6:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1115:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1103:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1103:15:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1120:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1099:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:24:10"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1125:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "1092:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "1092:35:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "1092:35:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nodeType": "YulIdentifier",
													"src": "1063:1:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "1066:2:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "1060:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1060:9:10"
										},
										"nodeType": "YulIf",
										"src": "1057:80:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1146:15:10",
										"value": {
											"name": "memPtr",
											"nodeType": "YulIdentifier",
											"src": "1155:6:10"
										},
										"variableNames": [
											{
												"name": "array",
												"nodeType": "YulIdentifier",
												"src": "1146:5:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_string_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nodeType": "YulTypedName",
									"src": "320:6:10",
									"type": ""
								},
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "328:3:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "array",
									"nodeType": "YulTypedName",
									"src": "336:5:10",
									"type": ""
								}
							],
							"src": "282:885:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1240:78:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1250:22:10",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "1265:6:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "1259:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1259:13:10"
										},
										"variableNames": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1250:5:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1306:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "1281:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1281:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1281:31:10"
									}
								]
							},
							"name": "abi_decode_address_payable_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nodeType": "YulTypedName",
									"src": "1219:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "1230:5:10",
									"type": ""
								}
							],
							"src": "1172:146:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1604:1057:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "1651:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1660:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1663:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "1653:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "1653:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "1653:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "1625:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1634:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "1621:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "1621:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1646:3:10",
													"type": "",
													"value": "256"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "1617:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1617:33:10"
										},
										"nodeType": "YulIf",
										"src": "1614:53:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1676:29:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1695:9:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "1689:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1689:16:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "1680:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1739:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "1714:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1714:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1714:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1754:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "1764:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1754:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1778:40:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1803:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1814:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1799:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "1799:18:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "1793:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1793:25:10"
										},
										"variables": [
											{
												"name": "value_1",
												"nodeType": "YulTypedName",
												"src": "1782:7:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value_1",
													"nodeType": "YulIdentifier",
													"src": "1852:7:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "1827:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1827:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1827:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1869:17:10",
										"value": {
											"name": "value_1",
											"nodeType": "YulIdentifier",
											"src": "1879:7:10"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "1869:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1895:40:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1920:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1931:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1916:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "1916:18:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "1910:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1910:25:10"
										},
										"variables": [
											{
												"name": "value_2",
												"nodeType": "YulTypedName",
												"src": "1899:7:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value_2",
													"nodeType": "YulIdentifier",
													"src": "1969:7:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "1944:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1944:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1944:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1986:17:10",
										"value": {
											"name": "value_2",
											"nodeType": "YulIdentifier",
											"src": "1996:7:10"
										},
										"variableNames": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "1986:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "2012:35:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2032:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2043:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2028:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2028:18:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "2022:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2022:25:10"
										},
										"variableNames": [
											{
												"name": "value3",
												"nodeType": "YulIdentifier",
												"src": "2012:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2056:40:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2080:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2091:3:10",
															"type": "",
															"value": "128"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2076:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2076:19:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "2070:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2070:26:10"
										},
										"variables": [
											{
												"name": "offset",
												"nodeType": "YulTypedName",
												"src": "2060:6:10",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2105:28:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2123:2:10",
															"type": "",
															"value": "64"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2127:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "2119:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2119:10:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2131:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "2115:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2115:18:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "2109:2:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2160:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2169:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2172:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2162:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "2162:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2162:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "2148:6:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "2156:2:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "2145:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2145:14:10"
										},
										"nodeType": "YulIf",
										"src": "2142:34:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2185:71:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2228:9:10"
														},
														{
															"name": "offset",
															"nodeType": "YulIdentifier",
															"src": "2239:6:10"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2224:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2224:22:10"
												},
												{
													"name": "dataEnd",
													"nodeType": "YulIdentifier",
													"src": "2248:7:10"
												}
											],
											"functionName": {
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulIdentifier",
												"src": "2195:28:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2195:61:10"
										},
										"variableNames": [
											{
												"name": "value4",
												"nodeType": "YulIdentifier",
												"src": "2185:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2265:42:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2291:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2302:3:10",
															"type": "",
															"value": "160"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2287:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2287:19:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "2281:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2281:26:10"
										},
										"variables": [
											{
												"name": "offset_1",
												"nodeType": "YulTypedName",
												"src": "2269:8:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2336:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2345:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2348:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2338:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "2338:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2338:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "offset_1",
													"nodeType": "YulIdentifier",
													"src": "2322:8:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "2332:2:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "2319:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2319:16:10"
										},
										"nodeType": "YulIf",
										"src": "2316:36:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2361:73:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2404:9:10"
														},
														{
															"name": "offset_1",
															"nodeType": "YulIdentifier",
															"src": "2415:8:10"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2400:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2400:24:10"
												},
												{
													"name": "dataEnd",
													"nodeType": "YulIdentifier",
													"src": "2426:7:10"
												}
											],
											"functionName": {
												"name": "abi_decode_string_fromMemory",
												"nodeType": "YulIdentifier",
												"src": "2371:28:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2371:63:10"
										},
										"variableNames": [
											{
												"name": "value5",
												"nodeType": "YulIdentifier",
												"src": "2361:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2443:41:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2468:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2479:3:10",
															"type": "",
															"value": "192"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2464:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2464:19:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "2458:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2458:26:10"
										},
										"variables": [
											{
												"name": "value_3",
												"nodeType": "YulTypedName",
												"src": "2447:7:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2536:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2545:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2548:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2538:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "2538:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2538:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value_3",
															"nodeType": "YulIdentifier",
															"src": "2506:7:10"
														},
														{
															"arguments": [
																{
																	"name": "value_3",
																	"nodeType": "YulIdentifier",
																	"src": "2519:7:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2528:4:10",
																	"type": "",
																	"value": "0xff"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "2515:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "2515:18:10"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "2503:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2503:31:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "2496:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2496:39:10"
										},
										"nodeType": "YulIf",
										"src": "2493:59:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2561:17:10",
										"value": {
											"name": "value_3",
											"nodeType": "YulIdentifier",
											"src": "2571:7:10"
										},
										"variableNames": [
											{
												"name": "value6",
												"nodeType": "YulIdentifier",
												"src": "2561:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "2587:68:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2639:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2650:3:10",
															"type": "",
															"value": "224"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2635:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2635:19:10"
												}
											],
											"functionName": {
												"name": "abi_decode_address_payable_fromMemory",
												"nodeType": "YulIdentifier",
												"src": "2597:37:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2597:58:10"
										},
										"variableNames": [
											{
												"name": "value7",
												"nodeType": "YulIdentifier",
												"src": "2587:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_contract$_ComptrollerInterface_$3351t_contract$_InterestRateModel_$4397t_uint256t_string_memory_ptrt_string_memory_ptrt_uint8t_address_payable_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1514:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "1525:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1537:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "1545:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "1553:6:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "1561:6:10",
									"type": ""
								},
								{
									"name": "value4",
									"nodeType": "YulTypedName",
									"src": "1569:6:10",
									"type": ""
								},
								{
									"name": "value5",
									"nodeType": "YulTypedName",
									"src": "1577:6:10",
									"type": ""
								},
								{
									"name": "value6",
									"nodeType": "YulTypedName",
									"src": "1585:6:10",
									"type": ""
								},
								{
									"name": "value7",
									"nodeType": "YulTypedName",
									"src": "1593:6:10",
									"type": ""
								}
							],
							"src": "1323:1338:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2747:103:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2793:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2802:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2805:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2795:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "2795:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2795:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "2768:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "2777:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "2764:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2764:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2789:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "2760:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2760:32:10"
										},
										"nodeType": "YulIf",
										"src": "2757:52:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2818:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "2834:9:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "2828:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2828:16:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "2818:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "2713:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "2724:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "2736:6:10",
									"type": ""
								}
							],
							"src": "2666:184:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3029:226:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3046:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3057:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3039:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3039:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3039:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3080:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3091:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3076:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3076:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3096:2:10",
													"type": "",
													"value": "36"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3069:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3069:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3069:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3119:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3130:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3115:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3115:18:10"
												},
												{
													"hexValue": "6f6e6c792061646d696e206d617920696e697469616c697a6520746865206d61",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "3135:34:10",
													"type": "",
													"value": "only admin may initialize the ma"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3108:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3108:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3108:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3190:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3201:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3186:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3186:18:10"
												},
												{
													"hexValue": "726b6574",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "3206:6:10",
													"type": "",
													"value": "rket"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3179:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3179:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3179:34:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "3222:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3234:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3245:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "3230:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3230:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "3222:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_0d998648c97be54311575d3a2c41b4b9b1a42ee050ec72752cd3e44128c6d6c6__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "3006:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "3020:4:10",
									"type": ""
								}
							],
							"src": "2855:400:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3434:225:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3451:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3462:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3444:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3444:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3444:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3485:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3496:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3481:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3481:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3501:2:10",
													"type": "",
													"value": "35"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3474:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3474:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3474:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3524:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3535:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3520:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3520:18:10"
												},
												{
													"hexValue": "6d61726b6574206d6179206f6e6c7920626520696e697469616c697a6564206f",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "3540:34:10",
													"type": "",
													"value": "market may only be initialized o"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3513:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3513:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3513:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3595:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3606:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3591:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3591:18:10"
												},
												{
													"hexValue": "6e6365",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "3611:5:10",
													"type": "",
													"value": "nce"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3584:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3584:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3584:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "3626:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3638:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3649:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "3634:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3634:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "3626:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_1bebca39b478e42a6b88dcff87467d0e08b422ebc72c3d074bd236265624e814__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "3411:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "3425:4:10",
									"type": ""
								}
							],
							"src": "3260:399:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3838:238:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3855:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3866:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3848:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3848:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3848:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3889:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3900:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3885:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3885:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3905:2:10",
													"type": "",
													"value": "48"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3878:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3878:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3878:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3928:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3939:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3924:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3924:18:10"
												},
												{
													"hexValue": "696e697469616c2065786368616e67652072617465206d757374206265206772",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "3944:34:10",
													"type": "",
													"value": "initial exchange rate must be gr"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3917:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3917:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3917:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3999:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4010:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3995:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3995:18:10"
												},
												{
													"hexValue": "6561746572207468616e207a65726f2e",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4015:18:10",
													"type": "",
													"value": "eater than zero."
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "3988:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3988:46:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3988:46:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "4043:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4055:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4066:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "4051:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4051:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4043:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_427426a02e699ec0d6d6d22f3254c7e686696e18d2de7af9416d6b5cc786ff6c__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "3815:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "3829:4:10",
									"type": ""
								}
							],
							"src": "3664:412:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4255:176:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4272:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4283:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4265:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4265:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4265:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4306:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4317:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4302:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4302:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4322:2:10",
													"type": "",
													"value": "26"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4295:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4295:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4295:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4345:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4356:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4341:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4341:18:10"
												},
												{
													"hexValue": "73657474696e6720636f6d7074726f6c6c6572206661696c6564",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4361:28:10",
													"type": "",
													"value": "setting comptroller failed"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4334:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4334:56:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4334:56:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "4399:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4411:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4422:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "4407:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4407:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4399:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_b20ca7ca5fb4cb4511b58e112cf8b8663096873b0029b9b6aeb6bb29723b6450__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4232:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "4246:4:10",
									"type": ""
								}
							],
							"src": "4081:350:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4610:224:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4627:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4638:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4620:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4620:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4620:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4661:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4672:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4657:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4657:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4677:2:10",
													"type": "",
													"value": "34"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4650:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4650:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4650:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4700:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4711:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4696:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4696:18:10"
												},
												{
													"hexValue": "73657474696e6720696e7465726573742072617465206d6f64656c206661696c",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4716:34:10",
													"type": "",
													"value": "setting interest rate model fail"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4689:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4689:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4689:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4771:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4782:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4767:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4767:18:10"
												},
												{
													"hexValue": "6564",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "4787:4:10",
													"type": "",
													"value": "ed"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4760:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4760:32:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4760:32:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "4801:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4813:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4824:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "4809:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4809:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4801:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_59076c676f223cb9d4de55d807fe5a438ed31bccfb7626e1e7791e8e0eec7464__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4587:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "4601:4:10",
									"type": ""
								}
							],
							"src": "4436:398:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4917:199:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "4963:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4972:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4975:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "4965:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "4965:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "4965:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "4938:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4947:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "4934:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4934:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4959:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "4930:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4930:32:10"
										},
										"nodeType": "YulIf",
										"src": "4927:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "4988:29:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5007:9:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "5001:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5001:16:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "4992:5:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "5070:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5079:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5082:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "5072:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "5072:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "5072:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "5039:5:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "5060:5:10"
																		}
																	],
																	"functionName": {
																		"name": "iszero",
																		"nodeType": "YulIdentifier",
																		"src": "5053:6:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5053:13:10"
																}
															],
															"functionName": {
																"name": "iszero",
																"nodeType": "YulIdentifier",
																"src": "5046:6:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "5046:21:10"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "5036:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5036:32:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "5029:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5029:40:10"
										},
										"nodeType": "YulIf",
										"src": "5026:60:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "5095:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "5105:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5095:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_bool_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4883:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "4894:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "4906:6:10",
									"type": ""
								}
							],
							"src": "4839:277:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5295:178:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5312:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5323:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5305:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5305:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5305:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5346:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5357:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5342:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5342:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5362:2:10",
													"type": "",
													"value": "28"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5335:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5335:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5335:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5385:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5396:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5381:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5381:18:10"
												},
												{
													"hexValue": "6d61726b6572206d6574686f642072657475726e65642066616c7365",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "5401:30:10",
													"type": "",
													"value": "marker method returned false"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5374:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5374:58:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5374:58:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "5441:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5453:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5464:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "5449:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5449:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5441:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_73c0b9b9fc59551809f9e3f686bb994cac13db80a83fd9ccdfe6d53da80fe637__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5272:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5286:4:10",
									"type": ""
								}
							],
							"src": "5121:352:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5665:175:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "5675:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5687:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5698:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "5683:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5683:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5675:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "5710:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5728:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5733:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "5724:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5724:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5737:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "5720:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5720:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "5714:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5755:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "5770:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "5778:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "5766:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5766:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5748:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5748:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5748:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5802:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5813:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "5798:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5798:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "5822:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "5830:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "5818:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5818:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5791:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5791:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5791:43:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_contract$_ComptrollerInterface_$3351_t_contract$_ComptrollerInterface_$3351__to_t_address_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5626:9:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "5637:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "5645:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5656:4:10",
									"type": ""
								}
							],
							"src": "5478:362:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "6026:175:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "6036:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "6048:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6059:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "6044:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6044:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "6036:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "6071:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6089:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6094:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "6085:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6085:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6098:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "6081:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6081:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "6075:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "6116:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "6131:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "6139:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "6127:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6127:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6109:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6109:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6109:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6163:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6174:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6159:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6159:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "6183:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "6191:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "6179:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6179:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "6152:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6152:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6152:43:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_contract$_InterestRateModel_$4397_t_contract$_InterestRateModel_$4397__to_t_address_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5987:9:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "5998:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "6006:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "6017:4:10",
									"type": ""
								}
							],
							"src": "5845:356:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "6261:325:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "6271:22:10",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6285:1:10",
													"type": "",
													"value": "1"
												},
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "6288:4:10"
												}
											],
											"functionName": {
												"name": "shr",
												"nodeType": "YulIdentifier",
												"src": "6281:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6281:12:10"
										},
										"variableNames": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "6271:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "6302:38:10",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "6332:4:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6338:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "6328:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6328:12:10"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulTypedName",
												"src": "6306:18:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "6379:31:10",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "6381:27:10",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "6395:6:10"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6403:4:10",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "6391:3:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "6391:17:10"
													},
													"variableNames": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "6381:6:10"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "6359:18:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "6352:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6352:26:10"
										},
										"nodeType": "YulIf",
										"src": "6349:61:10"
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "6469:111:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6490:1:10",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6497:3:10",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6502:10:10",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "6493:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6493:20:10"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "6483:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "6483:31:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6483:31:10"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6534:1:10",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6537:4:10",
																"type": "",
																"value": "0x22"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "6527:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "6527:15:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6527:15:10"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6562:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6565:4:10",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "6555:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "6555:15:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6555:15:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "6425:18:10"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "6448:6:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6456:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nodeType": "YulIdentifier",
														"src": "6445:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6445:14:10"
												}
											],
											"functionName": {
												"name": "eq",
												"nodeType": "YulIdentifier",
												"src": "6422:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6422:38:10"
										},
										"nodeType": "YulIf",
										"src": "6419:161:10"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "6241:4:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "6250:6:10",
									"type": ""
								}
							],
							"src": "6206:380:10"
						}
					]
				},
				"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_address_payable_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_addresst_contract$_ComptrollerInterface_$3351t_contract$_InterestRateModel_$4397t_uint256t_string_memory_ptrt_string_memory_ptrt_uint8t_address_payable_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := mload(add(headStart, 96))\n        let offset := mload(add(headStart, 128))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value4 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value5 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        let value_3 := mload(add(headStart, 192))\n        if iszero(eq(value_3, and(value_3, 0xff))) { revert(0, 0) }\n        value6 := value_3\n        value7 := abi_decode_address_payable_fromMemory(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_0d998648c97be54311575d3a2c41b4b9b1a42ee050ec72752cd3e44128c6d6c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"only admin may initialize the ma\")\n        mstore(add(headStart, 96), \"rket\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1bebca39b478e42a6b88dcff87467d0e08b422ebc72c3d074bd236265624e814__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"market may only be initialized o\")\n        mstore(add(headStart, 96), \"nce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_427426a02e699ec0d6d6d22f3254c7e686696e18d2de7af9416d6b5cc786ff6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"initial exchange rate must be gr\")\n        mstore(add(headStart, 96), \"eater than zero.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b20ca7ca5fb4cb4511b58e112cf8b8663096873b0029b9b6aeb6bb29723b6450__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"setting comptroller failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_59076c676f223cb9d4de55d807fe5a438ed31bccfb7626e1e7791e8e0eec7464__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"setting interest rate model fail\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_73c0b9b9fc59551809f9e3f686bb994cac13db80a83fd9ccdfe6d53da80fe637__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"marker method returned false\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_contract$_ComptrollerInterface_$3351_t_contract$_ComptrollerInterface_$3351__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_contract$_InterestRateModel_$4397_t_contract$_InterestRateModel_$4397__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
				"id": 10,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"linkReferences": {},
		"object": "60806040523480156200001157600080fd5b50604051620043bd380380620043bd83398101604081905262000034916200081a565b60038054610100600160a81b03191633610100021790556200005c8888888888888862000090565b600380546001600160a01b0390921661010002610100600160a81b0319909216919091179055506200097d95505050505050565b620000ab8686868686866200013560201b62000e591760201c565b601180546001600160a01b0319166001600160a01b038916908117909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa15801562000105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012b9190620008fb565b5050505050505050565b60035461010090046001600160a01b03163314620001a65760405162461bcd60e51b8152602060048201526024808201527f6f6e6c792061646d696e206d617920696e697469616c697a6520746865206d616044820152631c9ad95d60e21b60648201526084015b60405180910390fd5b600954158015620001b75750600a54155b620002115760405162461bcd60e51b815260206004820152602360248201527f6d61726b6574206d6179206f6e6c7920626520696e697469616c697a6564206f6044820152626e636560e81b60648201526084016200019d565b6007849055836200027e5760405162461bcd60e51b815260206004820152603060248201527f696e697469616c2065786368616e67652072617465206d75737420626520677260448201526f32b0ba32b9103a3430b7103d32b9379760811b60648201526084016200019d565b60006200028b87620003a7565b90508015620002dd5760405162461bcd60e51b815260206004820152601a60248201527f73657474696e6720636f6d7074726f6c6c6572206661696c656400000000000060448201526064016200019d565b42600955670de0b6b3a7640000600a55620002f886620004ff565b90508015620003555760405162461bcd60e51b815260206004820152602260248201527f73657474696e6720696e7465726573742072617465206d6f64656c206661696c604482015261195960f21b60648201526084016200019d565b83516200036a9060019060208701906200067c565b508251620003809060029060208601906200067c565b50506003805460ff90921660ff199283161790556000805490911660011790555050505050565b60035460009061010090046001600160a01b03163314620003db5760405163d219dc1f60e01b815260040160405180910390fd5b60055460408051623f1ee960e11b815290516001600160a01b0392831692851691627e3dd29160048083019260209291908290030181865afa15801562000426573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044c919062000915565b6200049a5760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c73650000000060448201526064016200019d565b600580546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527f7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d91015b60405180910390a150600092915050565b600354600090819061010090046001600160a01b03163314620005355760405163407fded560e01b815260040160405180910390fd5b42600954146200055857604051630be2a5cb60e11b815260040160405180910390fd5b600660009054906101000a90046001600160a01b03169050826001600160a01b0316632191f92a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005d5919062000915565b620006235760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c73650000000060448201526064016200019d565b600680546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527fedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f9269101620004ee565b8280546200068a9062000940565b90600052602060002090601f016020900481019282620006ae5760008555620006f9565b82601f10620006c957805160ff1916838001178555620006f9565b82800160010185558215620006f9579182015b82811115620006f9578251825591602001919060010190620006dc565b50620007079291506200070b565b5090565b5b808211156200070757600081556001016200070c565b6001600160a01b03811681146200073857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200076357600080fd5b81516001600160401b03808211156200078057620007806200073b565b604051601f8301601f19908116603f01168101908282118183101715620007ab57620007ab6200073b565b81604052838152602092508683858801011115620007c857600080fd5b600091505b83821015620007ec5785820183015181830184015290820190620007cd565b83821115620007fe5760008385830101525b9695505050505050565b8051620008158162000722565b919050565b600080600080600080600080610100898b0312156200083857600080fd5b8851620008458162000722565b60208a0151909850620008588162000722565b60408a01519097506200086b8162000722565b60608a015160808b015191975095506001600160401b03808211156200089057600080fd5b6200089e8c838d0162000751565b955060a08b0151915080821115620008b557600080fd5b50620008c48b828c0162000751565b93505060c089015160ff81168114620008dc57600080fd5b9150620008ec60e08a0162000808565b90509295985092959890939650565b6000602082840312156200090e57600080fd5b5051919050565b6000602082840312156200092857600080fd5b815180151581146200093957600080fd5b9392505050565b600181811c908216806200095557607f821691505b602082108114156200097757634e487b7160e01b600052602260045260246000fd5b50919050565b613a30806200098d6000396000f3fe608060405234801561001057600080fd5b506004361061030c5760003560e01c80637f1e06be1161019d578063bd6d894d116100e9578063f2b3abbd116100a2578063f851a4401161007c578063f851a440146106a8578063f8f9da28146106c0578063fca7820b146106c8578063fe9c44ae146106db57600080fd5b8063f2b3abbd1461066f578063f3fdb15a14610682578063f5e3c4621461069557600080fd5b8063bd6d894d146105cd578063c37f68e2146105d5578063c5ebeaec14610608578063db006a751461061b578063dd62ed3e1461062e578063e9c714f21461066757600080fd5b8063a0712d6811610156578063aa5af0fd11610130578063aa5af0fd14610596578063ae9d70b01461059f578063b2a02ff1146105a7578063b71d1a0c146105ba57600080fd5b8063a0712d6814610568578063a6afed951461057b578063a9059cbb1461058357600080fd5b80637f1e06be1461050b578063852a12e31461051e5780638f840ddd1461053157806395d89b411461053a57806395dd91931461054257806399d8c1b41461055557600080fd5b80633af9e6691161025c578063601a0bf1116102155780636c540baf116101ef5780636c540baf146104be5780636f307dc3146104c757806370a08231146104da57806373acee981461050357600080fd5b8063601a0bf1146104955780636752e702146104a857806369ab3250146104b657600080fd5b80633af9e669146104385780633b1d21a21461044b5780633e941010146104535780634576b5db1461046657806347bd3718146104795780635fe3b5671461048257600080fd5b8063182df0f5116102c957806323b872dd116102a357806323b872dd146103c85780632608f818146103db57806326782247146103ee578063313ce5671461041957600080fd5b8063182df0f5146103985780631a31d465146103a05780631be19560146103b557600080fd5b806306fdde0314610311578063095ea7b31461032f5780630e75270214610352578063173b99041461037357806317bfdfbc1461037c57806318160ddd1461038f575b600080fd5b6103196106e3565b60405161032691906134b5565b60405180910390f35b61034261033d366004613522565b610771565b6040519015158152602001610326565b61036561036036600461354e565b6107df565b604051908152602001610326565b61036560085481565b61036561038a366004613567565b6107f2565b610365600d5481565b61036561084e565b6103b36103ae36600461363d565b61085d565b005b6103b36103c3366004613567565b6108f2565b6103426103d63660046136f3565b610abe565b6103656103e9366004613522565b610b0e565b600454610401906001600160a01b031681565b6040516001600160a01b039091168152602001610326565b6003546104269060ff1681565b60405160ff9091168152602001610326565b610365610446366004613567565b610b23565b610365610b69565b61036561046136600461354e565b610b73565b610365610474366004613567565b610b84565b610365600b5481565b600554610401906001600160a01b031681565b6103656104a336600461354e565b610cd6565b610365666379da05b6000081565b610365600081565b61036560095481565b601154610401906001600160a01b031681565b6103656104e8366004613567565b6001600160a01b03166000908152600e602052604090205490565b610365610d15565b6103b3610519366004613567565b610d5f565b61036561052c36600461354e565b610e36565b610365600c5481565b610319610e41565b610365610550366004613567565b610e4e565b6103b3610563366004613734565b610e59565b61036561057636600461354e565b6110b4565b6103656110bf565b610342610591366004613522565b6112ac565b610365600a5481565b6103656112fb565b6103656105b53660046136f3565b611393565b6103656105c8366004613567565b6113e2565b61036561146f565b6105e86105e3366004613567565b6114bf565b604080519485526020850193909352918301526060820152608001610326565b61036561061636600461354e565b611500565b61036561062936600461354e565b61150b565b61036561063c3660046137d6565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205490565b610365611516565b61036561067d366004613567565b61161d565b600654610401906001600160a01b031681565b6103656106a336600461380f565b611631565b6003546104019061010090046001600160a01b031681565b610365611648565b6103656106d636600461354e565b61169b565b610342600181565b600180546106f090613851565b80601f016020809104026020016040519081016040528092919081815260200182805461071c90613851565b80156107695780601f1061073e57610100808354040283529160200191610769565b820191906000526020600020905b81548152906001019060200180831161074c57829003601f168201915b505050505081565b336000818152600f602090815260408083206001600160a01b03871680855292528083208590555191929182907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107cd9087815260200190565b60405180910390a35060019392505050565b60006107ea826116da565b506000919050565b6000805460ff1661081e5760405162461bcd60e51b81526004016108159061388c565b60405180910390fd5b6000805460ff191690556108306110bf565b5061083a82610e4e565b90506000805460ff19166001179055919050565b600061085861172b565b905090565b61086b868686868686610e59565b601180546001600160a01b0319166001600160a01b038916908117909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e891906138b0565b5050505050505050565b60035461010090046001600160a01b031633146109695760405162461bcd60e51b815260206004820152602f60248201527f4345726332303a3a7377656570546f6b656e3a206f6e6c792061646d696e206360448201526e616e20737765657020746f6b656e7360881b6064820152608401610815565b6011546001600160a01b03828116911614156109e25760405162461bcd60e51b815260206004820152603260248201527f4345726332303a3a7377656570546f6b656e3a2063616e206e6f74207377656560448201527138103ab73232b9363cb4b733903a37b5b2b760711b6064820152608401610815565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d91906138b0565b60035460405163a9059cbb60e01b81526001600160a01b03610100909204821660048201526024810183905291925083169063a9059cbb90604401600060405180830381600087803b158015610aa257600080fd5b505af1158015610ab6573d6000803e3d6000fd5b505050505050565b6000805460ff16610ae15760405162461bcd60e51b81526004016108159061388c565b6000805460ff19168155610af733868686611795565b1490506000805460ff191660011790559392505050565b6000610b1a83836119c3565b50600092915050565b6000806040518060200160405280610b3961146f565b90526001600160a01b0384166000908152600e6020526040902054909150610b62908290611a15565b9392505050565b6000610858611a35565b6000610b7e82611aaa565b92915050565b60035460009061010090046001600160a01b03163314610bb75760405163d219dc1f60e01b815260040160405180910390fd5b60055460408051623f1ee960e11b815290516001600160a01b0392831692851691627e3dd29160048083019260209291908290030181865afa158015610c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2591906138c9565b610c715760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c7365000000006044820152606401610815565b600580546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527f7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d91015b60405180910390a150600092915050565b6000805460ff16610cf95760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055610d0b6110bf565b5061083a82611b01565b6000805460ff16610d385760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055610d4a6110bf565b5050600b546000805460ff1916600117905590565b60035461010090046001600160a01b03163314610dd45760405162461bcd60e51b815260206004820152602d60248201527f6f6e6c79207468652061646d696e206d6179207365742074686520636f6d702d60448201526c6c696b652064656c656761746560981b6064820152608401610815565b6011546040516317066a5760e21b81526001600160a01b03838116600483015290911690635c19a95c90602401600060405180830381600087803b158015610e1b57600080fd5b505af1158015610e2f573d6000803e3d6000fd5b5050505050565b60006107ea82611c1c565b600280546106f090613851565b6000610b7e82611c6d565b60035461010090046001600160a01b03163314610ec45760405162461bcd60e51b8152602060048201526024808201527f6f6e6c792061646d696e206d617920696e697469616c697a6520746865206d616044820152631c9ad95d60e21b6064820152608401610815565b600954158015610ed45750600a54155b610f2c5760405162461bcd60e51b815260206004820152602360248201527f6d61726b6574206d6179206f6e6c7920626520696e697469616c697a6564206f6044820152626e636560e81b6064820152608401610815565b600784905583610f975760405162461bcd60e51b815260206004820152603060248201527f696e697469616c2065786368616e67652072617465206d75737420626520677260448201526f32b0ba32b9103a3430b7103d32b9379760811b6064820152608401610815565b6000610fa287610b84565b90508015610ff25760405162461bcd60e51b815260206004820152601a60248201527f73657474696e6720636f6d7074726f6c6c6572206661696c65640000000000006044820152606401610815565b42600955670de0b6b3a7640000600a5561100b86611cb7565b905080156110665760405162461bcd60e51b815260206004820152602260248201527f73657474696e6720696e7465726573742072617465206d6f64656c206661696c604482015261195960f21b6064820152608401610815565b8351611079906001906020870190613425565b50825161108d906002906020860190613425565b50506003805460ff90921660ff199283161790556000805490911660011790555050505050565b60006107ea82611e2c565b6009546000904290808214156110d85760009250505090565b60006110e2611a35565b600b54600c54600a546006546040516315f2405360e01b81526004810186905260248101859052604481018490529495509293919290916000916001600160a01b0316906315f2405390606401602060405180830381865afa15801561114c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117091906138b0565b9050645d21dba0008111156111c75760405162461bcd60e51b815260206004820152601c60248201527f626f72726f772072617465206973206162737572646c792068696768000000006044820152606401610815565b60006111d38789613901565b905060006111ef60405180602001604052808581525083611e6b565b905060006111fd8288611a15565b9050600061120b8883613918565b9050600061122a6040518060200160405280600854815250848a611e9c565b9050600061123985898a611e9c565b60098e9055600a819055600b849055600c839055604080518d815260208101879052908101829052606081018590529091507f4dec04e750ca11537cabcd8a9eab06494de08da3735bc8871cd41250e190bc049060800160405180910390a160009d505050505050505050505050505090565b6000805460ff166112cf5760405162461bcd60e51b81526004016108159061388c565b6000805460ff191681556112e533808686611795565b1490506000805460ff1916600117905592915050565b6006546000906001600160a01b031663b8168816611317611a35565b600b54600c546008546040516001600160e01b031960e087901b16815260048101949094526024840192909252604483015260648201526084015b602060405180830381865afa15801561136f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085891906138b0565b6000805460ff166113b65760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556113cc33858585611ebd565b50600080805460ff191660011790559392505050565b60035460009061010090046001600160a01b0316331461141557604051635cb56c2b60e01b815260040160405180910390fd5b600480546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99101610cc5565b6000805460ff166114925760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556114a46110bf565b506114ad61084e565b90506000805460ff1916600117905590565b6001600160a01b0381166000908152600e602052604081205481908190819081906114e987611c6d565b6114f161172b565b93509350935093509193509193565b60006107ea82612136565b60006107ea82612175565b6004546000906001600160a01b031633141580611531575033155b1561154f57604051631ba24f2960e21b815260040160405180910390fd5b60038054600480546001600160a01b03808216610100818102610100600160a81b0319871617968790556001600160a01b031990931690935560408051948390048216808652929095041660208401529290917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a1600454604080516001600160a01b03808516825290921660208301527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9910160405180910390a160009250505090565b60006116276110bf565b50610b7e82611cb7565b600061163e8484846121b6565b5060009392505050565b6006546000906001600160a01b03166315f24053611664611a35565b600b54600c546040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401611352565b6000805460ff166116be5760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556116d06110bf565b5061083a82612294565b60005460ff166116fc5760405162461bcd60e51b81526004016108159061388c565b6000805460ff1916905561170e6110bf565b5061171a333383612350565b50506000805460ff19166001179055565b600d546000908061173e57505060075490565b6000611748611a35565b90506000600c54600b548361175d9190613918565b6117679190613901565b905060008361177e670de0b6b3a764000084613930565b611788919061394f565b95945050505050565b5090565b6005546040516317b9b84b60e31b81523060048201526001600160a01b038581166024830152848116604483015260648201849052600092839291169063bdcdc258906084016020604051808303816000875af11580156117fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181e91906138b0565b905080156118425760405163089d427760e11b815260048101829052602401610815565b836001600160a01b0316856001600160a01b0316141561187557604051638cd22d1960e01b815260040160405180910390fd5b6000856001600160a01b0316876001600160a01b0316141561189a57506000196118c2565b506001600160a01b038086166000908152600f60209081526040808320938a16835292905220545b60006118ce8583613901565b6001600160a01b0388166000908152600e6020526040812054919250906118f6908790613901565b6001600160a01b0388166000908152600e60205260408120549192509061191e908890613918565b6001600160a01b03808b166000908152600e6020526040808220869055918b1681522081905590506000198414611978576001600160a01b03808a166000908152600f60209081526040808320938e168352929052208390555b876001600160a01b0316896001600160a01b03166000805160206139db833981519152896040516119ab91815260200190565b60405180910390a35060009998505050505050505050565b60005460ff166119e55760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556119f76110bf565b50611a03338383612350565b50506000805460ff1916600117905550565b600080611a228484611e6b565b9050611a2d816124f9565b949350505050565b6011546040516370a0823160e01b81523060048201526000916001600160a01b03169081906370a0823190602401602060405180830381865afa158015611a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa491906138b0565b91505090565b6000805460ff16611acd5760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055611adf6110bf565b50611ae982612511565b5050600090506000805460ff19166001179055919050565b600354600090819061010090046001600160a01b03163314611b3657604051630f7e5e6d60e41b815260040160405180910390fd5b4260095414611b5857604051630dff50cb60e41b815260040160405180910390fd5b82611b61611a35565b1015611b8057604051633345e99960e01b815260040160405180910390fd5b600c54831115611ba3576040516378d2980560e11b815260040160405180910390fd5b82600c54611bb19190613901565b600c819055600354909150611bd49061010090046001600160a01b0316846125a5565b7f3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e600360019054906101000a90046001600160a01b03168483604051610cc593929190613971565b60005460ff16611c3e5760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055611c506110bf565b50611c5d3360008361268f565b506000805460ff19166001179055565b6001600160a01b03811660009081526010602052604081208054611c945750600092915050565b600a548154600091611ca591613930565b9050816001015481611a2d919061394f565b600354600090819061010090046001600160a01b03163314611cec5760405163407fded560e01b815260040160405180910390fd5b4260095414611d0e57604051630be2a5cb60e11b815260040160405180910390fd5b600660009054906101000a90046001600160a01b03169050826001600160a01b0316632191f92a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8891906138c9565b611dd45760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c7365000000006044820152606401610815565b600680546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527fedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f9269101610cc5565b60005460ff16611e4e5760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055611e606110bf565b50611c5d338261296c565b6040805160208101909152600081526040518060200160405280611e93856000015185612b95565b90529392505050565b600080611ea98585611e6b565b9050611788611eb7826124f9565b84612ba1565b60055460405163d02f735160e01b81523060048201526001600160a01b0386811660248301528581166044830152848116606483015260848201849052600092169063d02f73519060a4016020604051808303816000875af1158015611f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4b91906138b0565b90508015611f6f576040516363e00e3360e11b815260048101829052602401610815565b836001600160a01b0316836001600160a01b03161415611fa257604051633a94626760e11b815260040160405180910390fd5b6000611fc3836040518060200160405280666379da05b60000815250612bad565b90506000611fd18285613901565b905060006040518060200160405280611fe861172b565b905290506000611ff88285611a15565b9050600081600c5461200a9190613918565b600c819055600d54909150612020908690613901565b600d556001600160a01b0388166000908152600e6020526040902054612047908890613901565b6001600160a01b03808a166000908152600e602052604080822093909355908b1681522054612077908590613918565b6001600160a01b03808b166000818152600e602052604090819020939093559151908a16906000805160206139db833981519152906120b99088815260200190565b60405180910390a360405185815230906001600160a01b038a16906000805160206139db8339815191529060200160405180910390a37fa91e67c5ea634cd43a12c5a482724b03de01e85ca68702a53d0c2f45cb7c1dc530838360405161212293929190613971565b60405180910390a150505050505050505050565b60005460ff166121585760405162461bcd60e51b81526004016108159061388c565b6000805460ff1916905561216a6110bf565b50611c5d3382612bd0565b60005460ff166121975760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556121a96110bf565b50611c5d3382600061268f565b60005460ff166121d85760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556121ea6110bf565b506000816001600160a01b031663a6afed956040518163ffffffff1660e01b81526004016020604051808303816000875af115801561222d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225191906138b0565b9050801561227557604051633eea49b760e11b815260048101829052602401610815565b61228133858585612d6f565b50506000805460ff191660011790555050565b60035460009061010090046001600160a01b031633146122c757604051631205b57b60e11b815260040160405180910390fd5b42600954146122e957604051637dfca6b760e11b815260040160405180910390fd5b670de0b6b3a76400008211156123125760405163717220f360e11b815260040160405180910390fd5b600880549083905560408051828152602081018590527faaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f8214609101610cc5565b600554604051631200453160e11b81523060048201526001600160a01b03858116602483015284811660448301526064820184905260009283929116906324008a62906084016020604051808303816000875af11580156123b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d991906138b0565b905080156123fd57604051638c81362d60e01b815260048101829052602401610815565b426009541461241f5760405163c9021e2f60e01b815260040160405180910390fd5b600061242a85611c6d565b90506000600019851461243d578461243f565b815b9050600061244d8883613229565b9050600061245b8285613901565b9050600082600b5461246d9190613901565b6001600160a01b038a8116600081815260106020908152604091829020878155600a54600190910155600b8590558151938f168452830191909152810185905260608101849052608081018290529091507f1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a19060a00160405180910390a1509098975050505050505050565b8051600090610b7e90670de0b6b3a76400009061394f565b6000808080426009541461253b576040516338acf79960e01b815260048101829052602401610815565b6125453386613229565b905080600c546125559190613918565b915081600c819055507fa91e67c5ea634cd43a12c5a482724b03de01e85ca68702a53d0c2f45cb7c1dc533828460405161259193929190613971565b60405180910390a160009590945092505050565b60115460405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905290911690819063a9059cbb90604401600060405180830381600087803b1580156125f557600080fd5b505af1158015612609573d6000803e3d6000fd5b5050505060003d60008114612625576020811461262f57600080fd5b600019915061263b565b60206000803e60005191505b50806126895760405162461bcd60e51b815260206004820152601960248201527f544f4b454e5f5452414e534645525f4f55545f4641494c4544000000000000006044820152606401610815565b50505050565b81158061269a575080155b6127035760405162461bcd60e51b815260206004820152603460248201527f6f6e65206f662072656465656d546f6b656e73496e206f722072656465656d416044820152736d6f756e74496e206d757374206265207a65726f60601b6064820152608401610815565b6000604051806020016040528061271861172b565b905290506000808415612739578491506127328386611a15565b9050612749565b6127438484613400565b91508390505b60055460405163eabe7d9160e01b81526000916001600160a01b03169063eabe7d919061277e9030908b908890600401613992565b6020604051808303816000875af115801561279d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c191906138b0565b905080156127e55760405163480f424760e01b815260048101829052602401610815565b4260095414612807576040516397b5cfcd60e01b815260040160405180910390fd5b81612810611a35565b101561282f576040516391240a1b60e01b815260040160405180910390fd5b82600d5461283d9190613901565b600d556001600160a01b0387166000908152600e6020526040902054612864908490613901565b6001600160a01b0388166000908152600e602052604090205561288787836125a5565b60405183815230906001600160a01b038916906000805160206139db8339815191529060200160405180910390a37fe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a9298783856040516128e893929190613971565b60405180910390a16005546040516351dff98960e01b81523060048201526001600160a01b0389811660248301526044820185905260648201869052909116906351dff98990608401600060405180830381600087803b15801561294b57600080fd5b505af115801561295f573d6000803e3d6000fd5b5050505050505050505050565b600554604051634ef4c3e160e01b81526000916001600160a01b031690634ef4c3e1906129a190309087908790600401613992565b6020604051808303816000875af11580156129c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129e491906138b0565b90508015612a08576040516349abd4fd60e01b815260048101829052602401610815565b4260095414612a2a576040516338d8859760e01b815260040160405180910390fd5b60006040518060200160405280612a3f61172b565b905290506000612a4f8585613229565b90506000612a5d8284613400565b905080600d54612a6d9190613918565b600d556001600160a01b0386166000908152600e6020526040902054612a94908290613918565b6001600160a01b0387166000908152600e60205260409081902091909155517f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f90612ae490889085908590613971565b60405180910390a16040518181526001600160a01b0387169030906000805160206139db8339815191529060200160405180910390a36005546040516341c728b960e01b81523060048201526001600160a01b0388811660248301526044820185905260648201849052909116906341c728b990608401600060405180830381600087803b158015612b7557600080fd5b505af1158015612b89573d6000803e3d6000fd5b50505050505050505050565b6000610b628284613930565b6000610b628284613918565b6000670de0b6b3a7640000612bc6848460000151612b95565b610b62919061394f565b60055460405163368f515360e21b81526000916001600160a01b03169063da3d454c90612c0590309087908790600401613992565b6020604051808303816000875af1158015612c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4891906138b0565b90508015612c6c5760405163918db40f60e01b815260048101829052602401610815565b4260095414612c8e57604051630e8d8c6160e21b815260040160405180910390fd5b81612c97611a35565b1015612cb6576040516348c2588160e01b815260040160405180910390fd5b6000612cc184611c6d565b90506000612ccf8483613918565b9050600084600b54612ce19190613918565b6001600160a01b0387166000908152601060205260409020838155600a54600190910155600b8190559050612d1686866125a5565b604080516001600160a01b038816815260208101879052908101839052606081018290527f13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab809060800160405180910390a1505050505050565b600554604051632fe3f38f60e11b81523060048201526001600160a01b03838116602483015286811660448301528581166064830152608482018590526000921690635fc7e71e9060a4016020604051808303816000875af1158015612dd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dfd91906138b0565b90508015612e2157604051630a14d17960e11b815260048101829052602401610815565b4260095414612e43576040516380965b1b60e01b815260040160405180910390fd5b42826001600160a01b0316636c540baf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ea691906138b0565b14612ec457604051631046f38d60e31b815260040160405180910390fd5b846001600160a01b0316846001600160a01b03161415612ef757604051631bd1a62160e21b815260040160405180910390fd5b82612f155760405163d29da7ef60e01b815260040160405180910390fd5b600019831415612f3857604051635982c5bb60e11b815260040160405180910390fd5b6000612f45868686612350565b60055460405163c488847b60e01b815291925060009182916001600160a01b03169063c488847b90612f7f90309089908890600401613992565b6040805180830381865afa158015612f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fbf91906139b6565b915091506000821461302f5760405162461bcd60e51b815260206004820152603360248201527f4c49515549444154455f434f4d5054524f4c4c45525f43414c43554c4154455f604482015272105353d5539517d4d152569157d19052531151606a1b6064820152608401610815565b6040516370a0823160e01b81526001600160a01b0388811660048301528291908716906370a0823190602401602060405180830381865afa158015613078573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061309c91906138b0565b10156130ea5760405162461bcd60e51b815260206004820152601860248201527f4c49515549444154455f5345495a455f544f4f5f4d55434800000000000000006044820152606401610815565b6001600160a01b03851630141561310c5761310730898984611ebd565b6131c6565b60405163b2a02ff160e01b81526000906001600160a01b0387169063b2a02ff19061313f908c908c908790600401613992565b6020604051808303816000875af115801561315e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061318291906138b0565b146131c65760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b881cd95a5e9d5c994819985a5b195960621b6044820152606401610815565b604080516001600160a01b038a811682528981166020830152818301869052871660608201526080810183905290517f298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb529181900360a00190a15050505050505050565b6011546040516370a0823160e01b81523060048201526000916001600160a01b0316908190839082906370a0823190602401602060405180830381865afa158015613278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061329c91906138b0565b6040516323b872dd60e01b81529091506001600160a01b038316906323b872dd906132cf90899030908a90600401613992565b600060405180830381600087803b1580156132e957600080fd5b505af11580156132fd573d6000803e3d6000fd5b5050505060003d60008114613319576020811461332357600080fd5b600019915061332f565b60206000803e60005191505b508061337d5760405162461bcd60e51b815260206004820152601860248201527f544f4b454e5f5452414e534645525f494e5f4641494c454400000000000000006044820152606401610815565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa1580156133c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133e891906138b0565b90506133f48382613901565b98975050505050505050565b6000610b6261341784670de0b6b3a7640000612b95565b83516000610b62828461394f565b82805461343190613851565b90600052602060002090601f0160209004810192826134535760008555613499565b82601f1061346c57805160ff1916838001178555613499565b82800160010185558215613499579182015b8281111561349957825182559160200191906001019061347e565b506117919291505b8082111561179157600081556001016134a1565b600060208083528351808285015260005b818110156134e2578581018301518582016040015282016134c6565b818111156134f4576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461351f57600080fd5b50565b6000806040838503121561353557600080fd5b82356135408161350a565b946020939093013593505050565b60006020828403121561356057600080fd5b5035919050565b60006020828403121561357957600080fd5b8135610b628161350a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126135ab57600080fd5b813567ffffffffffffffff808211156135c6576135c6613584565b604051601f8301601f19908116603f011681019082821181831017156135ee576135ee613584565b8160405283815286602085880101111561360757600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461363857600080fd5b919050565b600080600080600080600060e0888a03121561365857600080fd5b87356136638161350a565b965060208801356136738161350a565b955060408801356136838161350a565b945060608801359350608088013567ffffffffffffffff808211156136a757600080fd5b6136b38b838c0161359a565b945060a08a01359150808211156136c957600080fd5b506136d68a828b0161359a565b9250506136e560c08901613627565b905092959891949750929550565b60008060006060848603121561370857600080fd5b83356137138161350a565b925060208401356137238161350a565b929592945050506040919091013590565b60008060008060008060c0878903121561374d57600080fd5b86356137588161350a565b955060208701356137688161350a565b945060408701359350606087013567ffffffffffffffff8082111561378c57600080fd5b6137988a838b0161359a565b945060808901359150808211156137ae57600080fd5b506137bb89828a0161359a565b9250506137ca60a08801613627565b90509295509295509295565b600080604083850312156137e957600080fd5b82356137f48161350a565b915060208301356138048161350a565b809150509250929050565b60008060006060848603121561382457600080fd5b833561382f8161350a565b92506020840135915060408401356138468161350a565b809150509250925092565b600181811c9082168061386557607f821691505b6020821081141561388657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152691c994b595b9d195c995960b21b604082015260600190565b6000602082840312156138c257600080fd5b5051919050565b6000602082840312156138db57600080fd5b81518015158114610b6257600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015613913576139136138eb565b500390565b6000821982111561392b5761392b6138eb565b500190565b600081600019048311821515161561394a5761394a6138eb565b500290565b60008261396c57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600080604083850312156139c957600080fd5b50508051602090910151909290915056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ce926571c28f011f5d216445c529432078afcdb1757e138c7b79980cad0557ec64736f6c634300080a0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x43BD CODESIZE SUB DUP1 PUSH3 0x43BD DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x81A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND CALLER PUSH2 0x100 MUL OR SWAP1 SSTORE PUSH3 0x5C DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH3 0x90 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH2 0x100 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH3 0x97D SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH3 0xAB DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH3 0x135 PUSH1 0x20 SHL PUSH3 0xE59 OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x105 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x12B SWAP2 SWAP1 PUSH3 0x8FB JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E206D617920696E697469616C697A6520746865206D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C9AD95D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 SLOAD ISZERO DUP1 ISZERO PUSH3 0x1B7 JUMPI POP PUSH1 0xA SLOAD ISZERO JUMPDEST PUSH3 0x211 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61726B6574206D6179206F6E6C7920626520696E697469616C697A6564206F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x19D JUMP JUMPDEST PUSH1 0x7 DUP5 SWAP1 SSTORE DUP4 PUSH3 0x27E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E697469616C2065786368616E67652072617465206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x32B0BA32B9103A3430B7103D32B93797 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x19D JUMP JUMPDEST PUSH1 0x0 PUSH3 0x28B DUP8 PUSH3 0x3A7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x2DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657474696E6720636F6D7074726F6C6C6572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x19D JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0xA SSTORE PUSH3 0x2F8 DUP7 PUSH3 0x4FF JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH3 0x355 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657474696E6720696E7465726573742072617465206D6F64656C206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x19D JUMP JUMPDEST DUP4 MLOAD PUSH3 0x36A SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH3 0x67C JUMP JUMPDEST POP DUP3 MLOAD PUSH3 0x380 SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x67C JUMP JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0xFF NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x3DB JUMPI PUSH1 0x40 MLOAD PUSH4 0xD219DC1F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0x3F1EE9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH3 0x7E3DD2 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x426 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x44C SWAP2 SWAP1 PUSH3 0x915 JUMP JUMPDEST PUSH3 0x49A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61726B6572206D6574686F642072657475726E65642066616C736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x19D JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x7AC369DBD14FA5EA3F473ED67CC9D598964A77501540BA6751EB0B3DECF5870D SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x535 JUMPI PUSH1 0x40 MLOAD PUSH4 0x407FDED5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH3 0x558 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBE2A5CB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2191F92A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x5D5 SWAP2 SWAP1 PUSH3 0x915 JUMP JUMPDEST PUSH3 0x623 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61726B6572206D6574686F642072657475726E65642066616C736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x19D JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xEDFFC32E068C7C95DFD4BDFD5C4D939A084D6B11C4199EAC8436ED234D72F926 SWAP2 ADD PUSH3 0x4EE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x68A SWAP1 PUSH3 0x940 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x6AE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x6F9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x6C9 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x6F9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x6F9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x6F9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x6DC JUMP JUMPDEST POP PUSH3 0x707 SWAP3 SWAP2 POP PUSH3 0x70B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x707 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x70C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x780 JUMPI PUSH3 0x780 PUSH3 0x73B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x7AB JUMPI PUSH3 0x7AB PUSH3 0x73B JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x7C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x7EC JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x7CD JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x7FE JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH3 0x815 DUP2 PUSH3 0x722 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH3 0x838 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 MLOAD PUSH3 0x845 DUP2 PUSH3 0x722 JUMP JUMPDEST PUSH1 0x20 DUP11 ADD MLOAD SWAP1 SWAP9 POP PUSH3 0x858 DUP2 PUSH3 0x722 JUMP JUMPDEST PUSH1 0x40 DUP11 ADD MLOAD SWAP1 SWAP8 POP PUSH3 0x86B DUP2 PUSH3 0x722 JUMP JUMPDEST PUSH1 0x60 DUP11 ADD MLOAD PUSH1 0x80 DUP12 ADD MLOAD SWAP2 SWAP8 POP SWAP6 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x890 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x89E DUP13 DUP4 DUP14 ADD PUSH3 0x751 JUMP JUMPDEST SWAP6 POP PUSH1 0xA0 DUP12 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x8B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x8C4 DUP12 DUP3 DUP13 ADD PUSH3 0x751 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 DUP10 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x8DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH3 0x8EC PUSH1 0xE0 DUP11 ADD PUSH3 0x808 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x90E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x928 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH3 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x955 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x977 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3A30 DUP1 PUSH3 0x98D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x30C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F1E06BE GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xBD6D894D GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xF2B3ABBD GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF851A440 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0xF8F9DA28 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xFCA7820B EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0xFE9C44AE EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF2B3ABBD EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0xF3FDB15A EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xF5E3C462 EQ PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD6D894D EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xC37F68E2 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0xE9C714F2 EQ PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0712D68 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xAA5AF0FD GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xAA5AF0FD EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xAE9D70B0 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0xB2A02FF1 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xB71D1A0C EQ PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xA6AFED95 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F1E06BE EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x852A12E3 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x8F840DDD EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0x95DD9193 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x99D8C1B4 EQ PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AF9E669 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x601A0BF1 GT PUSH2 0x215 JUMPI DUP1 PUSH4 0x6C540BAF GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x6C540BAF EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x73ACEE98 EQ PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x601A0BF1 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x6752E702 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x69AB3250 EQ PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AF9E669 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x3B1D21A2 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x3E941010 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x4576B5DB EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x47BD3718 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x5FE3B567 EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x182DF0F5 GT PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x23B872DD GT PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x2608F818 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x26782247 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x182DF0F5 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x1A31D465 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x1BE19560 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xE752702 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x173B9904 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x17BFDFBC EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x38F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x319 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x34B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x365 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x365 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x363D JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x36F3 JUMP JUMPDEST PUSH2 0xABE JUMP JUMPDEST PUSH2 0x365 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x401 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x426 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x365 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x365 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x401 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x365 PUSH7 0x6379DA05B60000 DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x401 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x365 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0xD5F JUMP JUMPDEST PUSH2 0x365 PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x365 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x319 PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x563 CALLDATASIZE PUSH1 0x4 PUSH2 0x3734 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x10BF JUMP JUMPDEST PUSH2 0x342 PUSH2 0x591 CALLDATASIZE PUSH1 0x4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x365 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x365 PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x36F3 JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x5C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x5E8 PUSH2 0x5E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x616 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x629 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x150B JUMP JUMPDEST PUSH2 0x365 PUSH2 0x63C CALLDATASIZE PUSH1 0x4 PUSH2 0x37D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x1516 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x161D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x401 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x6A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x380F JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x6D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST PUSH2 0x342 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x6F0 SWAP1 PUSH2 0x3851 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71C SWAP1 PUSH2 0x3851 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x769 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP2 DUP3 SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x7CD SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x16DA JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x830 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x83A DUP3 PUSH2 0xE4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x858 PUSH2 0x172B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x86B DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4345726332303A3A7377656570546F6B656E3A206F6E6C792061646D696E2063 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x616E20737765657020746F6B656E73 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4345726332303A3A7377656570546F6B656E3A2063616E206E6F742073776565 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x38103AB73232B9363CB4B733903A37B5B2B7 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA4D SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP3 DIV DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH2 0xAF7 CALLER DUP7 DUP7 DUP7 PUSH2 0x1795 JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1A DUP4 DUP4 PUSH2 0x19C3 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xB39 PUSH2 0x146F JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xB62 SWAP1 DUP3 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x858 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7E DUP3 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD219DC1F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0x3F1EE9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH3 0x7E3DD2 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC25 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61726B6572206D6574686F642072657475726E65642066616C736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x7AC369DBD14FA5EA3F473ED67CC9D598964A77501540BA6751EB0B3DECF5870D SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xD0B PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x83A DUP3 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xD4A PUSH2 0x10BF JUMP JUMPDEST POP POP PUSH1 0xB SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207468652061646D696E206D6179207365742074686520636F6D702D PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6C696B652064656C6567617465 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17066A57 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5C19A95C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x6F0 SWAP1 PUSH2 0x3851 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7E DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E206D617920696E697469616C697A6520746865206D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C9AD95D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x9 SLOAD ISZERO DUP1 ISZERO PUSH2 0xED4 JUMPI POP PUSH1 0xA SLOAD ISZERO JUMPDEST PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61726B6574206D6179206F6E6C7920626520696E697469616C697A6564206F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x7 DUP5 SWAP1 SSTORE DUP4 PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E697469616C2065786368616E67652072617465206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x32B0BA32B9103A3430B7103D32B93797 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA2 DUP8 PUSH2 0xB84 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657474696E6720636F6D7074726F6C6C6572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0xA SSTORE PUSH2 0x100B DUP7 PUSH2 0x1CB7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1066 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657474696E6720696E7465726573742072617465206D6F64656C206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1079 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x3425 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x108D SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x3425 JUMP JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0xFF NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 TIMESTAMP SWAP1 DUP1 DUP3 EQ ISZERO PUSH2 0x10D8 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E2 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xA SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x15F24053 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x15F24053 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x114C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP PUSH5 0x5D21DBA000 DUP2 GT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626F72726F772072617465206973206162737572646C79206869676800000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D3 DUP8 DUP10 PUSH2 0x3901 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11EF PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE POP DUP4 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11FD DUP3 DUP9 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x120B DUP9 DUP4 PUSH2 0x3918 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x122A PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 SLOAD DUP2 MSTORE POP DUP5 DUP11 PUSH2 0x1E9C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1239 DUP6 DUP10 DUP11 PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x9 DUP15 SWAP1 SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB DUP5 SWAP1 SSTORE PUSH1 0xC DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP14 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x4DEC04E750CA11537CABCD8A9EAB06494DE08DA3735BC8871CD41250E190BC04 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x12CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH2 0x12E5 CALLER DUP1 DUP7 DUP7 PUSH2 0x1795 JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB8168816 PUSH2 0x1317 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x13B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x13CC CALLER DUP6 DUP6 DUP6 PUSH2 0x1EBD JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5CB56C2B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xCA4F2F25D0898EDD99413412FB94012F9E54EC8142F9B093E7720646A95B16A9 SWAP2 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x14A4 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x14AD PUSH2 0x84E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x14E9 DUP8 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x14F1 PUSH2 0x172B JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO DUP1 PUSH2 0x1531 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BA24F29 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP8 AND OR SWAP7 DUP8 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP4 SWAP1 DIV DUP3 AND DUP1 DUP7 MSTORE SWAP3 SWAP1 SWAP6 DIV AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP2 PUSH32 0xF9FFABCA9C8276E99321725BCB43FB076A6C66A54B7F21C4E8146D8519B417DC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xCA4F2F25D0898EDD99413412FB94012F9E54EC8142F9B093E7720646A95B16A9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1627 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0xB7E DUP3 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163E DUP5 DUP5 DUP5 PUSH2 0x21B6 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x15F24053 PUSH2 0x1664 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x16BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x16D0 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x83A DUP3 PUSH2 0x2294 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x16FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x170E PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x171A CALLER CALLER DUP4 PUSH2 0x2350 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x173E JUMPI POP POP PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1748 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0xB SLOAD DUP4 PUSH2 0x175D SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH2 0x1767 SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x177E PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x1788 SWAP2 SWAP1 PUSH2 0x394F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17B9B84B PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xBDCDC258 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x181E SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1842 JUMPI PUSH1 0x40 MLOAD PUSH4 0x89D4277 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8CD22D19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x189A JUMPI POP PUSH1 0x0 NOT PUSH2 0x18C2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x18CE DUP6 DUP4 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x18F6 SWAP1 DUP8 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x191E SWAP1 DUP9 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SWAP1 SSTORE SWAP2 DUP12 AND DUP2 MSTORE KECCAK256 DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x0 NOT DUP5 EQ PUSH2 0x1978 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP15 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH1 0x40 MLOAD PUSH2 0x19AB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x19F7 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1A03 CALLER DUP4 DUP4 PUSH2 0x2350 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A22 DUP5 DUP5 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP PUSH2 0x1A2D DUP2 PUSH2 0x24F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA4 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x1ACD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1ADF PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1AE9 DUP3 PUSH2 0x2511 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B36 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF7E5E6D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x1B58 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDFF50CB PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x1B61 PUSH2 0x1A35 JUMP JUMPDEST LT ISZERO PUSH2 0x1B80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3345E999 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD DUP4 GT ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x78D29805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xC SLOAD PUSH2 0x1BB1 SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x1BD4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x25A5 JUMP JUMPDEST PUSH32 0x3BAD0C59CF2F06E7314077049F48A93578CD16F5EF92329F1DAB1420A99C177E PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x1C3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1C50 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1C5D CALLER PUSH1 0x0 DUP4 PUSH2 0x268F JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1C94 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1CA5 SWAP2 PUSH2 0x3930 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x1A2D SWAP2 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CEC JUMPI PUSH1 0x40 MLOAD PUSH4 0x407FDED5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x1D0E JUMPI PUSH1 0x40 MLOAD PUSH4 0xBE2A5CB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2191F92A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D88 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH2 0x1DD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61726B6572206D6574686F642072657475726E65642066616C736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xEDFFC32E068C7C95DFD4BDFD5C4D939A084D6B11C4199EAC8436ED234D72F926 SWAP2 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x1E4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1E60 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1C5D CALLER DUP3 PUSH2 0x296C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1E93 DUP6 PUSH1 0x0 ADD MLOAD DUP6 PUSH2 0x2B95 JUMP JUMPDEST SWAP1 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1EA9 DUP6 DUP6 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP PUSH2 0x1788 PUSH2 0x1EB7 DUP3 PUSH2 0x24F9 JUMP JUMPDEST DUP5 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD02F7351 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xD02F7351 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F4B SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x63E00E33 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1FA2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A946267 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FC3 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH7 0x6379DA05B60000 DUP2 MSTORE POP PUSH2 0x2BAD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1FD1 DUP3 DUP6 PUSH2 0x3901 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FE8 PUSH2 0x172B JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1FF8 DUP3 DUP6 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xC SLOAD PUSH2 0x200A SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH2 0x2020 SWAP1 DUP7 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2047 SWAP1 DUP9 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP12 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2077 SWAP1 DUP6 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP11 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x20B9 SWAP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0xA91E67C5EA634CD43A12C5A482724B03DE01E85CA68702A53D0C2F45CB7C1DC5 ADDRESS DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2122 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x2158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x216A PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1C5D CALLER DUP3 PUSH2 0x2BD0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x2197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x21A9 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1C5D CALLER DUP3 PUSH1 0x0 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x21D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x21EA PUSH2 0x10BF JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA6AFED95 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x222D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2251 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2275 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EEA49B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST PUSH2 0x2281 CALLER DUP6 DUP6 DUP6 PUSH2 0x2D6F JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x22C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1205B57B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x22E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DFCA6B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0x2312 JUMPI PUSH1 0x40 MLOAD PUSH4 0x717220F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xAAA68312E2EA9D50E16AF5068410AB56E1A1FD06037B1A35664812C30F821460 SWAP2 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x12004531 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0x24008A62 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23D9 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x23FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x8C81362D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x241F JUMPI PUSH1 0x40 MLOAD PUSH4 0xC9021E2F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x242A DUP6 PUSH2 0x1C6D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x0 NOT DUP6 EQ PUSH2 0x243D JUMPI DUP5 PUSH2 0x243F JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x244D DUP9 DUP4 PUSH2 0x3229 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x245B DUP3 DUP6 PUSH2 0x3901 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xB SLOAD PUSH2 0x246D SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP8 DUP2 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0xB DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP16 AND DUP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x1A2A22CB034D26D1854BDC6666A5B91FE25EFBBB5DCAD3B0355478D6F5C362A1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xB7E SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x253B JUMPI PUSH1 0x40 MLOAD PUSH4 0x38ACF799 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST PUSH2 0x2545 CALLER DUP7 PUSH2 0x3229 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD PUSH2 0x2555 SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST SWAP2 POP DUP2 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0xA91E67C5EA634CD43A12C5A482724B03DE01E85CA68702A53D0C2F45CB7C1DC5 CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2591 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2609 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 RETURNDATASIZE PUSH1 0x0 DUP2 EQ PUSH2 0x2625 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x262F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 NOT SWAP2 POP PUSH2 0x263B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD SWAP2 POP JUMPDEST POP DUP1 PUSH2 0x2689 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544F4B454E5F5452414E534645525F4F55545F4641494C454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x269A JUMPI POP DUP1 ISZERO JUMPDEST PUSH2 0x2703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E65206F662072656465656D546F6B656E73496E206F722072656465656D41 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x6D6F756E74496E206D757374206265207A65726F PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2718 PUSH2 0x172B JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP5 ISZERO PUSH2 0x2739 JUMPI DUP5 SWAP2 POP PUSH2 0x2732 DUP4 DUP7 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x2743 DUP5 DUP5 PUSH2 0x3400 JUMP JUMPDEST SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEABE7D91 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xEABE7D91 SWAP1 PUSH2 0x277E SWAP1 ADDRESS SWAP1 DUP12 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x279D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27C1 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x27E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x480F4247 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x2807 JUMPI PUSH1 0x40 MLOAD PUSH4 0x97B5CFCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x2810 PUSH2 0x1A35 JUMP JUMPDEST LT ISZERO PUSH2 0x282F JUMPI PUSH1 0x40 MLOAD PUSH4 0x91240A1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xD SLOAD PUSH2 0x283D SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2864 SWAP1 DUP5 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x2887 DUP8 DUP4 PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0xE5B754FB1ABB7F01B499791D0B820AE3B6AF3424AC1C59768EDB53F4EC31A929 DUP8 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x28E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x51DFF989 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x51DFF989 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x295F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4EF4C3E1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x4EF4C3E1 SWAP1 PUSH2 0x29A1 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29E4 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2A08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x49ABD4FD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x2A2A JUMPI PUSH1 0x40 MLOAD PUSH4 0x38D88597 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2A3F PUSH2 0x172B JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x2A4F DUP6 DUP6 PUSH2 0x3229 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A5D DUP3 DUP5 PUSH2 0x3400 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD PUSH2 0x2A6D SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A94 SWAP1 DUP3 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP1 PUSH2 0x2AE4 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 ADDRESS SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x41C728B9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x41C728B9 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 DUP5 PUSH2 0x3930 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 DUP5 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2BC6 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2B95 JUMP JUMPDEST PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x368F5153 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDA3D454C SWAP1 PUSH2 0x2C05 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C48 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2C6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x918DB40F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x2C8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xE8D8C61 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x2C97 PUSH2 0x1A35 JUMP JUMPDEST LT ISZERO PUSH2 0x2CB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x48C25881 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CC1 DUP5 PUSH2 0x1C6D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2CCF DUP5 DUP4 PUSH2 0x3918 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0xB SLOAD PUSH2 0x2CE1 SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE SWAP1 POP PUSH2 0x2D16 DUP7 DUP7 PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x13ED6866D4E1EE6DA46F845C46D7E54120883D75C5EA9A2DACC1C4CA8984AB80 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2FE3F38F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x5FC7E71E SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DFD SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2E21 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14D179 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x2E43 JUMPI PUSH1 0x40 MLOAD PUSH4 0x80965B1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6C540BAF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EA6 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST EQ PUSH2 0x2EC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1046F38D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2EF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BD1A621 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x2F15 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD29DA7EF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x2F38 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5982C5BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F45 DUP7 DUP7 DUP7 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC488847B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC488847B SWAP1 PUSH2 0x2F7F SWAP1 ADDRESS SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FBF SWAP2 SWAP1 PUSH2 0x39B6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 EQ PUSH2 0x302F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C49515549444154455F434F4D5054524F4C4C45525F43414C43554C4154455F PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x105353D5539517D4D152569157D19052531151 PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 SWAP2 SWAP1 DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3078 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x309C SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST LT ISZERO PUSH2 0x30EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C49515549444154455F5345495A455F544F4F5F4D5543480000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ADDRESS EQ ISZERO PUSH2 0x310C JUMPI PUSH2 0x3107 ADDRESS DUP10 DUP10 DUP5 PUSH2 0x1EBD JUMP JUMPDEST PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB2A02FF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xB2A02FF1 SWAP1 PUSH2 0x313F SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x315E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3182 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST EQ PUSH2 0x31C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B881CD95A5E9D5C994819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP3 MSTORE DUP10 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP8 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x298637F684DA70674F26509B10F07EC2FBC77A335AB1E7D6215A4B2484D8BB52 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3278 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x329C SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x32CF SWAP1 DUP10 SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 RETURNDATASIZE PUSH1 0x0 DUP2 EQ PUSH2 0x3319 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x3323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 NOT SWAP2 POP PUSH2 0x332F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD SWAP2 POP JUMPDEST POP DUP1 PUSH2 0x337D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544F4B454E5F5452414E534645525F494E5F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33E8 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x33F4 DUP4 DUP3 PUSH2 0x3901 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 PUSH2 0x3417 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2B95 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x0 PUSH2 0xB62 DUP3 DUP5 PUSH2 0x394F JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3431 SWAP1 PUSH2 0x3851 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3453 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3499 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x346C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3499 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3499 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3499 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x347E JUMP JUMPDEST POP PUSH2 0x1791 SWAP3 SWAP2 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1791 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x34A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34E2 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x34C6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x34F4 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x351F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3540 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB62 DUP2 PUSH2 0x350A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x35C6 JUMPI PUSH2 0x35C6 PUSH2 0x3584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x35EE JUMPI PUSH2 0x35EE PUSH2 0x3584 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x3607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x3663 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x3673 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x3683 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x36A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36B3 DUP12 DUP4 DUP13 ADD PUSH2 0x359A JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x36C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D6 DUP11 DUP3 DUP12 ADD PUSH2 0x359A JUMP JUMPDEST SWAP3 POP POP PUSH2 0x36E5 PUSH1 0xC0 DUP10 ADD PUSH2 0x3627 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3713 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3723 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x374D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x3758 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x3768 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x378C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3798 DUP11 DUP4 DUP12 ADD PUSH2 0x359A JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x37AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37BB DUP10 DUP3 DUP11 ADD PUSH2 0x359A JUMP JUMPDEST SWAP3 POP POP PUSH2 0x37CA PUSH1 0xA0 DUP9 ADD PUSH2 0x3627 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x37F4 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3804 DUP2 PUSH2 0x350A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x382F DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3846 DUP2 PUSH2 0x350A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3865 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3886 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x1C994B595B9D195C9959 PUSH1 0xB2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3913 JUMPI PUSH2 0x3913 PUSH2 0x38EB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x392B JUMPI PUSH2 0x392B PUSH2 0x38EB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x394A JUMPI PUSH2 0x394A PUSH2 0x38EB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x396C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP3 PUSH6 0x71C28F011F5D 0x21 PUSH5 0x45C5294320 PUSH25 0xAFCDB1757E138C7B79980CAD0557EC64736F6C634300080A00 CALLER ",
		"sourceMap": "244:1327:1:-:0;;;857:711;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1280:5;:27;;-1:-1:-1;;;;;;1280:27:1;1296:10;1280:27;;;;;1354:114;1365:11;1378:12;1392:18;1412:28;1442:5;1449:7;1458:9;1354:10;:114::i;:::-;1546:5;:14;;-1:-1:-1;;;;;1546:14:1;;;;;-1:-1:-1;;;;;;1546:14:1;;;;;;;;;-1:-1:-1;244:1327:1;;-1:-1:-1;;;;;;244:1327:1;855:684:0;1289:107;1306:12;1320:18;1340:28;1370:5;1377:7;1386:9;1289:16;;;;;:107;;:::i;:::-;1456:10;:24;;-1:-1:-1;;;;;;1456:24:0;-1:-1:-1;;;;;1456:24:0;;;;;;;;1491:40;;;-1:-1:-1;;;1491:40:0;;;;:38;;:40;;;;;;;;;;;;;;;1456:24;1491:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;855:684;;;;;;;:::o;934:1521:2:-;1227:5;;;;;-1:-1:-1;;;;;1227:5:2;1213:10;:19;1205:68;;;;-1:-1:-1;;;1205:68:2;;3057:2:10;1205:68:2;;;3039:21:10;3096:2;3076:18;;;3069:30;3135:34;3115:18;;;3108:62;-1:-1:-1;;;3186:18:10;;;3179:34;3230:19;;1205:68:2;;;;;;;;;1306:18;;:23;:43;;;;-1:-1:-1;1333:11:2;;:16;1306:43;1284:128;;;;-1:-1:-1;;;1284:128:2;;3462:2:10;1284:128:2;;;3444:21:10;3501:2;3481:18;;;3474:30;3540:34;3520:18;;;3513:62;-1:-1:-1;;;3591:18:10;;;3584:33;3634:19;;1284:128:2;3260:399:10;1284:128:2;1463:27;:58;;;1554:31;1532:129;;;;-1:-1:-1;;;1532:129:2;;3866:2:10;1532:129:2;;;3848:21:10;3905:2;3885:18;;;3878:30;3944:34;3924:18;;;3917:62;-1:-1:-1;;;3995:18:10;;;3988:46;4051:19;;1532:129:2;3664:412:10;1532:129:2;1706:11;1720:29;1736:12;1720:15;:29::i;:::-;1706:43;-1:-1:-1;1768:15:2;;1760:54;;;;-1:-1:-1;;;1760:54:2;;4283:2:10;1760:54:2;;;4265:21:10;4322:2;4302:18;;;4295:30;4361:28;4341:18;;;4334:56;4407:18;;1760:54:2;4081:350:10;1760:54:2;8778:15;1933:18;:37;462:4:8;1981:11:2;:25;2106:46;2133:18;2106:26;:46::i;:::-;2100:52;-1:-1:-1;2171:15:2;;2163:62;;;;-1:-1:-1;;;2163:62:2;;4638:2:10;2163:62:2;;;4620:21:10;4677:2;4657:18;;;4650:30;4716:34;4696:18;;;4689:62;-1:-1:-1;;;4767:18:10;;;4760:32;4809:19;;2163:62:2;4436:398:10;2163:62:2;2238:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;2261:16:2;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;;2288:8:2;:20;;;;;;-1:-1:-1;;2288:20:2;;;;;;:8;2429:18;;;;;2288:20;2429:18;;;-1:-1:-1;;;;;934:1521:2:o;42615:728::-;42806:5;;42729:7;;42806:5;;;-1:-1:-1;;;;;42806:5:2;42792:10;:19;42788:85;;42835:26;;-1:-1:-1;;;42835:26:2;;;;;;;;;;;42788:85;42923:11;;43020:30;;;-1:-1:-1;;;43020:30:2;;;;-1:-1:-1;;;;;42923:11:2;;;;43020:28;;;;;:30;;;;;;;;;;;;;;:28;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43012:71;;;;-1:-1:-1;;;43012:71:2;;5323:2:10;43012:71:2;;;5305:21:10;5362:2;5342:18;;;5335:30;5401;5381:18;;;5374:58;5449:18;;43012:71:2;5121:352:10;43012:71:2;43151:11;:28;;-1:-1:-1;;;;;;43151:28:2;-1:-1:-1;;;;;43151:28:2;;;;;;;;;43261:46;;;5766:15:10;;;5748:34;;5813:2;5798:18;;5791:43;;;;43261:46:2;;5683:18:10;43261:46:2;;;;;;;;-1:-1:-1;2490:1:7;;42615:728:2;-1:-1:-1;;42615:728:2:o;50911:1299::-;51235:5;;51023:7;;;;51235:5;;;-1:-1:-1;;;;;51235:5:2;51221:10;:19;51217:91;;51264:32;;-1:-1:-1;;;51264:32:2;;;;;;;;;;;51217:91;8778:15;51412:18;;:38;51408:110;;51474:32;;-1:-1:-1;;;51474:32:2;;;;;;;;;;;51408:110;51612:17;;;;;;;;;-1:-1:-1;;;;;51612:17:2;51589:40;;51746:20;-1:-1:-1;;;;;51746:40:2;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51724:120;;;;-1:-1:-1;;;51724:120:2;;5323:2:10;51724:120:2;;;5305:21:10;5362:2;5342:18;;;5335:30;5401;5381:18;;;5374:58;5449:18;;51724:120:2;5121:352:10;51724:120:2;51921:17;:40;;-1:-1:-1;;;;;;51921:40:2;-1:-1:-1;;;;;51921:40:2;;;;;;;;;52067:107;;;5766:15:10;;;5748:34;;5813:2;5798:18;;5791:43;;;;52067:107:2;;5683:18:10;52067:107:2;5478:362:10;244:1327:1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;244:1327:1;;;-1:-1:-1;244:1327:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:10;-1:-1:-1;;;;;89:31:10;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:127::-;211:10;206:3;202:20;199:1;192:31;242:4;239:1;232:15;266:4;263:1;256:15;282:885;336:5;389:3;382:4;374:6;370:17;366:27;356:55;;407:1;404;397:12;356:55;430:13;;-1:-1:-1;;;;;492:10:10;;;489:36;;;505:18;;:::i;:::-;580:2;574:9;548:2;634:13;;-1:-1:-1;;630:22:10;;;654:2;626:31;622:40;610:53;;;678:18;;;698:22;;;675:46;672:72;;;724:18;;:::i;:::-;764:10;760:2;753:22;799:2;791:6;784:18;821:4;811:14;;866:3;861:2;856;848:6;844:15;840:24;837:33;834:53;;;883:1;880;873:12;834:53;905:1;896:10;;915:133;929:2;926:1;923:9;915:133;;;1017:14;;;1013:23;;1007:30;986:14;;;982:23;;975:63;940:10;;;;915:133;;;1066:2;1063:1;1060:9;1057:80;;;1125:1;1120:2;1115;1107:6;1103:15;1099:24;1092:35;1057:80;1155:6;282:885;-1:-1:-1;;;;;;282:885:10:o;1172:146::-;1259:13;;1281:31;1259:13;1281:31;:::i;:::-;1172:146;;;:::o;1323:1338::-;1537:6;1545;1553;1561;1569;1577;1585;1593;1646:3;1634:9;1625:7;1621:23;1617:33;1614:53;;;1663:1;1660;1653:12;1614:53;1695:9;1689:16;1714:31;1739:5;1714:31;:::i;:::-;1814:2;1799:18;;1793:25;1764:5;;-1:-1:-1;1827:33:10;1793:25;1827:33;:::i;:::-;1931:2;1916:18;;1910:25;1879:7;;-1:-1:-1;1944:33:10;1910:25;1944:33;:::i;:::-;2043:2;2028:18;;2022:25;2091:3;2076:19;;2070:26;1996:7;;-1:-1:-1;2022:25:10;-1:-1:-1;;;;;;2145:14:10;;;2142:34;;;2172:1;2169;2162:12;2142:34;2195:61;2248:7;2239:6;2228:9;2224:22;2195:61;:::i;:::-;2185:71;;2302:3;2291:9;2287:19;2281:26;2265:42;;2332:2;2322:8;2319:16;2316:36;;;2348:1;2345;2338:12;2316:36;;2371:63;2426:7;2415:8;2404:9;2400:24;2371:63;:::i;:::-;2361:73;;;2479:3;2468:9;2464:19;2458:26;2528:4;2519:7;2515:18;2506:7;2503:31;2493:59;;2548:1;2545;2538:12;2493:59;2571:7;-1:-1:-1;2597:58:10;2650:3;2635:19;;2597:58;:::i;:::-;2587:68;;1323:1338;;;;;;;;;;;:::o;2666:184::-;2736:6;2789:2;2777:9;2768:7;2764:23;2760:32;2757:52;;;2805:1;2802;2795:12;2757:52;-1:-1:-1;2828:16:10;;2666:184;-1:-1:-1;2666:184:10:o;4839:277::-;4906:6;4959:2;4947:9;4938:7;4934:23;4930:32;4927:52;;;4975:1;4972;4965:12;4927:52;5007:9;5001:16;5060:5;5053:13;5046:21;5039:5;5036:32;5026:60;;5082:1;5079;5072:12;5026:60;5105:5;4839:277;-1:-1:-1;;;4839:277:10:o;6206:380::-;6285:1;6281:12;;;;6328;;;6349:61;;6403:4;6395:6;6391:17;6381:27;;6349:61;6456:2;6448:6;6445:14;6425:18;6422:38;6419:161;;;6502:10;6497:3;6493:20;6490:1;6483:31;6537:4;6534:1;6527:15;6565:4;6562:1;6555:15;6419:161;;6206:380;;;:::o;:::-;244:1327:1;;;;;;"
	},
	"abi": [
		{
			"inputs": [],
			"name": "_acceptAdmin",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "addAmount",
					"type": "uint256"
				}
			],
			"name": "_addReserves",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "compLikeDelegatee",
					"type": "address"
				}
			],
			"name": "_delegateCompLikeTo",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "reduceAmount",
					"type": "uint256"
				}
			],
			"name": "_reduceReserves",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "contract ComptrollerInterface",
					"name": "newComptroller",
					"type": "address"
				}
			],
			"name": "_setComptroller",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "contract InterestRateModel",
					"name": "newInterestRateModel",
					"type": "address"
				}
			],
			"name": "_setInterestRateModel",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address payable",
					"name": "newPendingAdmin",
					"type": "address"
				}
			],
			"name": "_setPendingAdmin",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "newReserveFactorMantissa",
					"type": "uint256"
				}
			],
			"name": "_setReserveFactor",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "underlying_",
					"type": "address"
				},
				{
					"internalType": "contract ComptrollerInterface",
					"name": "comptroller_",
					"type": "address"
				},
				{
					"internalType": "contract InterestRateModel",
					"name": "interestRateModel_",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "initialExchangeRateMantissa_",
					"type": "uint256"
				},
				{
					"internalType": "string",
					"name": "name_",
					"type": "string"
				},
				{
					"internalType": "string",
					"name": "symbol_",
					"type": "string"
				},
				{
					"internalType": "uint8",
					"name": "decimals_",
					"type": "uint8"
				},
				{
					"internalType": "address payable",
					"name": "admin_",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"inputs": [],
			"name": "AcceptAdminPendingAdminCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "accrueInterest",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "actualAddAmount",
					"type": "uint256"
				}
			],
			"name": "AddReservesFactorFreshCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "BorrowCashNotAvailable",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "BorrowComptrollerRejection",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "BorrowFreshnessCheck",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "LiquidateAccrueBorrowInterestFailed",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "LiquidateAccrueCollateralInterestFailed",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "LiquidateCloseAmountIsUintMax",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "LiquidateCloseAmountIsZero",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "LiquidateCollateralFreshnessCheck",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "LiquidateComptrollerRejection",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "LiquidateFreshnessCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "LiquidateLiquidatorIsBorrower",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "LiquidateRepayBorrowFreshFailed",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "LiquidateSeizeComptrollerRejection",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "LiquidateSeizeLiquidatorIsBorrower",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "MintComptrollerRejection",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "MintFreshnessCheck",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "RedeemComptrollerRejection",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "RedeemFreshnessCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "RedeemTransferOutNotPossible",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "ReduceReservesAdminCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "ReduceReservesCashNotAvailable",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "ReduceReservesCashValidation",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "ReduceReservesFreshCheck",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "RepayBorrowComptrollerRejection",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "RepayBorrowFreshnessCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SetComptrollerOwnerCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SetInterestRateModelFreshCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SetInterestRateModelOwnerCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SetPendingAdminOwnerCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SetReserveFactorAdminCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SetReserveFactorBoundsCheck",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "SetReserveFactorFreshCheck",
			"type": "error"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "errorCode",
					"type": "uint256"
				}
			],
			"name": "TransferComptrollerRejection",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "TransferNotAllowed",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "TransferNotEnough",
			"type": "error"
		},
		{
			"inputs": [],
			"name": "TransferTooMuch",
			"type": "error"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "cashPrior",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "interestAccumulated",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "borrowIndex",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "totalBorrows",
					"type": "uint256"
				}
			],
			"name": "AccrueInterest",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "Approval",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "approve",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				}
			],
			"name": "balanceOfUnderlying",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "borrowAmount",
					"type": "uint256"
				}
			],
			"name": "borrow",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "borrower",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "borrowAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "accountBorrows",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "totalBorrows",
					"type": "uint256"
				}
			],
			"name": "Borrow",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "borrowBalanceCurrent",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "exchangeRateCurrent",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "underlying_",
					"type": "address"
				},
				{
					"internalType": "contract ComptrollerInterface",
					"name": "comptroller_",
					"type": "address"
				},
				{
					"internalType": "contract InterestRateModel",
					"name": "interestRateModel_",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "initialExchangeRateMantissa_",
					"type": "uint256"
				},
				{
					"internalType": "string",
					"name": "name_",
					"type": "string"
				},
				{
					"internalType": "string",
					"name": "symbol_",
					"type": "string"
				},
				{
					"internalType": "uint8",
					"name": "decimals_",
					"type": "uint8"
				}
			],
			"name": "initialize",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "contract ComptrollerInterface",
					"name": "comptroller_",
					"type": "address"
				},
				{
					"internalType": "contract InterestRateModel",
					"name": "interestRateModel_",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "initialExchangeRateMantissa_",
					"type": "uint256"
				},
				{
					"internalType": "string",
					"name": "name_",
					"type": "string"
				},
				{
					"internalType": "string",
					"name": "symbol_",
					"type": "string"
				},
				{
					"internalType": "uint8",
					"name": "decimals_",
					"type": "uint8"
				}
			],
			"name": "initialize",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "borrower",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "repayAmount",
					"type": "uint256"
				},
				{
					"internalType": "contract CTokenInterface",
					"name": "cTokenCollateral",
					"type": "address"
				}
			],
			"name": "liquidateBorrow",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "liquidator",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "address",
					"name": "borrower",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "repayAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "address",
					"name": "cTokenCollateral",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "seizeTokens",
					"type": "uint256"
				}
			],
			"name": "LiquidateBorrow",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "mintAmount",
					"type": "uint256"
				}
			],
			"name": "mint",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "minter",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "mintAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "mintTokens",
					"type": "uint256"
				}
			],
			"name": "Mint",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "oldAdmin",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "address",
					"name": "newAdmin",
					"type": "address"
				}
			],
			"name": "NewAdmin",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "contract ComptrollerInterface",
					"name": "oldComptroller",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "contract ComptrollerInterface",
					"name": "newComptroller",
					"type": "address"
				}
			],
			"name": "NewComptroller",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "contract InterestRateModel",
					"name": "oldInterestRateModel",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "contract InterestRateModel",
					"name": "newInterestRateModel",
					"type": "address"
				}
			],
			"name": "NewMarketInterestRateModel",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "oldPendingAdmin",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "address",
					"name": "newPendingAdmin",
					"type": "address"
				}
			],
			"name": "NewPendingAdmin",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "oldReserveFactorMantissa",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "newReserveFactorMantissa",
					"type": "uint256"
				}
			],
			"name": "NewReserveFactor",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "redeemTokens",
					"type": "uint256"
				}
			],
			"name": "redeem",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "redeemer",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "redeemAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "redeemTokens",
					"type": "uint256"
				}
			],
			"name": "Redeem",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "redeemAmount",
					"type": "uint256"
				}
			],
			"name": "redeemUnderlying",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "repayAmount",
					"type": "uint256"
				}
			],
			"name": "repayBorrow",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "payer",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "address",
					"name": "borrower",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "repayAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "accountBorrows",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "totalBorrows",
					"type": "uint256"
				}
			],
			"name": "RepayBorrow",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "borrower",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "repayAmount",
					"type": "uint256"
				}
			],
			"name": "repayBorrowBehalf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "benefactor",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "addAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "newTotalReserves",
					"type": "uint256"
				}
			],
			"name": "ReservesAdded",
			"type": "event"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": false,
					"internalType": "address",
					"name": "admin",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "reduceAmount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "newTotalReserves",
					"type": "uint256"
				}
			],
			"name": "ReservesReduced",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "liquidator",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "borrower",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "seizeTokens",
					"type": "uint256"
				}
			],
			"name": "seize",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "contract EIP20NonStandardInterface",
					"name": "token",
					"type": "address"
				}
			],
			"name": "sweepToken",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalBorrowsCurrent",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "dst",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transfer",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "from",
					"type": "address"
				},
				{
					"indexed": true,
					"internalType": "address",
					"name": "to",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "Transfer",
			"type": "event"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "src",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "dst",
					"type": "address"
				},
				{
					"internalType": "uint256",
					"name": "amount",
					"type": "uint256"
				}
			],
			"name": "transferFrom",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "accrualBlockNumber",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "admin",
			"outputs": [
				{
					"internalType": "address payable",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				},
				{
					"internalType": "address",
					"name": "spender",
					"type": "address"
				}
			],
			"name": "allowance",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "owner",
					"type": "address"
				}
			],
			"name": "balanceOf",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "borrowBalanceStored",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "borrowIndex",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "borrowRatePerBlock",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "comptroller",
			"outputs": [
				{
					"internalType": "contract ComptrollerInterface",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "exchangeRateStored",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "address",
					"name": "account",
					"type": "address"
				}
			],
			"name": "getAccountSnapshot",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				},
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "getCash",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "interestRateModel",
			"outputs": [
				{
					"internalType": "contract InterestRateModel",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "isCToken",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "name",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "NO_ERROR",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "pendingAdmin",
			"outputs": [
				{
					"internalType": "address payable",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "protocolSeizeShareMantissa",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "reserveFactorMantissa",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "supplyRatePerBlock",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "symbol",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalBorrows",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalReserves",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "totalSupply",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "underlying",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	],
	"storageLayout": {
		"storage": [
			{
				"astId": 2641,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "_notEntered",
				"offset": 0,
				"slot": "0",
				"type": "t_bool"
			},
			{
				"astId": 2644,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "name",
				"offset": 0,
				"slot": "1",
				"type": "t_string_storage"
			},
			{
				"astId": 2647,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "symbol",
				"offset": 0,
				"slot": "2",
				"type": "t_string_storage"
			},
			{
				"astId": 2650,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "decimals",
				"offset": 0,
				"slot": "3",
				"type": "t_uint8"
			},
			{
				"astId": 2659,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "admin",
				"offset": 1,
				"slot": "3",
				"type": "t_address_payable"
			},
			{
				"astId": 2662,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "pendingAdmin",
				"offset": 0,
				"slot": "4",
				"type": "t_address_payable"
			},
			{
				"astId": 2666,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "comptroller",
				"offset": 0,
				"slot": "5",
				"type": "t_contract(ComptrollerInterface)3351"
			},
			{
				"astId": 2670,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "interestRateModel",
				"offset": 0,
				"slot": "6",
				"type": "t_contract(InterestRateModel)4397"
			},
			{
				"astId": 2672,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "initialExchangeRateMantissa",
				"offset": 0,
				"slot": "7",
				"type": "t_uint256"
			},
			{
				"astId": 2675,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "reserveFactorMantissa",
				"offset": 0,
				"slot": "8",
				"type": "t_uint256"
			},
			{
				"astId": 2678,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "accrualBlockNumber",
				"offset": 0,
				"slot": "9",
				"type": "t_uint256"
			},
			{
				"astId": 2681,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "borrowIndex",
				"offset": 0,
				"slot": "10",
				"type": "t_uint256"
			},
			{
				"astId": 2684,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "totalBorrows",
				"offset": 0,
				"slot": "11",
				"type": "t_uint256"
			},
			{
				"astId": 2687,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "totalReserves",
				"offset": 0,
				"slot": "12",
				"type": "t_uint256"
			},
			{
				"astId": 2690,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "totalSupply",
				"offset": 0,
				"slot": "13",
				"type": "t_uint256"
			},
			{
				"astId": 2694,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "accountTokens",
				"offset": 0,
				"slot": "14",
				"type": "t_mapping(t_address,t_uint256)"
			},
			{
				"astId": 2700,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "transferAllowances",
				"offset": 0,
				"slot": "15",
				"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
			},
			{
				"astId": 2710,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "accountBorrows",
				"offset": 0,
				"slot": "16",
				"type": "t_mapping(t_address,t_struct(BorrowSnapshot)2705_storage)"
			},
			{
				"astId": 3033,
				"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
				"label": "underlying",
				"offset": 0,
				"slot": "17",
				"type": "t_address"
			}
		],
		"types": {
			"t_address": {
				"encoding": "inplace",
				"label": "address",
				"numberOfBytes": "20"
			},
			"t_address_payable": {
				"encoding": "inplace",
				"label": "address payable",
				"numberOfBytes": "20"
			},
			"t_bool": {
				"encoding": "inplace",
				"label": "bool",
				"numberOfBytes": "1"
			},
			"t_contract(ComptrollerInterface)3351": {
				"encoding": "inplace",
				"label": "contract ComptrollerInterface",
				"numberOfBytes": "20"
			},
			"t_contract(InterestRateModel)4397": {
				"encoding": "inplace",
				"label": "contract InterestRateModel",
				"numberOfBytes": "20"
			},
			"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => mapping(address => uint256))",
				"numberOfBytes": "32",
				"value": "t_mapping(t_address,t_uint256)"
			},
			"t_mapping(t_address,t_struct(BorrowSnapshot)2705_storage)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => struct CTokenStorage.BorrowSnapshot)",
				"numberOfBytes": "32",
				"value": "t_struct(BorrowSnapshot)2705_storage"
			},
			"t_mapping(t_address,t_uint256)": {
				"encoding": "mapping",
				"key": "t_address",
				"label": "mapping(address => uint256)",
				"numberOfBytes": "32",
				"value": "t_uint256"
			},
			"t_string_storage": {
				"encoding": "bytes",
				"label": "string",
				"numberOfBytes": "32"
			},
			"t_struct(BorrowSnapshot)2705_storage": {
				"encoding": "inplace",
				"label": "struct CTokenStorage.BorrowSnapshot",
				"members": [
					{
						"astId": 2702,
						"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
						"label": "principal",
						"offset": 0,
						"slot": "0",
						"type": "t_uint256"
					},
					{
						"astId": 2704,
						"contract": "Nyke-lending-protocol/contracts/CErc20Immutable.sol:CErc20Immutable",
						"label": "interestIndex",
						"offset": 0,
						"slot": "1",
						"type": "t_uint256"
					}
				],
				"numberOfBytes": "64"
			},
			"t_uint256": {
				"encoding": "inplace",
				"label": "uint256",
				"numberOfBytes": "32"
			},
			"t_uint8": {
				"encoding": "inplace",
				"label": "uint8",
				"numberOfBytes": "1"
			}
		}
	},
	"web3Deploy": "var underlying_ = /* var of type address here */ ;\nvar comptroller_ = /* var of type address here */ ;\nvar interestRateModel_ = /* var of type address here */ ;\nvar initialExchangeRateMantissa_ = /* var of type uint256 here */ ;\nvar name_ = /* var of type string here */ ;\nvar symbol_ = /* var of type string here */ ;\nvar decimals_ = /* var of type uint8 here */ ;\nvar admin_ = /* var of type address here */ ;\nvar cerc20immutableContract = new web3.eth.Contract([{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"},{\"internalType\":\"address payable\",\"name\":\"admin_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AcceptAdminPendingAdminCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"actualAddAmount\",\"type\":\"uint256\"}],\"name\":\"AddReservesFactorFreshCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowCashNotAvailable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"BorrowComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BorrowFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateAccrueBorrowInterestFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateAccrueCollateralInterestFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateCloseAmountIsUintMax\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateCloseAmountIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateCollateralFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateLiquidatorIsBorrower\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateRepayBorrowFreshFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"LiquidateSeizeComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"LiquidateSeizeLiquidatorIsBorrower\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"MintComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"RedeemComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RedeemFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RedeemTransferOutNotPossible\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReduceReservesAdminCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReduceReservesCashNotAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReduceReservesCashValidation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReduceReservesFreshCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"RepayBorrowComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RepayBorrowFreshnessCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetComptrollerOwnerCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetInterestRateModelFreshCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetInterestRateModelOwnerCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetPendingAdminOwnerCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetReserveFactorAdminCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetReserveFactorBoundsCheck\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SetReserveFactorFreshCheck\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"errorCode\",\"type\":\"uint256\"}],\"name\":\"TransferComptrollerRejection\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferNotEnough\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferTooMuch\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cashPrior\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestAccumulated\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"AccrueInterest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"LiquidateBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mintTokens\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"NewAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"oldComptroller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"NewComptroller\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"oldInterestRateModel\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"NewMarketInterestRateModel\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPendingAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"NewPendingAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldReserveFactorMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"NewReserveFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"accountBorrows\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalBorrows\",\"type\":\"uint256\"}],\"name\":\"RepayBorrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"benefactor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"addAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTotalReserves\",\"type\":\"uint256\"}],\"name\":\"ReservesReduced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NO_ERROR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_acceptAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"addAmount\",\"type\":\"uint256\"}],\"name\":\"_addReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"compLikeDelegatee\",\"type\":\"address\"}],\"name\":\"_delegateCompLikeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"reduceAmount\",\"type\":\"uint256\"}],\"name\":\"_reduceReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"newComptroller\",\"type\":\"address\"}],\"name\":\"_setComptroller\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"newInterestRateModel\",\"type\":\"address\"}],\"name\":\"_setInterestRateModel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newPendingAdmin\",\"type\":\"address\"}],\"name\":\"_setPendingAdmin\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newReserveFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"_setReserveFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrualBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrueInterest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOfUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"borrowBalanceStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"comptroller\",\"outputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRateStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountSnapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"underlying_\",\"type\":\"address\"},{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ComptrollerInterface\",\"name\":\"comptroller_\",\"type\":\"address\"},{\"internalType\":\"contract InterestRateModel\",\"name\":\"interestRateModel_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialExchangeRateMantissa_\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals_\",\"type\":\"uint8\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestRateModel\",\"outputs\":[{\"internalType\":\"contract InterestRateModel\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isCToken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"contract CTokenInterface\",\"name\":\"cTokenCollateral\",\"type\":\"address\"}],\"name\":\"liquidateBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolSeizeShareMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"}],\"name\":\"redeemUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"repayBorrow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"repayBorrowBehalf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserveFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"seize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyRatePerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract EIP20NonStandardInterface\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrows\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalBorrowsCurrent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlying\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]);\nvar cerc20immutable = cerc20immutableContract.deploy({\n     data: '0x60806040523480156200001157600080fd5b50604051620043bd380380620043bd83398101604081905262000034916200081a565b60038054610100600160a81b03191633610100021790556200005c8888888888888862000090565b600380546001600160a01b0390921661010002610100600160a81b0319909216919091179055506200097d95505050505050565b620000ab8686868686866200013560201b62000e591760201c565b601180546001600160a01b0319166001600160a01b038916908117909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa15801562000105573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012b9190620008fb565b5050505050505050565b60035461010090046001600160a01b03163314620001a65760405162461bcd60e51b8152602060048201526024808201527f6f6e6c792061646d696e206d617920696e697469616c697a6520746865206d616044820152631c9ad95d60e21b60648201526084015b60405180910390fd5b600954158015620001b75750600a54155b620002115760405162461bcd60e51b815260206004820152602360248201527f6d61726b6574206d6179206f6e6c7920626520696e697469616c697a6564206f6044820152626e636560e81b60648201526084016200019d565b6007849055836200027e5760405162461bcd60e51b815260206004820152603060248201527f696e697469616c2065786368616e67652072617465206d75737420626520677260448201526f32b0ba32b9103a3430b7103d32b9379760811b60648201526084016200019d565b60006200028b87620003a7565b90508015620002dd5760405162461bcd60e51b815260206004820152601a60248201527f73657474696e6720636f6d7074726f6c6c6572206661696c656400000000000060448201526064016200019d565b42600955670de0b6b3a7640000600a55620002f886620004ff565b90508015620003555760405162461bcd60e51b815260206004820152602260248201527f73657474696e6720696e7465726573742072617465206d6f64656c206661696c604482015261195960f21b60648201526084016200019d565b83516200036a9060019060208701906200067c565b508251620003809060029060208601906200067c565b50506003805460ff90921660ff199283161790556000805490911660011790555050505050565b60035460009061010090046001600160a01b03163314620003db5760405163d219dc1f60e01b815260040160405180910390fd5b60055460408051623f1ee960e11b815290516001600160a01b0392831692851691627e3dd29160048083019260209291908290030181865afa15801562000426573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200044c919062000915565b6200049a5760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c73650000000060448201526064016200019d565b600580546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527f7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d91015b60405180910390a150600092915050565b600354600090819061010090046001600160a01b03163314620005355760405163407fded560e01b815260040160405180910390fd5b42600954146200055857604051630be2a5cb60e11b815260040160405180910390fd5b600660009054906101000a90046001600160a01b03169050826001600160a01b0316632191f92a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620005af573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005d5919062000915565b620006235760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c73650000000060448201526064016200019d565b600680546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527fedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f9269101620004ee565b8280546200068a9062000940565b90600052602060002090601f016020900481019282620006ae5760008555620006f9565b82601f10620006c957805160ff1916838001178555620006f9565b82800160010185558215620006f9579182015b82811115620006f9578251825591602001919060010190620006dc565b50620007079291506200070b565b5090565b5b808211156200070757600081556001016200070c565b6001600160a01b03811681146200073857600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200076357600080fd5b81516001600160401b03808211156200078057620007806200073b565b604051601f8301601f19908116603f01168101908282118183101715620007ab57620007ab6200073b565b81604052838152602092508683858801011115620007c857600080fd5b600091505b83821015620007ec5785820183015181830184015290820190620007cd565b83821115620007fe5760008385830101525b9695505050505050565b8051620008158162000722565b919050565b600080600080600080600080610100898b0312156200083857600080fd5b8851620008458162000722565b60208a0151909850620008588162000722565b60408a01519097506200086b8162000722565b60608a015160808b015191975095506001600160401b03808211156200089057600080fd5b6200089e8c838d0162000751565b955060a08b0151915080821115620008b557600080fd5b50620008c48b828c0162000751565b93505060c089015160ff81168114620008dc57600080fd5b9150620008ec60e08a0162000808565b90509295985092959890939650565b6000602082840312156200090e57600080fd5b5051919050565b6000602082840312156200092857600080fd5b815180151581146200093957600080fd5b9392505050565b600181811c908216806200095557607f821691505b602082108114156200097757634e487b7160e01b600052602260045260246000fd5b50919050565b613a30806200098d6000396000f3fe608060405234801561001057600080fd5b506004361061030c5760003560e01c80637f1e06be1161019d578063bd6d894d116100e9578063f2b3abbd116100a2578063f851a4401161007c578063f851a440146106a8578063f8f9da28146106c0578063fca7820b146106c8578063fe9c44ae146106db57600080fd5b8063f2b3abbd1461066f578063f3fdb15a14610682578063f5e3c4621461069557600080fd5b8063bd6d894d146105cd578063c37f68e2146105d5578063c5ebeaec14610608578063db006a751461061b578063dd62ed3e1461062e578063e9c714f21461066757600080fd5b8063a0712d6811610156578063aa5af0fd11610130578063aa5af0fd14610596578063ae9d70b01461059f578063b2a02ff1146105a7578063b71d1a0c146105ba57600080fd5b8063a0712d6814610568578063a6afed951461057b578063a9059cbb1461058357600080fd5b80637f1e06be1461050b578063852a12e31461051e5780638f840ddd1461053157806395d89b411461053a57806395dd91931461054257806399d8c1b41461055557600080fd5b80633af9e6691161025c578063601a0bf1116102155780636c540baf116101ef5780636c540baf146104be5780636f307dc3146104c757806370a08231146104da57806373acee981461050357600080fd5b8063601a0bf1146104955780636752e702146104a857806369ab3250146104b657600080fd5b80633af9e669146104385780633b1d21a21461044b5780633e941010146104535780634576b5db1461046657806347bd3718146104795780635fe3b5671461048257600080fd5b8063182df0f5116102c957806323b872dd116102a357806323b872dd146103c85780632608f818146103db57806326782247146103ee578063313ce5671461041957600080fd5b8063182df0f5146103985780631a31d465146103a05780631be19560146103b557600080fd5b806306fdde0314610311578063095ea7b31461032f5780630e75270214610352578063173b99041461037357806317bfdfbc1461037c57806318160ddd1461038f575b600080fd5b6103196106e3565b60405161032691906134b5565b60405180910390f35b61034261033d366004613522565b610771565b6040519015158152602001610326565b61036561036036600461354e565b6107df565b604051908152602001610326565b61036560085481565b61036561038a366004613567565b6107f2565b610365600d5481565b61036561084e565b6103b36103ae36600461363d565b61085d565b005b6103b36103c3366004613567565b6108f2565b6103426103d63660046136f3565b610abe565b6103656103e9366004613522565b610b0e565b600454610401906001600160a01b031681565b6040516001600160a01b039091168152602001610326565b6003546104269060ff1681565b60405160ff9091168152602001610326565b610365610446366004613567565b610b23565b610365610b69565b61036561046136600461354e565b610b73565b610365610474366004613567565b610b84565b610365600b5481565b600554610401906001600160a01b031681565b6103656104a336600461354e565b610cd6565b610365666379da05b6000081565b610365600081565b61036560095481565b601154610401906001600160a01b031681565b6103656104e8366004613567565b6001600160a01b03166000908152600e602052604090205490565b610365610d15565b6103b3610519366004613567565b610d5f565b61036561052c36600461354e565b610e36565b610365600c5481565b610319610e41565b610365610550366004613567565b610e4e565b6103b3610563366004613734565b610e59565b61036561057636600461354e565b6110b4565b6103656110bf565b610342610591366004613522565b6112ac565b610365600a5481565b6103656112fb565b6103656105b53660046136f3565b611393565b6103656105c8366004613567565b6113e2565b61036561146f565b6105e86105e3366004613567565b6114bf565b604080519485526020850193909352918301526060820152608001610326565b61036561061636600461354e565b611500565b61036561062936600461354e565b61150b565b61036561063c3660046137d6565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205490565b610365611516565b61036561067d366004613567565b61161d565b600654610401906001600160a01b031681565b6103656106a336600461380f565b611631565b6003546104019061010090046001600160a01b031681565b610365611648565b6103656106d636600461354e565b61169b565b610342600181565b600180546106f090613851565b80601f016020809104026020016040519081016040528092919081815260200182805461071c90613851565b80156107695780601f1061073e57610100808354040283529160200191610769565b820191906000526020600020905b81548152906001019060200180831161074c57829003601f168201915b505050505081565b336000818152600f602090815260408083206001600160a01b03871680855292528083208590555191929182907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107cd9087815260200190565b60405180910390a35060019392505050565b60006107ea826116da565b506000919050565b6000805460ff1661081e5760405162461bcd60e51b81526004016108159061388c565b60405180910390fd5b6000805460ff191690556108306110bf565b5061083a82610e4e565b90506000805460ff19166001179055919050565b600061085861172b565b905090565b61086b868686868686610e59565b601180546001600160a01b0319166001600160a01b038916908117909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e891906138b0565b5050505050505050565b60035461010090046001600160a01b031633146109695760405162461bcd60e51b815260206004820152602f60248201527f4345726332303a3a7377656570546f6b656e3a206f6e6c792061646d696e206360448201526e616e20737765657020746f6b656e7360881b6064820152608401610815565b6011546001600160a01b03828116911614156109e25760405162461bcd60e51b815260206004820152603260248201527f4345726332303a3a7377656570546f6b656e3a2063616e206e6f74207377656560448201527138103ab73232b9363cb4b733903a37b5b2b760711b6064820152608401610815565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d91906138b0565b60035460405163a9059cbb60e01b81526001600160a01b03610100909204821660048201526024810183905291925083169063a9059cbb90604401600060405180830381600087803b158015610aa257600080fd5b505af1158015610ab6573d6000803e3d6000fd5b505050505050565b6000805460ff16610ae15760405162461bcd60e51b81526004016108159061388c565b6000805460ff19168155610af733868686611795565b1490506000805460ff191660011790559392505050565b6000610b1a83836119c3565b50600092915050565b6000806040518060200160405280610b3961146f565b90526001600160a01b0384166000908152600e6020526040902054909150610b62908290611a15565b9392505050565b6000610858611a35565b6000610b7e82611aaa565b92915050565b60035460009061010090046001600160a01b03163314610bb75760405163d219dc1f60e01b815260040160405180910390fd5b60055460408051623f1ee960e11b815290516001600160a01b0392831692851691627e3dd29160048083019260209291908290030181865afa158015610c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2591906138c9565b610c715760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c7365000000006044820152606401610815565b600580546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527f7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d91015b60405180910390a150600092915050565b6000805460ff16610cf95760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055610d0b6110bf565b5061083a82611b01565b6000805460ff16610d385760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055610d4a6110bf565b5050600b546000805460ff1916600117905590565b60035461010090046001600160a01b03163314610dd45760405162461bcd60e51b815260206004820152602d60248201527f6f6e6c79207468652061646d696e206d6179207365742074686520636f6d702d60448201526c6c696b652064656c656761746560981b6064820152608401610815565b6011546040516317066a5760e21b81526001600160a01b03838116600483015290911690635c19a95c90602401600060405180830381600087803b158015610e1b57600080fd5b505af1158015610e2f573d6000803e3d6000fd5b5050505050565b60006107ea82611c1c565b600280546106f090613851565b6000610b7e82611c6d565b60035461010090046001600160a01b03163314610ec45760405162461bcd60e51b8152602060048201526024808201527f6f6e6c792061646d696e206d617920696e697469616c697a6520746865206d616044820152631c9ad95d60e21b6064820152608401610815565b600954158015610ed45750600a54155b610f2c5760405162461bcd60e51b815260206004820152602360248201527f6d61726b6574206d6179206f6e6c7920626520696e697469616c697a6564206f6044820152626e636560e81b6064820152608401610815565b600784905583610f975760405162461bcd60e51b815260206004820152603060248201527f696e697469616c2065786368616e67652072617465206d75737420626520677260448201526f32b0ba32b9103a3430b7103d32b9379760811b6064820152608401610815565b6000610fa287610b84565b90508015610ff25760405162461bcd60e51b815260206004820152601a60248201527f73657474696e6720636f6d7074726f6c6c6572206661696c65640000000000006044820152606401610815565b42600955670de0b6b3a7640000600a5561100b86611cb7565b905080156110665760405162461bcd60e51b815260206004820152602260248201527f73657474696e6720696e7465726573742072617465206d6f64656c206661696c604482015261195960f21b6064820152608401610815565b8351611079906001906020870190613425565b50825161108d906002906020860190613425565b50506003805460ff90921660ff199283161790556000805490911660011790555050505050565b60006107ea82611e2c565b6009546000904290808214156110d85760009250505090565b60006110e2611a35565b600b54600c54600a546006546040516315f2405360e01b81526004810186905260248101859052604481018490529495509293919290916000916001600160a01b0316906315f2405390606401602060405180830381865afa15801561114c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117091906138b0565b9050645d21dba0008111156111c75760405162461bcd60e51b815260206004820152601c60248201527f626f72726f772072617465206973206162737572646c792068696768000000006044820152606401610815565b60006111d38789613901565b905060006111ef60405180602001604052808581525083611e6b565b905060006111fd8288611a15565b9050600061120b8883613918565b9050600061122a6040518060200160405280600854815250848a611e9c565b9050600061123985898a611e9c565b60098e9055600a819055600b849055600c839055604080518d815260208101879052908101829052606081018590529091507f4dec04e750ca11537cabcd8a9eab06494de08da3735bc8871cd41250e190bc049060800160405180910390a160009d505050505050505050505050505090565b6000805460ff166112cf5760405162461bcd60e51b81526004016108159061388c565b6000805460ff191681556112e533808686611795565b1490506000805460ff1916600117905592915050565b6006546000906001600160a01b031663b8168816611317611a35565b600b54600c546008546040516001600160e01b031960e087901b16815260048101949094526024840192909252604483015260648201526084015b602060405180830381865afa15801561136f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085891906138b0565b6000805460ff166113b65760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556113cc33858585611ebd565b50600080805460ff191660011790559392505050565b60035460009061010090046001600160a01b0316331461141557604051635cb56c2b60e01b815260040160405180910390fd5b600480546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99101610cc5565b6000805460ff166114925760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556114a46110bf565b506114ad61084e565b90506000805460ff1916600117905590565b6001600160a01b0381166000908152600e602052604081205481908190819081906114e987611c6d565b6114f161172b565b93509350935093509193509193565b60006107ea82612136565b60006107ea82612175565b6004546000906001600160a01b031633141580611531575033155b1561154f57604051631ba24f2960e21b815260040160405180910390fd5b60038054600480546001600160a01b03808216610100818102610100600160a81b0319871617968790556001600160a01b031990931690935560408051948390048216808652929095041660208401529290917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a1600454604080516001600160a01b03808516825290921660208301527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9910160405180910390a160009250505090565b60006116276110bf565b50610b7e82611cb7565b600061163e8484846121b6565b5060009392505050565b6006546000906001600160a01b03166315f24053611664611a35565b600b54600c546040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401611352565b6000805460ff166116be5760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556116d06110bf565b5061083a82612294565b60005460ff166116fc5760405162461bcd60e51b81526004016108159061388c565b6000805460ff1916905561170e6110bf565b5061171a333383612350565b50506000805460ff19166001179055565b600d546000908061173e57505060075490565b6000611748611a35565b90506000600c54600b548361175d9190613918565b6117679190613901565b905060008361177e670de0b6b3a764000084613930565b611788919061394f565b95945050505050565b5090565b6005546040516317b9b84b60e31b81523060048201526001600160a01b038581166024830152848116604483015260648201849052600092839291169063bdcdc258906084016020604051808303816000875af11580156117fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181e91906138b0565b905080156118425760405163089d427760e11b815260048101829052602401610815565b836001600160a01b0316856001600160a01b0316141561187557604051638cd22d1960e01b815260040160405180910390fd5b6000856001600160a01b0316876001600160a01b0316141561189a57506000196118c2565b506001600160a01b038086166000908152600f60209081526040808320938a16835292905220545b60006118ce8583613901565b6001600160a01b0388166000908152600e6020526040812054919250906118f6908790613901565b6001600160a01b0388166000908152600e60205260408120549192509061191e908890613918565b6001600160a01b03808b166000908152600e6020526040808220869055918b1681522081905590506000198414611978576001600160a01b03808a166000908152600f60209081526040808320938e168352929052208390555b876001600160a01b0316896001600160a01b03166000805160206139db833981519152896040516119ab91815260200190565b60405180910390a35060009998505050505050505050565b60005460ff166119e55760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556119f76110bf565b50611a03338383612350565b50506000805460ff1916600117905550565b600080611a228484611e6b565b9050611a2d816124f9565b949350505050565b6011546040516370a0823160e01b81523060048201526000916001600160a01b03169081906370a0823190602401602060405180830381865afa158015611a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa491906138b0565b91505090565b6000805460ff16611acd5760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055611adf6110bf565b50611ae982612511565b5050600090506000805460ff19166001179055919050565b600354600090819061010090046001600160a01b03163314611b3657604051630f7e5e6d60e41b815260040160405180910390fd5b4260095414611b5857604051630dff50cb60e41b815260040160405180910390fd5b82611b61611a35565b1015611b8057604051633345e99960e01b815260040160405180910390fd5b600c54831115611ba3576040516378d2980560e11b815260040160405180910390fd5b82600c54611bb19190613901565b600c819055600354909150611bd49061010090046001600160a01b0316846125a5565b7f3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e600360019054906101000a90046001600160a01b03168483604051610cc593929190613971565b60005460ff16611c3e5760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055611c506110bf565b50611c5d3360008361268f565b506000805460ff19166001179055565b6001600160a01b03811660009081526010602052604081208054611c945750600092915050565b600a548154600091611ca591613930565b9050816001015481611a2d919061394f565b600354600090819061010090046001600160a01b03163314611cec5760405163407fded560e01b815260040160405180910390fd5b4260095414611d0e57604051630be2a5cb60e11b815260040160405180910390fd5b600660009054906101000a90046001600160a01b03169050826001600160a01b0316632191f92a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8891906138c9565b611dd45760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c7365000000006044820152606401610815565b600680546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527fedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f9269101610cc5565b60005460ff16611e4e5760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055611e606110bf565b50611c5d338261296c565b6040805160208101909152600081526040518060200160405280611e93856000015185612b95565b90529392505050565b600080611ea98585611e6b565b9050611788611eb7826124f9565b84612ba1565b60055460405163d02f735160e01b81523060048201526001600160a01b0386811660248301528581166044830152848116606483015260848201849052600092169063d02f73519060a4016020604051808303816000875af1158015611f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4b91906138b0565b90508015611f6f576040516363e00e3360e11b815260048101829052602401610815565b836001600160a01b0316836001600160a01b03161415611fa257604051633a94626760e11b815260040160405180910390fd5b6000611fc3836040518060200160405280666379da05b60000815250612bad565b90506000611fd18285613901565b905060006040518060200160405280611fe861172b565b905290506000611ff88285611a15565b9050600081600c5461200a9190613918565b600c819055600d54909150612020908690613901565b600d556001600160a01b0388166000908152600e6020526040902054612047908890613901565b6001600160a01b03808a166000908152600e602052604080822093909355908b1681522054612077908590613918565b6001600160a01b03808b166000818152600e602052604090819020939093559151908a16906000805160206139db833981519152906120b99088815260200190565b60405180910390a360405185815230906001600160a01b038a16906000805160206139db8339815191529060200160405180910390a37fa91e67c5ea634cd43a12c5a482724b03de01e85ca68702a53d0c2f45cb7c1dc530838360405161212293929190613971565b60405180910390a150505050505050505050565b60005460ff166121585760405162461bcd60e51b81526004016108159061388c565b6000805460ff1916905561216a6110bf565b50611c5d3382612bd0565b60005460ff166121975760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556121a96110bf565b50611c5d3382600061268f565b60005460ff166121d85760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556121ea6110bf565b506000816001600160a01b031663a6afed956040518163ffffffff1660e01b81526004016020604051808303816000875af115801561222d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225191906138b0565b9050801561227557604051633eea49b760e11b815260048101829052602401610815565b61228133858585612d6f565b50506000805460ff191660011790555050565b60035460009061010090046001600160a01b031633146122c757604051631205b57b60e11b815260040160405180910390fd5b42600954146122e957604051637dfca6b760e11b815260040160405180910390fd5b670de0b6b3a76400008211156123125760405163717220f360e11b815260040160405180910390fd5b600880549083905560408051828152602081018590527faaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f8214609101610cc5565b600554604051631200453160e11b81523060048201526001600160a01b03858116602483015284811660448301526064820184905260009283929116906324008a62906084016020604051808303816000875af11580156123b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d991906138b0565b905080156123fd57604051638c81362d60e01b815260048101829052602401610815565b426009541461241f5760405163c9021e2f60e01b815260040160405180910390fd5b600061242a85611c6d565b90506000600019851461243d578461243f565b815b9050600061244d8883613229565b9050600061245b8285613901565b9050600082600b5461246d9190613901565b6001600160a01b038a8116600081815260106020908152604091829020878155600a54600190910155600b8590558151938f168452830191909152810185905260608101849052608081018290529091507f1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a19060a00160405180910390a1509098975050505050505050565b8051600090610b7e90670de0b6b3a76400009061394f565b6000808080426009541461253b576040516338acf79960e01b815260048101829052602401610815565b6125453386613229565b905080600c546125559190613918565b915081600c819055507fa91e67c5ea634cd43a12c5a482724b03de01e85ca68702a53d0c2f45cb7c1dc533828460405161259193929190613971565b60405180910390a160009590945092505050565b60115460405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905290911690819063a9059cbb90604401600060405180830381600087803b1580156125f557600080fd5b505af1158015612609573d6000803e3d6000fd5b5050505060003d60008114612625576020811461262f57600080fd5b600019915061263b565b60206000803e60005191505b50806126895760405162461bcd60e51b815260206004820152601960248201527f544f4b454e5f5452414e534645525f4f55545f4641494c4544000000000000006044820152606401610815565b50505050565b81158061269a575080155b6127035760405162461bcd60e51b815260206004820152603460248201527f6f6e65206f662072656465656d546f6b656e73496e206f722072656465656d416044820152736d6f756e74496e206d757374206265207a65726f60601b6064820152608401610815565b6000604051806020016040528061271861172b565b905290506000808415612739578491506127328386611a15565b9050612749565b6127438484613400565b91508390505b60055460405163eabe7d9160e01b81526000916001600160a01b03169063eabe7d919061277e9030908b908890600401613992565b6020604051808303816000875af115801561279d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c191906138b0565b905080156127e55760405163480f424760e01b815260048101829052602401610815565b4260095414612807576040516397b5cfcd60e01b815260040160405180910390fd5b81612810611a35565b101561282f576040516391240a1b60e01b815260040160405180910390fd5b82600d5461283d9190613901565b600d556001600160a01b0387166000908152600e6020526040902054612864908490613901565b6001600160a01b0388166000908152600e602052604090205561288787836125a5565b60405183815230906001600160a01b038916906000805160206139db8339815191529060200160405180910390a37fe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a9298783856040516128e893929190613971565b60405180910390a16005546040516351dff98960e01b81523060048201526001600160a01b0389811660248301526044820185905260648201869052909116906351dff98990608401600060405180830381600087803b15801561294b57600080fd5b505af115801561295f573d6000803e3d6000fd5b5050505050505050505050565b600554604051634ef4c3e160e01b81526000916001600160a01b031690634ef4c3e1906129a190309087908790600401613992565b6020604051808303816000875af11580156129c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129e491906138b0565b90508015612a08576040516349abd4fd60e01b815260048101829052602401610815565b4260095414612a2a576040516338d8859760e01b815260040160405180910390fd5b60006040518060200160405280612a3f61172b565b905290506000612a4f8585613229565b90506000612a5d8284613400565b905080600d54612a6d9190613918565b600d556001600160a01b0386166000908152600e6020526040902054612a94908290613918565b6001600160a01b0387166000908152600e60205260409081902091909155517f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f90612ae490889085908590613971565b60405180910390a16040518181526001600160a01b0387169030906000805160206139db8339815191529060200160405180910390a36005546040516341c728b960e01b81523060048201526001600160a01b0388811660248301526044820185905260648201849052909116906341c728b990608401600060405180830381600087803b158015612b7557600080fd5b505af1158015612b89573d6000803e3d6000fd5b50505050505050505050565b6000610b628284613930565b6000610b628284613918565b6000670de0b6b3a7640000612bc6848460000151612b95565b610b62919061394f565b60055460405163368f515360e21b81526000916001600160a01b03169063da3d454c90612c0590309087908790600401613992565b6020604051808303816000875af1158015612c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4891906138b0565b90508015612c6c5760405163918db40f60e01b815260048101829052602401610815565b4260095414612c8e57604051630e8d8c6160e21b815260040160405180910390fd5b81612c97611a35565b1015612cb6576040516348c2588160e01b815260040160405180910390fd5b6000612cc184611c6d565b90506000612ccf8483613918565b9050600084600b54612ce19190613918565b6001600160a01b0387166000908152601060205260409020838155600a54600190910155600b8190559050612d1686866125a5565b604080516001600160a01b038816815260208101879052908101839052606081018290527f13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab809060800160405180910390a1505050505050565b600554604051632fe3f38f60e11b81523060048201526001600160a01b03838116602483015286811660448301528581166064830152608482018590526000921690635fc7e71e9060a4016020604051808303816000875af1158015612dd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dfd91906138b0565b90508015612e2157604051630a14d17960e11b815260048101829052602401610815565b4260095414612e43576040516380965b1b60e01b815260040160405180910390fd5b42826001600160a01b0316636c540baf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ea691906138b0565b14612ec457604051631046f38d60e31b815260040160405180910390fd5b846001600160a01b0316846001600160a01b03161415612ef757604051631bd1a62160e21b815260040160405180910390fd5b82612f155760405163d29da7ef60e01b815260040160405180910390fd5b600019831415612f3857604051635982c5bb60e11b815260040160405180910390fd5b6000612f45868686612350565b60055460405163c488847b60e01b815291925060009182916001600160a01b03169063c488847b90612f7f90309089908890600401613992565b6040805180830381865afa158015612f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fbf91906139b6565b915091506000821461302f5760405162461bcd60e51b815260206004820152603360248201527f4c49515549444154455f434f4d5054524f4c4c45525f43414c43554c4154455f604482015272105353d5539517d4d152569157d19052531151606a1b6064820152608401610815565b6040516370a0823160e01b81526001600160a01b0388811660048301528291908716906370a0823190602401602060405180830381865afa158015613078573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061309c91906138b0565b10156130ea5760405162461bcd60e51b815260206004820152601860248201527f4c49515549444154455f5345495a455f544f4f5f4d55434800000000000000006044820152606401610815565b6001600160a01b03851630141561310c5761310730898984611ebd565b6131c6565b60405163b2a02ff160e01b81526000906001600160a01b0387169063b2a02ff19061313f908c908c908790600401613992565b6020604051808303816000875af115801561315e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061318291906138b0565b146131c65760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b881cd95a5e9d5c994819985a5b195960621b6044820152606401610815565b604080516001600160a01b038a811682528981166020830152818301869052871660608201526080810183905290517f298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb529181900360a00190a15050505050505050565b6011546040516370a0823160e01b81523060048201526000916001600160a01b0316908190839082906370a0823190602401602060405180830381865afa158015613278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061329c91906138b0565b6040516323b872dd60e01b81529091506001600160a01b038316906323b872dd906132cf90899030908a90600401613992565b600060405180830381600087803b1580156132e957600080fd5b505af11580156132fd573d6000803e3d6000fd5b5050505060003d60008114613319576020811461332357600080fd5b600019915061332f565b60206000803e60005191505b508061337d5760405162461bcd60e51b815260206004820152601860248201527f544f4b454e5f5452414e534645525f494e5f4641494c454400000000000000006044820152606401610815565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa1580156133c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133e891906138b0565b90506133f48382613901565b98975050505050505050565b6000610b6261341784670de0b6b3a7640000612b95565b83516000610b62828461394f565b82805461343190613851565b90600052602060002090601f0160209004810192826134535760008555613499565b82601f1061346c57805160ff1916838001178555613499565b82800160010185558215613499579182015b8281111561349957825182559160200191906001019061347e565b506117919291505b8082111561179157600081556001016134a1565b600060208083528351808285015260005b818110156134e2578581018301518582016040015282016134c6565b818111156134f4576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461351f57600080fd5b50565b6000806040838503121561353557600080fd5b82356135408161350a565b946020939093013593505050565b60006020828403121561356057600080fd5b5035919050565b60006020828403121561357957600080fd5b8135610b628161350a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126135ab57600080fd5b813567ffffffffffffffff808211156135c6576135c6613584565b604051601f8301601f19908116603f011681019082821181831017156135ee576135ee613584565b8160405283815286602085880101111561360757600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461363857600080fd5b919050565b600080600080600080600060e0888a03121561365857600080fd5b87356136638161350a565b965060208801356136738161350a565b955060408801356136838161350a565b945060608801359350608088013567ffffffffffffffff808211156136a757600080fd5b6136b38b838c0161359a565b945060a08a01359150808211156136c957600080fd5b506136d68a828b0161359a565b9250506136e560c08901613627565b905092959891949750929550565b60008060006060848603121561370857600080fd5b83356137138161350a565b925060208401356137238161350a565b929592945050506040919091013590565b60008060008060008060c0878903121561374d57600080fd5b86356137588161350a565b955060208701356137688161350a565b945060408701359350606087013567ffffffffffffffff8082111561378c57600080fd5b6137988a838b0161359a565b945060808901359150808211156137ae57600080fd5b506137bb89828a0161359a565b9250506137ca60a08801613627565b90509295509295509295565b600080604083850312156137e957600080fd5b82356137f48161350a565b915060208301356138048161350a565b809150509250929050565b60008060006060848603121561382457600080fd5b833561382f8161350a565b92506020840135915060408401356138468161350a565b809150509250925092565b600181811c9082168061386557607f821691505b6020821081141561388657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152691c994b595b9d195c995960b21b604082015260600190565b6000602082840312156138c257600080fd5b5051919050565b6000602082840312156138db57600080fd5b81518015158114610b6257600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015613913576139136138eb565b500390565b6000821982111561392b5761392b6138eb565b500190565b600081600019048311821515161561394a5761394a6138eb565b500290565b60008261396c57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600080604083850312156139c957600080fd5b50508051602090910151909290915056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ce926571c28f011f5d216445c529432078afcdb1757e138c7b79980cad0557ec64736f6c634300080a0033', \n     arguments: [\n          underlying_,\n          comptroller_,\n          interestRateModel_,\n          initialExchangeRateMantissa_,\n          name_,\n          symbol_,\n          decimals_,\n          admin_,\n     ]\n}).send({\n     from: web3.eth.accounts[0], \n     gas: '4700000'\n   }, function (e, contract){\n    console.log(e, contract);\n    if (typeof contract.address !== 'undefined') {\n         console.log('Contract mined! address: ' + contract.address + ' transactionHash: ' + contract.transactionHash);\n    }\n })",
	"functionHashes": {
		"26782247": "pendingAdmin()",
		"69ab3250": "NO_ERROR()",
		"e9c714f2": "_acceptAdmin()",
		"3e941010": "_addReserves(uint256)",
		"7f1e06be": "_delegateCompLikeTo(address)",
		"601a0bf1": "_reduceReserves(uint256)",
		"4576b5db": "_setComptroller(address)",
		"f2b3abbd": "_setInterestRateModel(address)",
		"b71d1a0c": "_setPendingAdmin(address)",
		"fca7820b": "_setReserveFactor(uint256)",
		"6c540baf": "accrualBlockNumber()",
		"a6afed95": "accrueInterest()",
		"f851a440": "admin()",
		"dd62ed3e": "allowance(address,address)",
		"095ea7b3": "approve(address,uint256)",
		"70a08231": "balanceOf(address)",
		"3af9e669": "balanceOfUnderlying(address)",
		"c5ebeaec": "borrow(uint256)",
		"17bfdfbc": "borrowBalanceCurrent(address)",
		"95dd9193": "borrowBalanceStored(address)",
		"aa5af0fd": "borrowIndex()",
		"f8f9da28": "borrowRatePerBlock()",
		"5fe3b567": "comptroller()",
		"313ce567": "decimals()",
		"bd6d894d": "exchangeRateCurrent()",
		"182df0f5": "exchangeRateStored()",
		"c37f68e2": "getAccountSnapshot(address)",
		"3b1d21a2": "getCash()",
		"1a31d465": "initialize(address,address,address,uint256,string,string,uint8)",
		"99d8c1b4": "initialize(address,address,uint256,string,string,uint8)",
		"f3fdb15a": "interestRateModel()",
		"fe9c44ae": "isCToken()",
		"f5e3c462": "liquidateBorrow(address,uint256,address)",
		"a0712d68": "mint(uint256)",
		"06fdde03": "name()",
		"6752e702": "protocolSeizeShareMantissa()",
		"db006a75": "redeem(uint256)",
		"852a12e3": "redeemUnderlying(uint256)",
		"0e752702": "repayBorrow(uint256)",
		"2608f818": "repayBorrowBehalf(address,uint256)",
		"173b9904": "reserveFactorMantissa()",
		"b2a02ff1": "seize(address,address,uint256)",
		"ae9d70b0": "supplyRatePerBlock()",
		"1be19560": "sweepToken(address)",
		"95d89b41": "symbol()",
		"47bd3718": "totalBorrows()",
		"73acee98": "totalBorrowsCurrent()",
		"8f840ddd": "totalReserves()",
		"18160ddd": "totalSupply()",
		"a9059cbb": "transfer(address,uint256)",
		"23b872dd": "transferFrom(address,address,uint256)",
		"6f307dc3": "underlying()"
	},
	"gasEstimates": {
		"Creation": {
			"codeDepositCost": "2979200",
			"executionCost": "infinite",
			"totalCost": "infinite"
		},
		"External": {
			"NO_ERROR()": "307",
			"_acceptAdmin()": "55886",
			"_addReserves(uint256)": "infinite",
			"_delegateCompLikeTo(address)": "infinite",
			"_reduceReserves(uint256)": "infinite",
			"_setComptroller(address)": "infinite",
			"_setInterestRateModel(address)": "infinite",
			"_setPendingAdmin(address)": "28279",
			"_setReserveFactor(uint256)": "infinite",
			"accrualBlockNumber()": "2362",
			"accrueInterest()": "infinite",
			"admin()": "2414",
			"allowance(address,address)": "infinite",
			"approve(address,uint256)": "24567",
			"balanceOf(address)": "2642",
			"balanceOfUnderlying(address)": "infinite",
			"borrow(uint256)": "infinite",
			"borrowBalanceCurrent(address)": "infinite",
			"borrowBalanceStored(address)": "9226",
			"borrowIndex()": "2362",
			"borrowRatePerBlock()": "infinite",
			"comptroller()": "2493",
			"decimals()": "2447",
			"exchangeRateCurrent()": "infinite",
			"exchangeRateStored()": "infinite",
			"getAccountSnapshot(address)": "infinite",
			"getCash()": "infinite",
			"initialize(address,address,address,uint256,string,string,uint8)": "infinite",
			"initialize(address,address,uint256,string,string,uint8)": "infinite",
			"interestRateModel()": "2426",
			"isCToken()": "333",
			"liquidateBorrow(address,uint256,address)": "infinite",
			"mint(uint256)": "infinite",
			"name()": "infinite",
			"pendingAdmin()": "2449",
			"protocolSeizeShareMantissa()": "285",
			"redeem(uint256)": "infinite",
			"redeemUnderlying(uint256)": "infinite",
			"repayBorrow(uint256)": "infinite",
			"repayBorrowBehalf(address,uint256)": "infinite",
			"reserveFactorMantissa()": "2408",
			"seize(address,address,uint256)": "infinite",
			"supplyRatePerBlock()": "infinite",
			"sweepToken(address)": "infinite",
			"symbol()": "infinite",
			"totalBorrows()": "2429",
			"totalBorrowsCurrent()": "infinite",
			"totalReserves()": "2385",
			"totalSupply()": "2452",
			"transfer(address,uint256)": "infinite",
			"transferFrom(address,address,uint256)": "infinite",
			"underlying()": "2426"
		}
	},
	"devdoc": {
		"author": "Compound",
		"kind": "dev",
		"methods": {
			"_acceptAdmin()": {
				"details": "Admin function for pending admin to accept role and update admin",
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"_addReserves(uint256)": {
				"params": {
					"addAmount": "The amount fo underlying token to add as reserves"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"_delegateCompLikeTo(address)": {
				"details": "CTokens whose underlying are not CompLike should revert here",
				"params": {
					"compLikeDelegatee": "The address to delegate votes to"
				}
			},
			"_reduceReserves(uint256)": {
				"params": {
					"reduceAmount": "Amount of reduction to reserves"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"_setComptroller(address)": {
				"details": "Admin function to set a new comptroller",
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"_setInterestRateModel(address)": {
				"details": "Admin function to accrue interest and update the interest rate model",
				"params": {
					"newInterestRateModel": "the new interest rate model to use"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"_setPendingAdmin(address)": {
				"details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
				"params": {
					"newPendingAdmin": "New pending admin."
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"_setReserveFactor(uint256)": {
				"details": "Admin function to accrue interest and set a new reserve factor",
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"accrueInterest()": {
				"details": "This calculates interest accrued from the last checkpointed block   up to the current block and writes new checkpoint to storage."
			},
			"allowance(address,address)": {
				"params": {
					"owner": "The address of the account which owns the tokens to be spent",
					"spender": "The address of the account which may transfer tokens"
				},
				"returns": {
					"_0": "The number of tokens allowed to be spent (-1 means infinite)"
				}
			},
			"approve(address,uint256)": {
				"details": "This will overwrite the approval amount for `spender`  and is subject to issues noted [here](https://eips.ethereum.org/EIPS/eip-20#approve)",
				"params": {
					"amount": "The number of tokens that are approved (uint256.max means infinite)",
					"spender": "The address of the account which may transfer tokens"
				},
				"returns": {
					"_0": "Whether or not the approval succeeded"
				}
			},
			"balanceOf(address)": {
				"params": {
					"owner": "The address of the account to query"
				},
				"returns": {
					"_0": "The number of tokens owned by `owner`"
				}
			},
			"balanceOfUnderlying(address)": {
				"details": "This also accrues interest in a transaction",
				"params": {
					"owner": "The address of the account to query"
				},
				"returns": {
					"_0": "The amount of underlying owned by `owner`"
				}
			},
			"borrow(uint256)": {
				"params": {
					"borrowAmount": "The amount of the underlying asset to borrow"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"borrowBalanceCurrent(address)": {
				"params": {
					"account": "The address whose balance should be calculated after updating borrowIndex"
				},
				"returns": {
					"_0": "The calculated balance"
				}
			},
			"borrowBalanceStored(address)": {
				"params": {
					"account": "The address whose balance should be calculated"
				},
				"returns": {
					"_0": "The calculated balance"
				}
			},
			"borrowRatePerBlock()": {
				"returns": {
					"_0": "The borrow interest rate per block, scaled by 1e18"
				}
			},
			"constructor": {
				"params": {
					"admin_": "Address of the administrator of this token",
					"comptroller_": "The address of the Comptroller",
					"decimals_": "ERC-20 decimal precision of this token",
					"initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
					"interestRateModel_": "The address of the interest rate model",
					"name_": "ERC-20 name of this token",
					"symbol_": "ERC-20 symbol of this token",
					"underlying_": "The address of the underlying asset"
				}
			},
			"exchangeRateCurrent()": {
				"returns": {
					"_0": "Calculated exchange rate scaled by 1e18"
				}
			},
			"exchangeRateStored()": {
				"details": "This function does not accrue interest before calculating the exchange rate",
				"returns": {
					"_0": "Calculated exchange rate scaled by 1e18"
				}
			},
			"getAccountSnapshot(address)": {
				"details": "This is used by comptroller to more efficiently perform liquidity checks.",
				"params": {
					"account": "Address of the account to snapshot"
				},
				"returns": {
					"_0": "(possible error, token balance, borrow balance, exchange rate mantissa)"
				}
			},
			"getCash()": {
				"returns": {
					"_0": "The quantity of underlying asset owned by this contract"
				}
			},
			"initialize(address,address,address,uint256,string,string,uint8)": {
				"params": {
					"comptroller_": "The address of the Comptroller",
					"decimals_": "ERC-20 decimal precision of this token",
					"initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
					"interestRateModel_": "The address of the interest rate model",
					"name_": "ERC-20 name of this token",
					"symbol_": "ERC-20 symbol of this token",
					"underlying_": "The address of the underlying asset"
				}
			},
			"initialize(address,address,uint256,string,string,uint8)": {
				"params": {
					"comptroller_": "The address of the Comptroller",
					"decimals_": "EIP-20 decimal precision of this token",
					"initialExchangeRateMantissa_": "The initial exchange rate, scaled by 1e18",
					"interestRateModel_": "The address of the interest rate model",
					"name_": "EIP-20 name of this token",
					"symbol_": "EIP-20 symbol of this token"
				}
			},
			"liquidateBorrow(address,uint256,address)": {
				"params": {
					"borrower": "The borrower of this cToken to be liquidated",
					"cTokenCollateral": "The market in which to seize collateral from the borrower",
					"repayAmount": "The amount of the underlying borrowed asset to repay"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"mint(uint256)": {
				"details": "Accrues interest whether or not the operation succeeds, unless reverted",
				"params": {
					"mintAmount": "The amount of the underlying asset to supply"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"redeem(uint256)": {
				"details": "Accrues interest whether or not the operation succeeds, unless reverted",
				"params": {
					"redeemTokens": "The number of cTokens to redeem into underlying"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"redeemUnderlying(uint256)": {
				"details": "Accrues interest whether or not the operation succeeds, unless reverted",
				"params": {
					"redeemAmount": "The amount of underlying to redeem"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"repayBorrow(uint256)": {
				"params": {
					"repayAmount": "The amount to repay, or -1 for the full outstanding amount"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"repayBorrowBehalf(address,uint256)": {
				"params": {
					"borrower": "the account with the debt being payed off",
					"repayAmount": "The amount to repay, or -1 for the full outstanding amount"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"seize(address,address,uint256)": {
				"details": "Will fail unless called by another cToken during the process of liquidation.  Its absolutely critical to use msg.sender as the borrowed cToken and not a parameter.",
				"params": {
					"borrower": "The account having collateral seized",
					"liquidator": "The account receiving seized collateral",
					"seizeTokens": "The number of cTokens to seize"
				},
				"returns": {
					"_0": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				}
			},
			"supplyRatePerBlock()": {
				"returns": {
					"_0": "The supply interest rate per block, scaled by 1e18"
				}
			},
			"sweepToken(address)": {
				"params": {
					"token": "The address of the ERC-20 token to sweep"
				}
			},
			"totalBorrowsCurrent()": {
				"returns": {
					"_0": "The total borrows with interest"
				}
			},
			"transfer(address,uint256)": {
				"params": {
					"amount": "The number of tokens to transfer",
					"dst": "The address of the destination account"
				},
				"returns": {
					"_0": "Whether or not the transfer succeeded"
				}
			},
			"transferFrom(address,address,uint256)": {
				"params": {
					"amount": "The number of tokens to transfer",
					"dst": "The address of the destination account",
					"src": "The address of the source account"
				},
				"returns": {
					"_0": "Whether or not the transfer succeeded"
				}
			}
		},
		"title": "Compound's CErc20Immutable Contract",
		"version": 1
	},
	"userdoc": {
		"events": {
			"AccrueInterest(uint256,uint256,uint256,uint256)": {
				"notice": "Event emitted when interest is accrued"
			},
			"Approval(address,address,uint256)": {
				"notice": "EIP20 Approval event"
			},
			"Borrow(address,uint256,uint256,uint256)": {
				"notice": "Event emitted when underlying is borrowed"
			},
			"LiquidateBorrow(address,address,uint256,address,uint256)": {
				"notice": "Event emitted when a borrow is liquidated"
			},
			"Mint(address,uint256,uint256)": {
				"notice": "Event emitted when tokens are minted"
			},
			"NewAdmin(address,address)": {
				"notice": "Event emitted when pendingAdmin is accepted, which means admin is updated"
			},
			"NewComptroller(address,address)": {
				"notice": "Event emitted when comptroller is changed"
			},
			"NewMarketInterestRateModel(address,address)": {
				"notice": "Event emitted when interestRateModel is changed"
			},
			"NewPendingAdmin(address,address)": {
				"notice": "Event emitted when pendingAdmin is changed"
			},
			"NewReserveFactor(uint256,uint256)": {
				"notice": "Event emitted when the reserve factor is changed"
			},
			"Redeem(address,uint256,uint256)": {
				"notice": "Event emitted when tokens are redeemed"
			},
			"RepayBorrow(address,address,uint256,uint256,uint256)": {
				"notice": "Event emitted when a borrow is repaid"
			},
			"ReservesAdded(address,uint256,uint256)": {
				"notice": "Event emitted when the reserves are added"
			},
			"ReservesReduced(address,uint256,uint256)": {
				"notice": "Event emitted when the reserves are reduced"
			},
			"Transfer(address,address,uint256)": {
				"notice": "EIP20 Transfer event"
			}
		},
		"kind": "user",
		"methods": {
			"_acceptAdmin()": {
				"notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
			},
			"_addReserves(uint256)": {
				"notice": "The sender adds to reserves."
			},
			"_delegateCompLikeTo(address)": {
				"notice": "Admin call to delegate the votes of the COMP-like underlying"
			},
			"_reduceReserves(uint256)": {
				"notice": "Accrues interest and reduces reserves by transferring to admin"
			},
			"_setComptroller(address)": {
				"notice": "Sets a new comptroller for the market"
			},
			"_setInterestRateModel(address)": {
				"notice": "accrues interest and updates the interest rate model using _setInterestRateModelFresh"
			},
			"_setPendingAdmin(address)": {
				"notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
			},
			"_setReserveFactor(uint256)": {
				"notice": "accrues interest and sets a new reserve factor for the protocol using _setReserveFactorFresh"
			},
			"accrualBlockNumber()": {
				"notice": "Block number that interest was last accrued at"
			},
			"accrueInterest()": {
				"notice": "Applies accrued interest to total borrows and reserves"
			},
			"admin()": {
				"notice": "Administrator for this contract"
			},
			"allowance(address,address)": {
				"notice": "Get the current allowance from `owner` for `spender`"
			},
			"approve(address,uint256)": {
				"notice": "Approve `spender` to transfer up to `amount` from `src`"
			},
			"balanceOf(address)": {
				"notice": "Get the token balance of the `owner`"
			},
			"balanceOfUnderlying(address)": {
				"notice": "Get the underlying balance of the `owner`"
			},
			"borrow(uint256)": {
				"notice": "Sender borrows assets from the protocol to their own address"
			},
			"borrowBalanceCurrent(address)": {
				"notice": "Accrue interest to updated borrowIndex and then calculate account's borrow balance using the updated borrowIndex"
			},
			"borrowBalanceStored(address)": {
				"notice": "Return the borrow balance of account based on stored data"
			},
			"borrowIndex()": {
				"notice": "Accumulator of the total earned interest rate since the opening of the market"
			},
			"borrowRatePerBlock()": {
				"notice": "Returns the current per-block borrow interest rate for this cToken"
			},
			"comptroller()": {
				"notice": "Contract which oversees inter-cToken operations"
			},
			"constructor": {
				"notice": "Construct a new money market"
			},
			"decimals()": {
				"notice": "EIP-20 token decimals for this token"
			},
			"exchangeRateCurrent()": {
				"notice": "Accrue interest then return the up-to-date exchange rate"
			},
			"exchangeRateStored()": {
				"notice": "Calculates the exchange rate from the underlying to the CToken"
			},
			"getAccountSnapshot(address)": {
				"notice": "Get a snapshot of the account's balances, and the cached exchange rate"
			},
			"getCash()": {
				"notice": "Get cash balance of this cToken in the underlying asset"
			},
			"initialize(address,address,address,uint256,string,string,uint8)": {
				"notice": "Initialize the new money market"
			},
			"initialize(address,address,uint256,string,string,uint8)": {
				"notice": "Initialize the money market"
			},
			"interestRateModel()": {
				"notice": "Model which tells what the current interest rate should be"
			},
			"isCToken()": {
				"notice": "Indicator that this is a CToken contract (for inspection)"
			},
			"liquidateBorrow(address,uint256,address)": {
				"notice": "The sender liquidates the borrowers collateral.  The collateral seized is transferred to the liquidator."
			},
			"mint(uint256)": {
				"notice": "Sender supplies assets into the market and receives cTokens in exchange"
			},
			"name()": {
				"notice": "EIP-20 token name for this token"
			},
			"pendingAdmin()": {
				"notice": "Pending administrator for this contract"
			},
			"protocolSeizeShareMantissa()": {
				"notice": "Share of seized collateral that is added to reserves"
			},
			"redeem(uint256)": {
				"notice": "Sender redeems cTokens in exchange for the underlying asset"
			},
			"redeemUnderlying(uint256)": {
				"notice": "Sender redeems cTokens in exchange for a specified amount of underlying asset"
			},
			"repayBorrow(uint256)": {
				"notice": "Sender repays their own borrow"
			},
			"repayBorrowBehalf(address,uint256)": {
				"notice": "Sender repays a borrow belonging to borrower"
			},
			"reserveFactorMantissa()": {
				"notice": "Fraction of interest currently set aside for reserves"
			},
			"seize(address,address,uint256)": {
				"notice": "Transfers collateral tokens (this market) to the liquidator."
			},
			"supplyRatePerBlock()": {
				"notice": "Returns the current per-block supply interest rate for this cToken"
			},
			"sweepToken(address)": {
				"notice": "A public function to sweep accidental ERC-20 transfers to this contract. Tokens are sent to admin (timelock)"
			},
			"symbol()": {
				"notice": "EIP-20 token symbol for this token"
			},
			"totalBorrows()": {
				"notice": "Total amount of outstanding borrows of the underlying in this market"
			},
			"totalBorrowsCurrent()": {
				"notice": "Returns the current total borrows plus accrued interest"
			},
			"totalReserves()": {
				"notice": "Total amount of reserves of the underlying held in this market"
			},
			"totalSupply()": {
				"notice": "Total number of tokens in circulation"
			},
			"transfer(address,uint256)": {
				"notice": "Transfer `amount` tokens from `msg.sender` to `dst`"
			},
			"transferFrom(address,address,uint256)": {
				"notice": "Transfer `amount` tokens from `src` to `dst`"
			},
			"underlying()": {
				"notice": "Underlying asset for this CToken"
			}
		},
		"notice": "CTokens which wrap an EIP-20 underlying and are immutable",
		"version": 1
	},
	"Runtime Bytecode": {
		"functionDebugData": {
			"@NO_ERROR_3631": {
				"entryPoint": null,
				"id": 3631,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@_acceptAdmin_2240": {
				"entryPoint": 5398,
				"id": 2240,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@_addReservesFresh_2428": {
				"entryPoint": 9489,
				"id": 2428,
				"parameterSlots": 1,
				"returnSlots": 2
			},
			"@_addReservesInternal_2372": {
				"entryPoint": 6826,
				"id": 2372,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_addReserves_235": {
				"entryPoint": 2931,
				"id": 235,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_delegateCompLikeTo_384": {
				"entryPoint": 3423,
				"id": 384,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@_reduceReservesFresh_2517": {
				"entryPoint": 6913,
				"id": 2517,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_reduceReserves_2447": {
				"entryPoint": 3286,
				"id": 2447,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_setComptroller_2283": {
				"entryPoint": 2948,
				"id": 2283,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_setInterestRateModelFresh_2589": {
				"entryPoint": 7351,
				"id": 2589,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_setInterestRateModel_2535": {
				"entryPoint": 5661,
				"id": 2535,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_setPendingAdmin_2181": {
				"entryPoint": 5090,
				"id": 2181,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_setReserveFactorFresh_2352": {
				"entryPoint": 8852,
				"id": 2352,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@_setReserveFactor_2302": {
				"entryPoint": 5787,
				"id": 2302,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@accrualBlockNumber_2678": {
				"entryPoint": null,
				"id": 2678,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@accrueInterest_1187": {
				"entryPoint": 4287,
				"id": 1187,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@add__3999": {
				"entryPoint": 11169,
				"id": 3999,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@admin_2659": {
				"entryPoint": null,
				"id": 2659,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@allowance_784": {
				"entryPoint": null,
				"id": 784,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@approve_766": {
				"entryPoint": 1905,
				"id": 766,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@balanceOfUnderlying_823": {
				"entryPoint": 2851,
				"id": 823,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@balanceOf_798": {
				"entryPoint": null,
				"id": 798,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@borrowBalanceCurrent_927": {
				"entryPoint": 2034,
				"id": 927,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@borrowBalanceStoredInternal_977": {
				"entryPoint": 7277,
				"id": 977,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@borrowBalanceStored_941": {
				"entryPoint": 3662,
				"id": 941,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@borrowFresh_1621": {
				"entryPoint": 11216,
				"id": 1621,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@borrowIndex_2681": {
				"entryPoint": null,
				"id": 2681,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@borrowInternal_1525": {
				"entryPoint": 8502,
				"id": 1525,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@borrowRatePerBlock_876": {
				"entryPoint": 5704,
				"id": 876,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@borrow_119": {
				"entryPoint": 5376,
				"id": 119,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@comptroller_2666": {
				"entryPoint": null,
				"id": 2666,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@decimals_2650": {
				"entryPoint": null,
				"id": 2650,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@div__4262": {
				"entryPoint": 13312,
				"id": 4262,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@div__4341": {
				"entryPoint": null,
				"id": 4341,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@doTransferIn_329": {
				"entryPoint": 12841,
				"id": 329,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@doTransferOut_362": {
				"entryPoint": 9637,
				"id": 362,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@exchangeRateCurrent_993": {
				"entryPoint": 5231,
				"id": 993,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@exchangeRateStoredInternal_1047": {
				"entryPoint": 5931,
				"id": 1047,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@exchangeRateStored_1004": {
				"entryPoint": 2126,
				"id": 1004,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@getAccountSnapshot_850": {
				"entryPoint": 5311,
				"id": 850,
				"parameterSlots": 1,
				"returnSlots": 4
			},
			"@getBlockNumber_860": {
				"entryPoint": null,
				"id": 860,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@getCashPrior_258": {
				"entryPoint": 6709,
				"id": 258,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@getCash_1058": {
				"entryPoint": 2921,
				"id": 1058,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@initialize_55": {
				"entryPoint": 2141,
				"id": 55,
				"parameterSlots": 7,
				"returnSlots": 0
			},
			"@initialize_552": {
				"entryPoint": 3673,
				"id": 552,
				"parameterSlots": 6,
				"returnSlots": 0
			},
			"@interestRateModel_2670": {
				"entryPoint": null,
				"id": 2670,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@isCToken_2721": {
				"entryPoint": null,
				"id": 2721,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@liquidateBorrowFresh_1987": {
				"entryPoint": 11631,
				"id": 1987,
				"parameterSlots": 4,
				"returnSlots": 0
			},
			"@liquidateBorrowInternal_1812": {
				"entryPoint": 8630,
				"id": 1812,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@liquidateBorrow_177": {
				"entryPoint": 5681,
				"id": 177,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@mintFresh_1309": {
				"entryPoint": 10604,
				"id": 1309,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@mintInternal_1205": {
				"entryPoint": 7724,
				"id": 1205,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@mint_71": {
				"entryPoint": 4276,
				"id": 71,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@mul_ScalarTruncateAddUInt_3821": {
				"entryPoint": 7836,
				"id": 3821,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@mul_ScalarTruncate_3792": {
				"entryPoint": 6677,
				"id": 3792,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@mul__4101": {
				"entryPoint": 7787,
				"id": 4101,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@mul__4120": {
				"entryPoint": 11181,
				"id": 4120,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@mul__4197": {
				"entryPoint": 11157,
				"id": 4197,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@name_2644": {
				"entryPoint": 1763,
				"id": 2644,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@pendingAdmin_2662": {
				"entryPoint": null,
				"id": 2662,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@protocolSeizeShareMantissa_2714": {
				"entryPoint": null,
				"id": 2714,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@redeemFresh_1504": {
				"entryPoint": 9871,
				"id": 1504,
				"parameterSlots": 3,
				"returnSlots": 0
			},
			"@redeemInternal_1331": {
				"entryPoint": 8565,
				"id": 1331,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@redeemUnderlyingInternal_1353": {
				"entryPoint": 7196,
				"id": 1353,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@redeemUnderlying_103": {
				"entryPoint": 3638,
				"id": 103,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@redeem_87": {
				"entryPoint": 5387,
				"id": 87,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@repayBorrowBehalfInternal_1662": {
				"entryPoint": 6595,
				"id": 1662,
				"parameterSlots": 2,
				"returnSlots": 0
			},
			"@repayBorrowBehalf_154": {
				"entryPoint": 2830,
				"id": 154,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@repayBorrowFresh_1772": {
				"entryPoint": 9040,
				"id": 1772,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@repayBorrowInternal_1641": {
				"entryPoint": 5850,
				"id": 1641,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@repayBorrow_135": {
				"entryPoint": 2015,
				"id": 135,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@reserveFactorMantissa_2675": {
				"entryPoint": null,
				"id": 2675,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@seizeInternal_2147": {
				"entryPoint": 7869,
				"id": 2147,
				"parameterSlots": 4,
				"returnSlots": 0
			},
			"@seize_2013": {
				"entryPoint": 5011,
				"id": 2013,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@supplyRatePerBlock_893": {
				"entryPoint": 4859,
				"id": 893,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@sweepToken_221": {
				"entryPoint": 2290,
				"id": 221,
				"parameterSlots": 1,
				"returnSlots": 0
			},
			"@symbol_2647": {
				"entryPoint": 3649,
				"id": 2647,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@totalBorrowsCurrent_908": {
				"entryPoint": 3349,
				"id": 908,
				"parameterSlots": 0,
				"returnSlots": 1
			},
			"@totalBorrows_2684": {
				"entryPoint": null,
				"id": 2684,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@totalReserves_2687": {
				"entryPoint": null,
				"id": 2687,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@totalSupply_2690": {
				"entryPoint": null,
				"id": 2690,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"@transferFrom_733": {
				"entryPoint": 2750,
				"id": 733,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"@transferTokens_682": {
				"entryPoint": 6037,
				"id": 682,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"@transfer_707": {
				"entryPoint": 4780,
				"id": 707,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"@truncate_3768": {
				"entryPoint": 9465,
				"id": 3768,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"@underlying_3033": {
				"entryPoint": null,
				"id": 3033,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"abi_decode_string": {
				"entryPoint": 13722,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address": {
				"entryPoint": 13671,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_address_payable": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_addresst_address": {
				"entryPoint": 14294,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_addresst_uint256": {
				"entryPoint": 14067,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_addresst_contract$_ComptrollerInterface_$3351t_contract$_InterestRateModel_$4397t_uint256t_string_memory_ptrt_string_memory_ptrt_uint8": {
				"entryPoint": 13885,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 7
			},
			"abi_decode_tuple_t_addresst_uint256": {
				"entryPoint": 13602,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_tuple_t_addresst_uint256t_contract$_CTokenInterface_$3030": {
				"entryPoint": 14351,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 3
			},
			"abi_decode_tuple_t_bool_fromMemory": {
				"entryPoint": 14537,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_contract$_ComptrollerInterface_$3351": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_contract$_ComptrollerInterface_$3351t_contract$_InterestRateModel_$4397t_uint256t_string_memory_ptrt_string_memory_ptrt_uint8": {
				"entryPoint": 14132,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 6
			},
			"abi_decode_tuple_t_contract$_EIP20NonStandardInterface_$3514": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_contract$_InterestRateModel_$4397": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256": {
				"entryPoint": 13646,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256_fromMemory": {
				"entryPoint": 14512,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_decode_tuple_t_uint256t_uint256_fromMemory": {
				"entryPoint": 14774,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 2
			},
			"abi_decode_uint8": {
				"entryPoint": 13863,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_payable_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": 14705,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 5,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_payable__to_t_address_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": 14738,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 5,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 6,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 5,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 6,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 5,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 6,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_contract$_ComptrollerInterface_$3351__to_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_contract$_ComptrollerInterface_$3351_t_contract$_ComptrollerInterface_$3351__to_t_address_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_contract$_InterestRateModel_$4397__to_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_contract$_InterestRateModel_$4397_t_contract$_InterestRateModel_$4397__to_t_address_t_address__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 13493,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_0d998648c97be54311575d3a2c41b4b9b1a42ee050ec72752cd3e44128c6d6c6__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_0da3873a20fdc47c8625307ac91c3576e4c3c6ba3dbaf813e465d9b0cabb0ee0__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_135504d16831a63c655007ab9521409902ae5ee7f0d4d3155446ade8199c0062__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_1bebca39b478e42a6b88dcff87467d0e08b422ebc72c3d074bd236265624e814__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_1cd5edf3f8c5c849e30639fd2b4477757d2fdcadadbdd58a80bbf21b6f613b41__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_240ffd6c262c542faf953100ec47f7b3f7ed65e23c06d0ff5d14cbe032268909__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_427426a02e699ec0d6d6d22f3254c7e686696e18d2de7af9416d6b5cc786ff6c__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_49c9d7834318fbd23fb0b05062dcbe05993694e29e663da07483dd74b33e77ca__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_59076c676f223cb9d4de55d807fe5a438ed31bccfb7626e1e7791e8e0eec7464__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_73c0b9b9fc59551809f9e3f686bb994cac13db80a83fd9ccdfe6d53da80fe637__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_987a3f65bf6c5144d945a7d9587fa166ee3a901eb2b594a0815c3c20bf841a5e__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": 14476,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_9ab90068dc5fe9f7def6aab4ae887ed8eff65c4b83c1b9ba6beb99101f1ae8ea__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_b1c7e90880e9fbdf9aa93d626a842fbb127521a1492c295dbd98c98157e1e4f7__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_b20ca7ca5fb4cb4511b58e112cf8b8663096873b0029b9b6aeb6bb29723b6450__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_bffc2aa76a1b975ca5ba1defccc66ee3d6e80e3f510ac216baa6baef4008863e__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_e7cef2e7b515a83b650bc43dbe7230ede3601779d8be25fbf237261dccd3d9f2__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_stringliteral_ef895053050823f299d1eac7edac9fbaf6b5ee335d1b858874856cee7182bcda__to_t_string_memory_ptr__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 3,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 4,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 5,
				"returnSlots": 1
			},
			"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
				"entryPoint": null,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_add_t_uint256": {
				"entryPoint": 14616,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_div_t_uint256": {
				"entryPoint": 14671,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_mul_t_uint256": {
				"entryPoint": 14640,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"checked_sub_t_uint256": {
				"entryPoint": 14593,
				"id": null,
				"parameterSlots": 2,
				"returnSlots": 1
			},
			"extract_byte_array_length": {
				"entryPoint": 14417,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 1
			},
			"panic_error_0x11": {
				"entryPoint": 14571,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"panic_error_0x41": {
				"entryPoint": 13700,
				"id": null,
				"parameterSlots": 0,
				"returnSlots": 0
			},
			"validator_revert_address": {
				"entryPoint": 13578,
				"id": null,
				"parameterSlots": 1,
				"returnSlots": 0
			}
		},
		"generatedSources": [
			{
				"ast": {
					"nodeType": "YulBlock",
					"src": "0:24230:10",
					"statements": [
						{
							"nodeType": "YulBlock",
							"src": "6:3:10",
							"statements": []
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "135:476:10",
								"statements": [
									{
										"nodeType": "YulVariableDeclaration",
										"src": "145:12:10",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "155:2:10",
											"type": "",
											"value": "32"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "149:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "173:9:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "184:2:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "166:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "166:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "166:21:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "196:27:10",
										"value": {
											"arguments": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "216:6:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "210:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "210:13:10"
										},
										"variables": [
											{
												"name": "length",
												"nodeType": "YulTypedName",
												"src": "200:6:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "243:9:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "254:2:10"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "239:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "239:18:10"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "259:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "232:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "232:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "232:34:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "275:10:10",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "284:1:10",
											"type": "",
											"value": "0"
										},
										"variables": [
											{
												"name": "i",
												"nodeType": "YulTypedName",
												"src": "279:1:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "344:90:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "373:9:10"
																			},
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "384:1:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "369:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "369:17:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "388:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "365:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:26:10"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "407:6:10"
																					},
																					{
																						"name": "i",
																						"nodeType": "YulIdentifier",
																						"src": "415:1:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "403:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "403:14:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "419:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "399:23:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "393:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "393:30:10"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "358:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "358:66:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "358:66:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nodeType": "YulIdentifier",
													"src": "305:1:10"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "308:6:10"
												}
											],
											"functionName": {
												"name": "lt",
												"nodeType": "YulIdentifier",
												"src": "302:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "302:13:10"
										},
										"nodeType": "YulForLoop",
										"post": {
											"nodeType": "YulBlock",
											"src": "316:19:10",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "318:15:10",
													"value": {
														"arguments": [
															{
																"name": "i",
																"nodeType": "YulIdentifier",
																"src": "327:1:10"
															},
															{
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "330:2:10"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "323:3:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "323:10:10"
													},
													"variableNames": [
														{
															"name": "i",
															"nodeType": "YulIdentifier",
															"src": "318:1:10"
														}
													]
												}
											]
										},
										"pre": {
											"nodeType": "YulBlock",
											"src": "298:3:10",
											"statements": []
										},
										"src": "294:140:10"
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "468:66:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "497:9:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "508:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "493:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "493:22:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "489:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "489:31:10"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "522:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "482:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "482:42:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "482:42:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "i",
													"nodeType": "YulIdentifier",
													"src": "449:1:10"
												},
												{
													"name": "length",
													"nodeType": "YulIdentifier",
													"src": "452:6:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "446:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "446:13:10"
										},
										"nodeType": "YulIf",
										"src": "443:91:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "543:62:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "559:9:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "length",
																			"nodeType": "YulIdentifier",
																			"src": "578:6:10"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "586:2:10",
																			"type": "",
																			"value": "31"
																		}
																	],
																	"functionName": {
																		"name": "add",
																		"nodeType": "YulIdentifier",
																		"src": "574:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "574:15:10"
																},
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "595:2:10",
																			"type": "",
																			"value": "31"
																		}
																	],
																	"functionName": {
																		"name": "not",
																		"nodeType": "YulIdentifier",
																		"src": "591:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "591:7:10"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "570:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "570:29:10"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "555:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "555:45:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "602:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "551:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "551:54:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "543:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "104:9:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "115:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "126:4:10",
									"type": ""
								}
							],
							"src": "14:597:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "661:86:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "725:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "734:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "737:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "727:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "727:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "727:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "684:5:10"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "695:5:10"
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "710:3:10",
																					"type": "",
																					"value": "160"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "715:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "shl",
																				"nodeType": "YulIdentifier",
																				"src": "706:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "706:11:10"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "719:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "sub",
																		"nodeType": "YulIdentifier",
																		"src": "702:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "702:19:10"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "691:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "691:31:10"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "681:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "681:42:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "674:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "674:50:10"
										},
										"nodeType": "YulIf",
										"src": "671:70:10"
									}
								]
							},
							"name": "validator_revert_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "650:5:10",
									"type": ""
								}
							],
							"src": "616:131:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "839:228:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "885:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "894:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "897:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "887:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "887:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "887:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "860:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "869:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "856:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "856:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "881:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "852:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "852:32:10"
										},
										"nodeType": "YulIf",
										"src": "849:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "910:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "936:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "923:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "923:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "914:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "980:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "955:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "955:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "955:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "995:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "1005:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "995:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "1019:42:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1046:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1057:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "1042:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "1042:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "1029:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1029:32:10"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "1019:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "797:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "808:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "820:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "828:6:10",
									"type": ""
								}
							],
							"src": "752:315:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1167:92:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1177:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1189:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1200:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "1185:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1185:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1177:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1219:9:10"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1244:6:10"
																}
															],
															"functionName": {
																"name": "iszero",
																"nodeType": "YulIdentifier",
																"src": "1237:6:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "1237:14:10"
														}
													],
													"functionName": {
														"name": "iszero",
														"nodeType": "YulIdentifier",
														"src": "1230:6:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "1230:22:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1212:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1212:41:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1212:41:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1136:9:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1147:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "1158:4:10",
									"type": ""
								}
							],
							"src": "1072:187:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1334:110:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "1380:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1389:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1392:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "1382:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "1382:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "1382:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "1355:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1364:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "1351:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "1351:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1376:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "1347:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1347:32:10"
										},
										"nodeType": "YulIf",
										"src": "1344:52:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1405:33:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1428:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "1415:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1415:23:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1405:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1300:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "1311:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1323:6:10",
									"type": ""
								}
							],
							"src": "1264:180:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1550:76:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "1560:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1572:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1583:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "1568:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1568:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "1560:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1602:9:10"
												},
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "1613:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1595:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1595:25:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1595:25:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1519:9:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1530:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "1541:4:10",
									"type": ""
								}
							],
							"src": "1449:177:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1701:177:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "1747:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1756:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1759:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "1749:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "1749:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "1749:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "1722:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "1731:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "1718:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "1718:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1743:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "1714:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1714:32:10"
										},
										"nodeType": "YulIf",
										"src": "1711:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "1772:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "1798:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "1785:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1785:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "1776:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "1842:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "1817:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1817:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1817:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "1857:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "1867:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "1857:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "1667:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "1678:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "1690:6:10",
									"type": ""
								}
							],
							"src": "1631:247:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "1915:95:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1932:1:10",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1939:3:10",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "1944:10:10",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "1935:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "1935:20:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1925:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1925:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1925:31:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1972:1:10",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1975:4:10",
													"type": "",
													"value": "0x41"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "1965:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1965:15:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1965:15:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1996:1:10",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "1999:4:10",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "1989:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "1989:15:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "1989:15:10"
									}
								]
							},
							"name": "panic_error_0x41",
							"nodeType": "YulFunctionDefinition",
							"src": "1883:127:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2068:666:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2117:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2126:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2129:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2119:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "2119:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2119:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "2096:6:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2104:4:10",
																	"type": "",
																	"value": "0x1f"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2092:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "2092:17:10"
														},
														{
															"name": "end",
															"nodeType": "YulIdentifier",
															"src": "2111:3:10"
														}
													],
													"functionName": {
														"name": "slt",
														"nodeType": "YulIdentifier",
														"src": "2088:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2088:27:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "2081:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2081:35:10"
										},
										"nodeType": "YulIf",
										"src": "2078:55:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2142:30:10",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "2165:6:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "2152:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2152:20:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "2146:2:10",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2181:28:10",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "2191:18:10",
											"type": "",
											"value": "0xffffffffffffffff"
										},
										"variables": [
											{
												"name": "_2",
												"nodeType": "YulTypedName",
												"src": "2185:2:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2232:22:10",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nodeType": "YulIdentifier",
															"src": "2234:16:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "2234:18:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2234:18:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "2224:2:10"
												},
												{
													"name": "_2",
													"nodeType": "YulIdentifier",
													"src": "2228:2:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "2221:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2221:10:10"
										},
										"nodeType": "YulIf",
										"src": "2218:36:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2263:17:10",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2277:2:10",
													"type": "",
													"value": "31"
												}
											],
											"functionName": {
												"name": "not",
												"nodeType": "YulIdentifier",
												"src": "2273:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2273:7:10"
										},
										"variables": [
											{
												"name": "_3",
												"nodeType": "YulTypedName",
												"src": "2267:2:10",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2289:23:10",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2309:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "2303:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2303:9:10"
										},
										"variables": [
											{
												"name": "memPtr",
												"nodeType": "YulTypedName",
												"src": "2293:6:10",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "2321:71:10",
										"value": {
											"arguments": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "2343:6:10"
												},
												{
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2367:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2371:4:10",
																					"type": "",
																					"value": "0x1f"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2363:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2363:13:10"
																		},
																		{
																			"name": "_3",
																			"nodeType": "YulIdentifier",
																			"src": "2378:2:10"
																		}
																	],
																	"functionName": {
																		"name": "and",
																		"nodeType": "YulIdentifier",
																		"src": "2359:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "2359:22:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2383:2:10",
																	"type": "",
																	"value": "63"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2355:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "2355:31:10"
														},
														{
															"name": "_3",
															"nodeType": "YulIdentifier",
															"src": "2388:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "2351:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2351:40:10"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "2339:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2339:53:10"
										},
										"variables": [
											{
												"name": "newFreePtr",
												"nodeType": "YulTypedName",
												"src": "2325:10:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2451:22:10",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x41",
															"nodeType": "YulIdentifier",
															"src": "2453:16:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "2453:18:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2453:18:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "newFreePtr",
															"nodeType": "YulIdentifier",
															"src": "2410:10:10"
														},
														{
															"name": "_2",
															"nodeType": "YulIdentifier",
															"src": "2422:2:10"
														}
													],
													"functionName": {
														"name": "gt",
														"nodeType": "YulIdentifier",
														"src": "2407:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2407:18:10"
												},
												{
													"arguments": [
														{
															"name": "newFreePtr",
															"nodeType": "YulIdentifier",
															"src": "2430:10:10"
														},
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "2442:6:10"
														}
													],
													"functionName": {
														"name": "lt",
														"nodeType": "YulIdentifier",
														"src": "2427:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2427:22:10"
												}
											],
											"functionName": {
												"name": "or",
												"nodeType": "YulIdentifier",
												"src": "2404:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2404:46:10"
										},
										"nodeType": "YulIf",
										"src": "2401:72:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2489:2:10",
													"type": "",
													"value": "64"
												},
												{
													"name": "newFreePtr",
													"nodeType": "YulIdentifier",
													"src": "2493:10:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2482:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2482:22:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2482:22:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "2520:6:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "2528:2:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2513:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2513:18:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2513:18:10"
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2579:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2588:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2591:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2581:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "2581:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2581:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "offset",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:10"
																},
																{
																	"name": "_1",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:10"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2550:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "2550:15:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2567:4:10",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2546:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2546:26:10"
												},
												{
													"name": "end",
													"nodeType": "YulIdentifier",
													"src": "2574:3:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "2543:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2543:35:10"
										},
										"nodeType": "YulIf",
										"src": "2540:55:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "memPtr",
															"nodeType": "YulIdentifier",
															"src": "2621:6:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2629:4:10",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2617:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2617:17:10"
												},
												{
													"arguments": [
														{
															"name": "offset",
															"nodeType": "YulIdentifier",
															"src": "2640:6:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2648:4:10",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2636:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2636:17:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "2655:2:10"
												}
											],
											"functionName": {
												"name": "calldatacopy",
												"nodeType": "YulIdentifier",
												"src": "2604:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2604:54:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2604:54:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2682:6:10"
																},
																{
																	"name": "_1",
																	"nodeType": "YulIdentifier",
																	"src": "2690:2:10"
																}
															],
															"functionName": {
																"name": "add",
																"nodeType": "YulIdentifier",
																"src": "2678:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "2678:15:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "2695:4:10",
															"type": "",
															"value": "0x20"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "2674:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2674:26:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "2702:1:10",
													"type": "",
													"value": "0"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "2667:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2667:37:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "2667:37:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "2713:15:10",
										"value": {
											"name": "memPtr",
											"nodeType": "YulIdentifier",
											"src": "2722:6:10"
										},
										"variableNames": [
											{
												"name": "array",
												"nodeType": "YulIdentifier",
												"src": "2713:5:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_string",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nodeType": "YulTypedName",
									"src": "2042:6:10",
									"type": ""
								},
								{
									"name": "end",
									"nodeType": "YulTypedName",
									"src": "2050:3:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "array",
									"nodeType": "YulTypedName",
									"src": "2058:5:10",
									"type": ""
								}
							],
							"src": "2015:719:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "2786:109:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "2796:29:10",
										"value": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "2818:6:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "2805:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2805:20:10"
										},
										"variableNames": [
											{
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "2796:5:10"
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "2873:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2882:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2885:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "2875:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "2875:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "2875:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "2847:5:10"
														},
														{
															"arguments": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2858:5:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2865:4:10",
																	"type": "",
																	"value": "0xff"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "2854:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "2854:16:10"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "2844:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "2844:27:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "2837:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "2837:35:10"
										},
										"nodeType": "YulIf",
										"src": "2834:55:10"
									}
								]
							},
							"name": "abi_decode_uint8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "offset",
									"nodeType": "YulTypedName",
									"src": "2765:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value",
									"nodeType": "YulTypedName",
									"src": "2776:5:10",
									"type": ""
								}
							],
							"src": "2739:156:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "3145:912:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "3192:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3201:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3204:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "3194:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "3194:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3194:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "3166:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3175:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "3162:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3162:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "3187:3:10",
													"type": "",
													"value": "224"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "3158:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3158:33:10"
										},
										"nodeType": "YulIf",
										"src": "3155:53:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3217:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "3243:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "3230:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3230:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "3221:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "3287:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "3262:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3262:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3262:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "3302:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "3312:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "3302:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3326:47:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3358:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3369:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3354:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3354:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "3341:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3341:32:10"
										},
										"variables": [
											{
												"name": "value_1",
												"nodeType": "YulTypedName",
												"src": "3330:7:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value_1",
													"nodeType": "YulIdentifier",
													"src": "3407:7:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "3382:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3382:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3382:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "3424:17:10",
										"value": {
											"name": "value_1",
											"nodeType": "YulIdentifier",
											"src": "3434:7:10"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "3424:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3450:47:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3482:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3493:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3478:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3478:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "3465:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3465:32:10"
										},
										"variables": [
											{
												"name": "value_2",
												"nodeType": "YulTypedName",
												"src": "3454:7:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value_2",
													"nodeType": "YulIdentifier",
													"src": "3531:7:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "3506:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3506:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "3506:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "3548:17:10",
										"value": {
											"name": "value_2",
											"nodeType": "YulIdentifier",
											"src": "3558:7:10"
										},
										"variableNames": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "3548:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "3574:42:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3601:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3612:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3597:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3597:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "3584:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3584:32:10"
										},
										"variableNames": [
											{
												"name": "value3",
												"nodeType": "YulIdentifier",
												"src": "3574:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3625:47:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3656:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3667:3:10",
															"type": "",
															"value": "128"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3652:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3652:19:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "3639:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3639:33:10"
										},
										"variables": [
											{
												"name": "offset",
												"nodeType": "YulTypedName",
												"src": "3629:6:10",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3681:28:10",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "3691:18:10",
											"type": "",
											"value": "0xffffffffffffffff"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "3685:2:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "3736:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3745:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3748:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "3738:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "3738:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3738:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "3724:6:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "3732:2:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "3721:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3721:14:10"
										},
										"nodeType": "YulIf",
										"src": "3718:34:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "3761:60:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3793:9:10"
														},
														{
															"name": "offset",
															"nodeType": "YulIdentifier",
															"src": "3804:6:10"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3789:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3789:22:10"
												},
												{
													"name": "dataEnd",
													"nodeType": "YulIdentifier",
													"src": "3813:7:10"
												}
											],
											"functionName": {
												"name": "abi_decode_string",
												"nodeType": "YulIdentifier",
												"src": "3771:17:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3771:50:10"
										},
										"variableNames": [
											{
												"name": "value4",
												"nodeType": "YulIdentifier",
												"src": "3761:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "3830:49:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3863:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "3874:3:10",
															"type": "",
															"value": "160"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3859:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3859:19:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "3846:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3846:33:10"
										},
										"variables": [
											{
												"name": "offset_1",
												"nodeType": "YulTypedName",
												"src": "3834:8:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "3908:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3917:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3920:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "3910:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "3910:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "3910:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "offset_1",
													"nodeType": "YulIdentifier",
													"src": "3894:8:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "3904:2:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "3891:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3891:16:10"
										},
										"nodeType": "YulIf",
										"src": "3888:36:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "3933:62:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "3965:9:10"
														},
														{
															"name": "offset_1",
															"nodeType": "YulIdentifier",
															"src": "3976:8:10"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "3961:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "3961:24:10"
												},
												{
													"name": "dataEnd",
													"nodeType": "YulIdentifier",
													"src": "3987:7:10"
												}
											],
											"functionName": {
												"name": "abi_decode_string",
												"nodeType": "YulIdentifier",
												"src": "3943:17:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "3943:52:10"
										},
										"variableNames": [
											{
												"name": "value5",
												"nodeType": "YulIdentifier",
												"src": "3933:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "4004:47:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4035:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4046:3:10",
															"type": "",
															"value": "192"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4031:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4031:19:10"
												}
											],
											"functionName": {
												"name": "abi_decode_uint8",
												"nodeType": "YulIdentifier",
												"src": "4014:16:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4014:37:10"
										},
										"variableNames": [
											{
												"name": "value6",
												"nodeType": "YulIdentifier",
												"src": "4004:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_contract$_ComptrollerInterface_$3351t_contract$_InterestRateModel_$4397t_uint256t_string_memory_ptrt_string_memory_ptrt_uint8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "3063:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "3074:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "3086:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "3094:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "3102:6:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "3110:6:10",
									"type": ""
								},
								{
									"name": "value4",
									"nodeType": "YulTypedName",
									"src": "3118:6:10",
									"type": ""
								},
								{
									"name": "value5",
									"nodeType": "YulTypedName",
									"src": "3126:6:10",
									"type": ""
								},
								{
									"name": "value6",
									"nodeType": "YulTypedName",
									"src": "3134:6:10",
									"type": ""
								}
							],
							"src": "2900:1157:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4166:177:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "4212:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4221:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4224:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "4214:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "4214:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "4214:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "4187:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4196:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "4183:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4183:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4208:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "4179:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4179:32:10"
										},
										"nodeType": "YulIf",
										"src": "4176:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "4237:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4263:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "4250:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4250:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "4241:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "4307:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "4282:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4282:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4282:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "4322:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "4332:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "4322:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_contract$_EIP20NonStandardInterface_$3514",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4132:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "4143:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "4155:6:10",
									"type": ""
								}
							],
							"src": "4062:281:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4452:352:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "4498:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4507:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4510:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "4500:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "4500:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "4500:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "4473:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4482:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "4469:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4469:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4494:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "4465:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4465:32:10"
										},
										"nodeType": "YulIf",
										"src": "4462:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "4523:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4549:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "4536:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4536:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "4527:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "4593:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "4568:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4568:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4568:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "4608:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "4618:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "4608:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "4632:47:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4664:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4675:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4660:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4660:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "4647:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4647:32:10"
										},
										"variables": [
											{
												"name": "value_1",
												"nodeType": "YulTypedName",
												"src": "4636:7:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value_1",
													"nodeType": "YulIdentifier",
													"src": "4713:7:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "4688:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4688:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4688:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "4730:17:10",
										"value": {
											"name": "value_1",
											"nodeType": "YulIdentifier",
											"src": "4740:7:10"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "4730:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "4756:42:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "4783:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "4794:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "4779:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4779:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "4766:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4766:32:10"
										},
										"variableNames": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "4756:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_addresst_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4402:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "4413:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "4425:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "4433:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "4441:6:10",
									"type": ""
								}
							],
							"src": "4348:456:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "4926:102:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "4936:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4948:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "4959:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "4944:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4944:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "4936:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "4978:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "4993:6:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5009:3:10",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5014:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "5005:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5005:11:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "5018:1:10",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nodeType": "YulIdentifier",
																"src": "5001:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "5001:19:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "4989:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "4989:32:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "4971:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "4971:51:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "4971:51:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "4895:9:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "4906:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "4917:4:10",
									"type": ""
								}
							],
							"src": "4809:219:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5130:87:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "5140:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5152:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5163:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "5148:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5148:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5140:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5182:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "5197:6:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "5205:4:10",
															"type": "",
															"value": "0xff"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "5193:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5193:17:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5175:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5175:36:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5175:36:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5099:9:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "5110:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5121:4:10",
									"type": ""
								}
							],
							"src": "5033:184:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5321:177:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "5367:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5376:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5379:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "5369:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "5369:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "5369:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "5342:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "5351:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "5338:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5338:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5363:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "5334:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5334:32:10"
										},
										"nodeType": "YulIf",
										"src": "5331:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "5392:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5418:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "5405:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5405:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "5396:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "5462:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "5437:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5437:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5437:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "5477:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "5487:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "5477:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_contract$_ComptrollerInterface_$3351",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5287:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "5298:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "5310:6:10",
									"type": ""
								}
							],
							"src": "5222:276:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5633:102:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "5643:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5655:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5666:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "5651:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5651:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5643:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5685:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "5700:6:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5716:3:10",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5721:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "5712:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5712:11:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "5725:1:10",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nodeType": "YulIdentifier",
																"src": "5708:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "5708:19:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "5696:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5696:32:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5678:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5678:51:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5678:51:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_contract$_ComptrollerInterface_$3351__to_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5602:9:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "5613:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5624:4:10",
									"type": ""
								}
							],
							"src": "5503:232:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "5841:102:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "5851:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5863:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "5874:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "5859:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5859:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "5851:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "5893:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "5908:6:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5924:3:10",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "5929:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "5920:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5920:11:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "5933:1:10",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nodeType": "YulIdentifier",
																"src": "5916:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "5916:19:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "5904:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "5904:32:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "5886:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "5886:51:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "5886:51:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "5810:9:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "5821:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "5832:4:10",
									"type": ""
								}
							],
							"src": "5740:203:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "6176:787:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "6223:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6232:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6235:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "6225:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "6225:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6225:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "6197:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6206:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "6193:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6193:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "6218:3:10",
													"type": "",
													"value": "192"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "6189:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6189:33:10"
										},
										"nodeType": "YulIf",
										"src": "6186:53:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "6248:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "6274:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "6261:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6261:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "6252:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "6318:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "6293:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6293:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6293:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "6333:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "6343:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "6333:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "6357:47:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6389:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6400:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6385:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6385:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "6372:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6372:32:10"
										},
										"variables": [
											{
												"name": "value_1",
												"nodeType": "YulTypedName",
												"src": "6361:7:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value_1",
													"nodeType": "YulIdentifier",
													"src": "6438:7:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "6413:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6413:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "6413:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "6455:17:10",
										"value": {
											"name": "value_1",
											"nodeType": "YulIdentifier",
											"src": "6465:7:10"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "6455:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "6481:42:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6508:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6519:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6504:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6504:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "6491:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6491:32:10"
										},
										"variableNames": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "6481:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "6532:46:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6563:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6574:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6559:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6559:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "6546:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6546:32:10"
										},
										"variables": [
											{
												"name": "offset",
												"nodeType": "YulTypedName",
												"src": "6536:6:10",
												"type": ""
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "6587:28:10",
										"value": {
											"kind": "number",
											"nodeType": "YulLiteral",
											"src": "6597:18:10",
											"type": "",
											"value": "0xffffffffffffffff"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "6591:2:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "6642:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6651:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6654:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "6644:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "6644:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6644:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "offset",
													"nodeType": "YulIdentifier",
													"src": "6630:6:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "6638:2:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "6627:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6627:14:10"
										},
										"nodeType": "YulIf",
										"src": "6624:34:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "6667:60:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6699:9:10"
														},
														{
															"name": "offset",
															"nodeType": "YulIdentifier",
															"src": "6710:6:10"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6695:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6695:22:10"
												},
												{
													"name": "dataEnd",
													"nodeType": "YulIdentifier",
													"src": "6719:7:10"
												}
											],
											"functionName": {
												"name": "abi_decode_string",
												"nodeType": "YulIdentifier",
												"src": "6677:17:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6677:50:10"
										},
										"variableNames": [
											{
												"name": "value3",
												"nodeType": "YulIdentifier",
												"src": "6667:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "6736:49:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6769:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6780:3:10",
															"type": "",
															"value": "128"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6765:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6765:19:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "6752:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6752:33:10"
										},
										"variables": [
											{
												"name": "offset_1",
												"nodeType": "YulTypedName",
												"src": "6740:8:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "6814:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6823:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6826:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "6816:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "6816:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "6816:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "offset_1",
													"nodeType": "YulIdentifier",
													"src": "6800:8:10"
												},
												{
													"name": "_1",
													"nodeType": "YulIdentifier",
													"src": "6810:2:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "6797:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6797:16:10"
										},
										"nodeType": "YulIf",
										"src": "6794:36:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "6839:62:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6871:9:10"
														},
														{
															"name": "offset_1",
															"nodeType": "YulIdentifier",
															"src": "6882:8:10"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6867:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6867:24:10"
												},
												{
													"name": "dataEnd",
													"nodeType": "YulIdentifier",
													"src": "6893:7:10"
												}
											],
											"functionName": {
												"name": "abi_decode_string",
												"nodeType": "YulIdentifier",
												"src": "6849:17:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6849:52:10"
										},
										"variableNames": [
											{
												"name": "value4",
												"nodeType": "YulIdentifier",
												"src": "6839:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "6910:47:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "6941:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6952:3:10",
															"type": "",
															"value": "160"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "6937:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "6937:19:10"
												}
											],
											"functionName": {
												"name": "abi_decode_uint8",
												"nodeType": "YulIdentifier",
												"src": "6920:16:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "6920:37:10"
										},
										"variableNames": [
											{
												"name": "value5",
												"nodeType": "YulIdentifier",
												"src": "6910:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_contract$_ComptrollerInterface_$3351t_contract$_InterestRateModel_$4397t_uint256t_string_memory_ptrt_string_memory_ptrt_uint8",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "6102:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "6113:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "6125:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "6133:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "6141:6:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "6149:6:10",
									"type": ""
								},
								{
									"name": "value4",
									"nodeType": "YulTypedName",
									"src": "6157:6:10",
									"type": ""
								},
								{
									"name": "value5",
									"nodeType": "YulTypedName",
									"src": "6165:6:10",
									"type": ""
								}
							],
							"src": "5948:1015:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "7046:177:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "7092:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7101:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7104:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "7094:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "7094:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "7094:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "7067:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7076:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "7063:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "7063:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7088:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "7059:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7059:32:10"
										},
										"nodeType": "YulIf",
										"src": "7056:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "7117:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7143:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "7130:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7130:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "7121:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "7187:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "7162:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7162:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7162:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "7202:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "7212:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "7202:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_address_payable",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "7012:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "7023:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "7035:6:10",
									"type": ""
								}
							],
							"src": "6968:255:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "7413:206:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "7423:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7435:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7446:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "7431:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7431:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "7423:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7466:9:10"
												},
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "7477:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7459:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7459:25:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7459:25:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7504:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7515:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7500:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "7500:18:10"
												},
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "7520:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7493:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7493:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7493:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7547:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7558:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7543:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "7543:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "7563:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7536:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7536:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7536:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7590:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7601:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7586:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "7586:18:10"
												},
												{
													"name": "value3",
													"nodeType": "YulIdentifier",
													"src": "7606:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "7579:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7579:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7579:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "7358:9:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "7369:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "7377:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "7385:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "7393:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "7404:4:10",
									"type": ""
								}
							],
							"src": "7228:391:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "7711:301:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "7757:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7766:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7769:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "7759:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "7759:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "7759:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "7732:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7741:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "7728:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "7728:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "7753:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "7724:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7724:32:10"
										},
										"nodeType": "YulIf",
										"src": "7721:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "7782:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "7808:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "7795:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7795:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "7786:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "7852:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "7827:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7827:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7827:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "7867:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "7877:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "7867:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "7891:47:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "7923:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "7934:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "7919:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "7919:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "7906:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7906:32:10"
										},
										"variables": [
											{
												"name": "value_1",
												"nodeType": "YulTypedName",
												"src": "7895:7:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value_1",
													"nodeType": "YulIdentifier",
													"src": "7972:7:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "7947:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "7947:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "7947:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "7989:17:10",
										"value": {
											"name": "value_1",
											"nodeType": "YulIdentifier",
											"src": "7999:7:10"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "7989:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_address",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "7669:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "7680:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "7692:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "7700:6:10",
									"type": ""
								}
							],
							"src": "7624:388:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "8113:177:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "8159:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8168:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8171:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "8161:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "8161:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "8161:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "8134:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "8143:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "8130:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "8130:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "8155:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "8126:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8126:32:10"
										},
										"nodeType": "YulIf",
										"src": "8123:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "8184:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "8210:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "8197:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8197:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "8188:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "8254:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "8229:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8229:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "8229:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "8269:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "8279:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "8269:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_contract$_InterestRateModel_$4397",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "8079:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "8090:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "8102:6:10",
									"type": ""
								}
							],
							"src": "8017:273:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "8422:102:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "8432:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "8444:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "8455:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "8440:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8440:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "8432:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "8474:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "8489:6:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8505:3:10",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8510:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "8501:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "8501:11:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "8514:1:10",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nodeType": "YulIdentifier",
																"src": "8497:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "8497:19:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "8485:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "8485:32:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "8467:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8467:51:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "8467:51:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_contract$_InterestRateModel_$4397__to_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "8391:9:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "8402:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "8413:4:10",
									"type": ""
								}
							],
							"src": "8295:229:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "8657:352:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "8703:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8712:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8715:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "8705:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "8705:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "8705:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "8678:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "8687:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "8674:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "8674:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "8699:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "8670:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8670:32:10"
										},
										"nodeType": "YulIf",
										"src": "8667:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "8728:36:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "8754:9:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "8741:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8741:23:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "8732:5:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "8798:5:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "8773:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8773:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "8773:31:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "8813:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "8823:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "8813:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "8837:42:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "8864:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "8875:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "8860:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "8860:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "8847:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8847:32:10"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "8837:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "8888:47:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "8920:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "8931:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "8916:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "8916:18:10"
												}
											],
											"functionName": {
												"name": "calldataload",
												"nodeType": "YulIdentifier",
												"src": "8903:12:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8903:32:10"
										},
										"variables": [
											{
												"name": "value_1",
												"nodeType": "YulTypedName",
												"src": "8892:7:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "value_1",
													"nodeType": "YulIdentifier",
													"src": "8969:7:10"
												}
											],
											"functionName": {
												"name": "validator_revert_address",
												"nodeType": "YulIdentifier",
												"src": "8944:24:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "8944:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "8944:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "8986:17:10",
										"value": {
											"name": "value_1",
											"nodeType": "YulIdentifier",
											"src": "8996:7:10"
										},
										"variableNames": [
											{
												"name": "value2",
												"nodeType": "YulIdentifier",
												"src": "8986:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_addresst_uint256t_contract$_CTokenInterface_$3030",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "8607:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "8618:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "8630:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "8638:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "8646:6:10",
									"type": ""
								}
							],
							"src": "8529:480:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "9069:325:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "9079:22:10",
										"value": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "9093:1:10",
													"type": "",
													"value": "1"
												},
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "9096:4:10"
												}
											],
											"functionName": {
												"name": "shr",
												"nodeType": "YulIdentifier",
												"src": "9089:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9089:12:10"
										},
										"variableNames": [
											{
												"name": "length",
												"nodeType": "YulIdentifier",
												"src": "9079:6:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "9110:38:10",
										"value": {
											"arguments": [
												{
													"name": "data",
													"nodeType": "YulIdentifier",
													"src": "9140:4:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "9146:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "9136:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9136:12:10"
										},
										"variables": [
											{
												"name": "outOfPlaceEncoding",
												"nodeType": "YulTypedName",
												"src": "9114:18:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "9187:31:10",
											"statements": [
												{
													"nodeType": "YulAssignment",
													"src": "9189:27:10",
													"value": {
														"arguments": [
															{
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "9203:6:10"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9211:4:10",
																"type": "",
																"value": "0x7f"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "9199:3:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "9199:17:10"
													},
													"variableNames": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "9189:6:10"
														}
													]
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "9167:18:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "9160:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9160:26:10"
										},
										"nodeType": "YulIf",
										"src": "9157:61:10"
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "9277:111:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9298:1:10",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9305:3:10",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9310:10:10",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "9301:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9301:20:10"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "9291:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "9291:31:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "9291:31:10"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9342:1:10",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9345:4:10",
																"type": "",
																"value": "0x22"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "9335:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "9335:15:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "9335:15:10"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9370:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9373:4:10",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "9363:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "9363:15:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "9363:15:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "outOfPlaceEncoding",
													"nodeType": "YulIdentifier",
													"src": "9233:18:10"
												},
												{
													"arguments": [
														{
															"name": "length",
															"nodeType": "YulIdentifier",
															"src": "9256:6:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9264:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "lt",
														"nodeType": "YulIdentifier",
														"src": "9253:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "9253:14:10"
												}
											],
											"functionName": {
												"name": "eq",
												"nodeType": "YulIdentifier",
												"src": "9230:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9230:38:10"
										},
										"nodeType": "YulIf",
										"src": "9227:161:10"
									}
								]
							},
							"name": "extract_byte_array_length",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "data",
									"nodeType": "YulTypedName",
									"src": "9049:4:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "length",
									"nodeType": "YulTypedName",
									"src": "9058:6:10",
									"type": ""
								}
							],
							"src": "9014:380:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "9573:160:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "9590:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "9601:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "9583:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9583:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "9583:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "9624:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9635:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "9620:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "9620:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "9640:2:10",
													"type": "",
													"value": "10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "9613:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9613:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "9613:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "9663:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "9674:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "9659:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "9659:18:10"
												},
												{
													"hexValue": "72652d656e7465726564",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "9679:12:10",
													"type": "",
													"value": "re-entered"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "9652:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9652:40:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "9652:40:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "9701:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "9713:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "9724:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "9709:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9709:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "9701:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_987a3f65bf6c5144d945a7d9587fa166ee3a901eb2b594a0815c3c20bf841a5e__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "9550:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "9564:4:10",
									"type": ""
								}
							],
							"src": "9399:334:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "9819:103:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "9865:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9874:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9877:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "9867:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "9867:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "9867:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "9840:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "9849:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "9836:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "9836:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "9861:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "9832:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9832:32:10"
										},
										"nodeType": "YulIf",
										"src": "9829:52:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "9890:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "9906:9:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "9900:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "9900:16:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "9890:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "9785:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "9796:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "9808:6:10",
									"type": ""
								}
							],
							"src": "9738:184:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "10101:237:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "10118:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10129:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10111:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10111:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10111:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "10152:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10163:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10148:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "10148:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10168:2:10",
													"type": "",
													"value": "47"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10141:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10141:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10141:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "10191:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10202:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10187:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "10187:18:10"
												},
												{
													"hexValue": "4345726332303a3a7377656570546f6b656e3a206f6e6c792061646d696e2063",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "10207:34:10",
													"type": "",
													"value": "CErc20::sweepToken: only admin c"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10180:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10180:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10180:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "10262:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10273:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10258:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "10258:18:10"
												},
												{
													"hexValue": "616e20737765657020746f6b656e73",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "10278:17:10",
													"type": "",
													"value": "an sweep tokens"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10251:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10251:45:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10251:45:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "10305:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "10317:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10328:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "10313:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10313:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "10305:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_135504d16831a63c655007ab9521409902ae5ee7f0d4d3155446ade8199c0062__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "10078:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "10092:4:10",
									"type": ""
								}
							],
							"src": "9927:411:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "10517:240:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "10534:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10545:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10527:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10527:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10527:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "10568:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10579:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10564:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "10564:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10584:2:10",
													"type": "",
													"value": "50"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10557:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10557:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10557:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "10607:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10618:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10603:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "10603:18:10"
												},
												{
													"hexValue": "4345726332303a3a7377656570546f6b656e3a2063616e206e6f742073776565",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "10623:34:10",
													"type": "",
													"value": "CErc20::sweepToken: can not swee"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10596:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10596:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10596:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "10678:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "10689:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "10674:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "10674:18:10"
												},
												{
													"hexValue": "7020756e6465726c79696e6720746f6b656e",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "10694:20:10",
													"type": "",
													"value": "p underlying token"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10667:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10667:48:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10667:48:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "10724:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "10736:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10747:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "10732:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10732:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "10724:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_1cd5edf3f8c5c849e30639fd2b4477757d2fdcadadbdd58a80bbf21b6f613b41__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "10494:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "10508:4:10",
									"type": ""
								}
							],
							"src": "10343:414:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "10899:145:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "10909:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "10921:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "10932:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "10917:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10917:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "10909:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "10951:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "10966:6:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10982:3:10",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10987:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "10978:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "10978:11:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "10991:1:10",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nodeType": "YulIdentifier",
																"src": "10974:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "10974:19:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "10962:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "10962:32:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "10944:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "10944:51:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "10944:51:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "11015:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "11026:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "11011:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "11011:18:10"
												},
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "11031:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "11004:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11004:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11004:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "10860:9:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "10871:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "10879:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "10890:4:10",
									"type": ""
								}
							],
							"src": "10762:282:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "11127:199:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "11173:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11182:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11185:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "11175:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "11175:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "11175:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "11148:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "11157:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "11144:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "11144:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11169:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "11140:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11140:32:10"
										},
										"nodeType": "YulIf",
										"src": "11137:52:10"
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "11198:29:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "11217:9:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "11211:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11211:16:10"
										},
										"variables": [
											{
												"name": "value",
												"nodeType": "YulTypedName",
												"src": "11202:5:10",
												"type": ""
											}
										]
									},
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "11280:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11289:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11292:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "11282:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "11282:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "11282:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "value",
															"nodeType": "YulIdentifier",
															"src": "11249:5:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"name": "value",
																			"nodeType": "YulIdentifier",
																			"src": "11270:5:10"
																		}
																	],
																	"functionName": {
																		"name": "iszero",
																		"nodeType": "YulIdentifier",
																		"src": "11263:6:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "11263:13:10"
																}
															],
															"functionName": {
																"name": "iszero",
																"nodeType": "YulIdentifier",
																"src": "11256:6:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "11256:21:10"
														}
													],
													"functionName": {
														"name": "eq",
														"nodeType": "YulIdentifier",
														"src": "11246:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "11246:32:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "11239:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11239:40:10"
										},
										"nodeType": "YulIf",
										"src": "11236:60:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "11305:15:10",
										"value": {
											"name": "value",
											"nodeType": "YulIdentifier",
											"src": "11315:5:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "11305:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_bool_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "11093:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "11104:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "11116:6:10",
									"type": ""
								}
							],
							"src": "11049:277:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "11505:178:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "11522:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11533:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "11515:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11515:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11515:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "11556:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "11567:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "11552:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "11552:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11572:2:10",
													"type": "",
													"value": "28"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "11545:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11545:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11545:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "11595:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "11606:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "11591:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "11591:18:10"
												},
												{
													"hexValue": "6d61726b6572206d6574686f642072657475726e65642066616c7365",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "11611:30:10",
													"type": "",
													"value": "marker method returned false"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "11584:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11584:58:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11584:58:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "11651:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "11663:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11674:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "11659:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11659:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "11651:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_73c0b9b9fc59551809f9e3f686bb994cac13db80a83fd9ccdfe6d53da80fe637__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "11482:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "11496:4:10",
									"type": ""
								}
							],
							"src": "11331:352:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "11875:175:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "11885:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "11897:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11908:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "11893:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11893:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "11885:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "11920:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "11938:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "11943:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "11934:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "11934:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "11947:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "11930:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11930:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "11924:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "11965:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "11980:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "11988:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "11976:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "11976:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "11958:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "11958:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "11958:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "12012:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "12023:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "12008:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "12008:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "12032:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "12040:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "12028:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "12028:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12001:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12001:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12001:43:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_contract$_ComptrollerInterface_$3351_t_contract$_ComptrollerInterface_$3351__to_t_address_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "11836:9:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "11847:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "11855:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "11866:4:10",
									"type": ""
								}
							],
							"src": "11688:362:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "12229:235:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "12246:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12257:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12239:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12239:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12239:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "12280:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "12291:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "12276:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "12276:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12296:2:10",
													"type": "",
													"value": "45"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12269:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12269:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12269:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "12319:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "12330:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "12315:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "12315:18:10"
												},
												{
													"hexValue": "6f6e6c79207468652061646d696e206d6179207365742074686520636f6d702d",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "12335:34:10",
													"type": "",
													"value": "only the admin may set the comp-"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12308:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12308:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12308:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "12390:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "12401:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "12386:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "12386:18:10"
												},
												{
													"hexValue": "6c696b652064656c6567617465",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "12406:15:10",
													"type": "",
													"value": "like delegate"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12379:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12379:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12379:43:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "12431:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "12443:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12454:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "12439:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12439:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "12431:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_49c9d7834318fbd23fb0b05062dcbe05993694e29e663da07483dd74b33e77ca__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "12206:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "12220:4:10",
									"type": ""
								}
							],
							"src": "12055:409:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "12643:226:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "12660:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12671:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12653:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12653:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12653:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "12694:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "12705:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "12690:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "12690:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12710:2:10",
													"type": "",
													"value": "36"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12683:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12683:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12683:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "12733:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "12744:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "12729:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "12729:18:10"
												},
												{
													"hexValue": "6f6e6c792061646d696e206d617920696e697469616c697a6520746865206d61",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "12749:34:10",
													"type": "",
													"value": "only admin may initialize the ma"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12722:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12722:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12722:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "12804:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "12815:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "12800:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "12800:18:10"
												},
												{
													"hexValue": "726b6574",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "12820:6:10",
													"type": "",
													"value": "rket"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "12793:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12793:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "12793:34:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "12836:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "12848:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "12859:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "12844:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "12844:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "12836:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_0d998648c97be54311575d3a2c41b4b9b1a42ee050ec72752cd3e44128c6d6c6__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "12620:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "12634:4:10",
									"type": ""
								}
							],
							"src": "12469:400:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "13048:225:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "13065:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13076:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13058:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13058:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13058:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13099:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13110:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13095:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "13095:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13115:2:10",
													"type": "",
													"value": "35"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13088:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13088:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13088:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13138:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13149:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13134:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "13134:18:10"
												},
												{
													"hexValue": "6d61726b6574206d6179206f6e6c7920626520696e697469616c697a6564206f",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "13154:34:10",
													"type": "",
													"value": "market may only be initialized o"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13127:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13127:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13127:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13209:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13220:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13205:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "13205:18:10"
												},
												{
													"hexValue": "6e6365",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "13225:5:10",
													"type": "",
													"value": "nce"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13198:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13198:33:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13198:33:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "13240:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "13252:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13263:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "13248:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13248:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "13240:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_1bebca39b478e42a6b88dcff87467d0e08b422ebc72c3d074bd236265624e814__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "13025:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "13039:4:10",
									"type": ""
								}
							],
							"src": "12874:399:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "13452:238:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "13469:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13480:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13462:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13462:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13462:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13503:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13514:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13499:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "13499:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13519:2:10",
													"type": "",
													"value": "48"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13492:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13492:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13492:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13542:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13553:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13538:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "13538:18:10"
												},
												{
													"hexValue": "696e697469616c2065786368616e67652072617465206d757374206265206772",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "13558:34:10",
													"type": "",
													"value": "initial exchange rate must be gr"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13531:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13531:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13531:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13613:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13624:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13609:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "13609:18:10"
												},
												{
													"hexValue": "6561746572207468616e207a65726f2e",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "13629:18:10",
													"type": "",
													"value": "eater than zero."
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13602:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13602:46:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13602:46:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "13657:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "13669:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13680:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "13665:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13665:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "13657:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_427426a02e699ec0d6d6d22f3254c7e686696e18d2de7af9416d6b5cc786ff6c__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "13429:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "13443:4:10",
									"type": ""
								}
							],
							"src": "13278:412:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "13869:176:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "13886:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13897:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13879:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13879:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13879:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13920:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13931:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13916:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "13916:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "13936:2:10",
													"type": "",
													"value": "26"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13909:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13909:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13909:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "13959:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "13970:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "13955:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "13955:18:10"
												},
												{
													"hexValue": "73657474696e6720636f6d7074726f6c6c6572206661696c6564",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "13975:28:10",
													"type": "",
													"value": "setting comptroller failed"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "13948:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "13948:56:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "13948:56:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "14013:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "14025:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "14036:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "14021:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14021:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "14013:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_b20ca7ca5fb4cb4511b58e112cf8b8663096873b0029b9b6aeb6bb29723b6450__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "13846:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "13860:4:10",
									"type": ""
								}
							],
							"src": "13695:350:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "14224:224:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "14241:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "14252:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14234:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14234:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14234:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "14275:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "14286:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "14271:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "14271:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "14291:2:10",
													"type": "",
													"value": "34"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14264:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14264:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14264:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "14314:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "14325:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "14310:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "14310:18:10"
												},
												{
													"hexValue": "73657474696e6720696e7465726573742072617465206d6f64656c206661696c",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "14330:34:10",
													"type": "",
													"value": "setting interest rate model fail"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14303:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14303:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14303:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "14385:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "14396:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "14381:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "14381:18:10"
												},
												{
													"hexValue": "6564",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "14401:4:10",
													"type": "",
													"value": "ed"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14374:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14374:32:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14374:32:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "14415:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "14427:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "14438:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "14423:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14423:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "14415:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_59076c676f223cb9d4de55d807fe5a438ed31bccfb7626e1e7791e8e0eec7464__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "14201:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "14215:4:10",
									"type": ""
								}
							],
							"src": "14050:398:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "14610:162:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "14620:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "14632:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "14643:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "14628:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14628:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "14620:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "14662:9:10"
												},
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "14673:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14655:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14655:25:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14655:25:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "14700:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "14711:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "14696:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "14696:18:10"
												},
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "14716:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14689:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14689:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14689:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "14743:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "14754:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "14739:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "14739:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "14759:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14732:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14732:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14732:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "14563:9:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "14574:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "14582:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "14590:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "14601:4:10",
									"type": ""
								}
							],
							"src": "14453:319:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "14951:178:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "14968:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "14979:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14961:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14961:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14961:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "15002:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "15013:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "14998:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "14998:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15018:2:10",
													"type": "",
													"value": "28"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "14991:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "14991:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "14991:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "15041:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "15052:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "15037:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "15037:18:10"
												},
												{
													"hexValue": "626f72726f772072617465206973206162737572646c792068696768",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "15057:30:10",
													"type": "",
													"value": "borrow rate is absurdly high"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "15030:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15030:58:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "15030:58:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "15097:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "15109:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15120:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "15105:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15105:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "15097:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_9ab90068dc5fe9f7def6aab4ae887ed8eff65c4b83c1b9ba6beb99101f1ae8ea__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "14928:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "14942:4:10",
									"type": ""
								}
							],
							"src": "14777:352:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "15166:95:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15183:1:10",
													"type": "",
													"value": "0"
												},
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "15190:3:10",
															"type": "",
															"value": "224"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "15195:10:10",
															"type": "",
															"value": "0x4e487b71"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "15186:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "15186:20:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "15176:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15176:31:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "15176:31:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15223:1:10",
													"type": "",
													"value": "4"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15226:4:10",
													"type": "",
													"value": "0x11"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "15216:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15216:15:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "15216:15:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15247:1:10",
													"type": "",
													"value": "0"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15250:4:10",
													"type": "",
													"value": "0x24"
												}
											],
											"functionName": {
												"name": "revert",
												"nodeType": "YulIdentifier",
												"src": "15240:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15240:15:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "15240:15:10"
									}
								]
							},
							"name": "panic_error_0x11",
							"nodeType": "YulFunctionDefinition",
							"src": "15134:127:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "15315:76:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "15337:22:10",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nodeType": "YulIdentifier",
															"src": "15339:16:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "15339:18:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "15339:18:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "15331:1:10"
												},
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "15334:1:10"
												}
											],
											"functionName": {
												"name": "lt",
												"nodeType": "YulIdentifier",
												"src": "15328:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15328:8:10"
										},
										"nodeType": "YulIf",
										"src": "15325:34:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "15368:17:10",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "15380:1:10"
												},
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "15383:1:10"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "15376:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15376:9:10"
										},
										"variableNames": [
											{
												"name": "diff",
												"nodeType": "YulIdentifier",
												"src": "15368:4:10"
											}
										]
									}
								]
							},
							"name": "checked_sub_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nodeType": "YulTypedName",
									"src": "15297:1:10",
									"type": ""
								},
								{
									"name": "y",
									"nodeType": "YulTypedName",
									"src": "15300:1:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "diff",
									"nodeType": "YulTypedName",
									"src": "15306:4:10",
									"type": ""
								}
							],
							"src": "15266:125:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "15444:80:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "15471:22:10",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nodeType": "YulIdentifier",
															"src": "15473:16:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "15473:18:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "15473:18:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "15460:1:10"
												},
												{
													"arguments": [
														{
															"name": "y",
															"nodeType": "YulIdentifier",
															"src": "15467:1:10"
														}
													],
													"functionName": {
														"name": "not",
														"nodeType": "YulIdentifier",
														"src": "15463:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "15463:6:10"
												}
											],
											"functionName": {
												"name": "gt",
												"nodeType": "YulIdentifier",
												"src": "15457:2:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15457:13:10"
										},
										"nodeType": "YulIf",
										"src": "15454:39:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "15502:16:10",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "15513:1:10"
												},
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "15516:1:10"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "15509:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15509:9:10"
										},
										"variableNames": [
											{
												"name": "sum",
												"nodeType": "YulIdentifier",
												"src": "15502:3:10"
											}
										]
									}
								]
							},
							"name": "checked_add_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nodeType": "YulTypedName",
									"src": "15427:1:10",
									"type": ""
								},
								{
									"name": "y",
									"nodeType": "YulTypedName",
									"src": "15430:1:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "sum",
									"nodeType": "YulTypedName",
									"src": "15436:3:10",
									"type": ""
								}
							],
							"src": "15396:128:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "15666:175:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "15676:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "15688:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15699:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "15684:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15684:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "15676:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "15711:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "15729:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "15734:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "15725:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "15725:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "15738:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "15721:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15721:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "15715:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "15756:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "15771:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "15779:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "15767:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "15767:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "15749:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15749:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "15749:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "15803:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "15814:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "15799:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "15799:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "15823:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "15831:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "15819:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "15819:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "15792:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15792:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "15792:43:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_payable__to_t_address_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "15627:9:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "15638:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "15646:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "15657:4:10",
									"type": ""
								}
							],
							"src": "15529:312:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "15898:116:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "15957:22:10",
											"statements": [
												{
													"expression": {
														"arguments": [],
														"functionName": {
															"name": "panic_error_0x11",
															"nodeType": "YulIdentifier",
															"src": "15959:16:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "15959:18:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "15959:18:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"arguments": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15929:1:10"
																}
															],
															"functionName": {
																"name": "iszero",
																"nodeType": "YulIdentifier",
																"src": "15922:6:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "15922:9:10"
														}
													],
													"functionName": {
														"name": "iszero",
														"nodeType": "YulIdentifier",
														"src": "15915:6:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "15915:17:10"
												},
												{
													"arguments": [
														{
															"name": "y",
															"nodeType": "YulIdentifier",
															"src": "15937:1:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "15948:1:10",
																			"type": "",
																			"value": "0"
																		}
																	],
																	"functionName": {
																		"name": "not",
																		"nodeType": "YulIdentifier",
																		"src": "15944:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "15944:6:10"
																},
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "15952:1:10"
																}
															],
															"functionName": {
																"name": "div",
																"nodeType": "YulIdentifier",
																"src": "15940:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "15940:14:10"
														}
													],
													"functionName": {
														"name": "gt",
														"nodeType": "YulIdentifier",
														"src": "15934:2:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "15934:21:10"
												}
											],
											"functionName": {
												"name": "and",
												"nodeType": "YulIdentifier",
												"src": "15911:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15911:45:10"
										},
										"nodeType": "YulIf",
										"src": "15908:71:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "15988:20:10",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "16003:1:10"
												},
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "16006:1:10"
												}
											],
											"functionName": {
												"name": "mul",
												"nodeType": "YulIdentifier",
												"src": "15999:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "15999:9:10"
										},
										"variableNames": [
											{
												"name": "product",
												"nodeType": "YulIdentifier",
												"src": "15988:7:10"
											}
										]
									}
								]
							},
							"name": "checked_mul_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nodeType": "YulTypedName",
									"src": "15877:1:10",
									"type": ""
								},
								{
									"name": "y",
									"nodeType": "YulTypedName",
									"src": "15880:1:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "product",
									"nodeType": "YulTypedName",
									"src": "15886:7:10",
									"type": ""
								}
							],
							"src": "15846:168:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "16065:171:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "16096:111:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16117:1:10",
																"type": "",
																"value": "0"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16124:3:10",
																		"type": "",
																		"value": "224"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16129:10:10",
																		"type": "",
																		"value": "0x4e487b71"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "16120:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16120:20:10"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "16110:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "16110:31:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "16110:31:10"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16161:1:10",
																"type": "",
																"value": "4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16164:4:10",
																"type": "",
																"value": "0x12"
															}
														],
														"functionName": {
															"name": "mstore",
															"nodeType": "YulIdentifier",
															"src": "16154:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "16154:15:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "16154:15:10"
												},
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16189:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16192:4:10",
																"type": "",
																"value": "0x24"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "16182:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "16182:15:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "16182:15:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "16085:1:10"
												}
											],
											"functionName": {
												"name": "iszero",
												"nodeType": "YulIdentifier",
												"src": "16078:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16078:9:10"
										},
										"nodeType": "YulIf",
										"src": "16075:132:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "16216:14:10",
										"value": {
											"arguments": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "16225:1:10"
												},
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "16228:1:10"
												}
											],
											"functionName": {
												"name": "div",
												"nodeType": "YulIdentifier",
												"src": "16221:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16221:9:10"
										},
										"variableNames": [
											{
												"name": "r",
												"nodeType": "YulIdentifier",
												"src": "16216:1:10"
											}
										]
									}
								]
							},
							"name": "checked_div_t_uint256",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "x",
									"nodeType": "YulTypedName",
									"src": "16050:1:10",
									"type": ""
								},
								{
									"name": "y",
									"nodeType": "YulTypedName",
									"src": "16053:1:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "r",
									"nodeType": "YulTypedName",
									"src": "16059:1:10",
									"type": ""
								}
							],
							"src": "16019:217:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "16426:271:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "16436:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "16448:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "16459:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "16444:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16444:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "16436:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "16472:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "16490:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "16495:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "16486:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "16486:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "16499:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "16482:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16482:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "16476:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "16517:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "16532:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "16540:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "16528:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "16528:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "16510:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16510:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "16510:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "16564:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "16575:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "16560:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "16560:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "16584:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "16592:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "16580:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "16580:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "16553:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16553:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "16553:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "16616:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "16627:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "16612:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "16612:18:10"
												},
												{
													"arguments": [
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "16636:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "16644:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "16632:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "16632:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "16605:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16605:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "16605:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "16668:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "16679:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "16664:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "16664:18:10"
												},
												{
													"name": "value3",
													"nodeType": "YulIdentifier",
													"src": "16684:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "16657:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16657:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "16657:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "16371:9:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "16382:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "16390:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "16398:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "16406:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "16417:4:10",
									"type": ""
								}
							],
							"src": "16241:456:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "16867:188:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "16877:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "16889:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "16900:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "16885:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16885:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "16877:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "16919:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "16934:6:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "16950:3:10",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "16955:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "16946:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "16946:11:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "16959:1:10",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nodeType": "YulIdentifier",
																"src": "16942:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "16942:19:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "16930:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "16930:32:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "16912:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16912:51:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "16912:51:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "16983:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "16994:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "16979:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "16979:18:10"
												},
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "16999:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "16972:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "16972:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "16972:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "17026:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17037:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "17022:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17022:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "17042:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "17015:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17015:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "17015:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "16820:9:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "16831:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "16839:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "16847:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "16858:4:10",
									"type": ""
								}
							],
							"src": "16702:353:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "17241:175:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "17251:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "17263:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "17274:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "17259:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17259:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "17251:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "17286:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17304:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17309:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "17300:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17300:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "17313:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "17296:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17296:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "17290:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "17331:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "17346:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "17354:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "17342:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17342:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "17324:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17324:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "17324:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "17378:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17389:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "17374:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17374:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "17398:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "17406:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "17394:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17394:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "17367:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17367:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "17367:43:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_contract$_InterestRateModel_$4397_t_contract$_InterestRateModel_$4397__to_t_address_t_address__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "17202:9:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "17213:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "17221:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "17232:4:10",
									"type": ""
								}
							],
							"src": "17060:356:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "17634:324:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "17644:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "17656:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "17667:3:10",
													"type": "",
													"value": "160"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "17652:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17652:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "17644:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "17680:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17698:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17703:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "17694:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17694:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "17707:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "17690:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17690:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "17684:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "17725:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "17740:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "17748:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "17736:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17736:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "17718:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17718:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "17718:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "17772:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17783:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "17768:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17768:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "17792:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "17800:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "17788:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17788:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "17761:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17761:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "17761:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "17824:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17835:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "17820:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17820:18:10"
												},
												{
													"arguments": [
														{
															"name": "value2",
															"nodeType": "YulIdentifier",
															"src": "17844:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "17852:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "17840:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17840:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "17813:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17813:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "17813:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "17876:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17887:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "17872:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17872:18:10"
												},
												{
													"arguments": [
														{
															"name": "value3",
															"nodeType": "YulIdentifier",
															"src": "17896:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "17904:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "17892:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17892:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "17865:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17865:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "17865:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "17928:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "17939:3:10",
															"type": "",
															"value": "128"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "17924:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "17924:19:10"
												},
												{
													"name": "value4",
													"nodeType": "YulIdentifier",
													"src": "17945:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "17917:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "17917:35:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "17917:35:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "17571:9:10",
									"type": ""
								},
								{
									"name": "value4",
									"nodeType": "YulTypedName",
									"src": "17582:6:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "17590:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "17598:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "17606:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "17614:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "17625:4:10",
									"type": ""
								}
							],
							"src": "17421:537:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "18120:188:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "18130:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "18142:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "18153:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "18138:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18138:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "18130:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "18172:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "18187:6:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "18203:3:10",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "18208:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "18199:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "18199:11:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "18212:1:10",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nodeType": "YulIdentifier",
																"src": "18195:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "18195:19:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "18183:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "18183:32:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "18165:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18165:51:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "18165:51:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "18236:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "18247:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "18232:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "18232:18:10"
												},
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "18252:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "18225:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18225:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "18225:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "18279:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "18290:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "18275:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "18275:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "18295:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "18268:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18268:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "18268:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "18073:9:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "18084:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "18092:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "18100:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "18111:4:10",
									"type": ""
								}
							],
							"src": "17963:345:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "18442:119:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "18452:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "18464:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "18475:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "18460:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18460:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "18452:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "18494:9:10"
												},
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "18505:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "18487:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18487:25:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "18487:25:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "18532:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "18543:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "18528:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "18528:18:10"
												},
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "18548:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "18521:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18521:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "18521:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "18403:9:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "18414:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "18422:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "18433:4:10",
									"type": ""
								}
							],
							"src": "18313:248:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "18779:306:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "18789:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "18801:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "18812:3:10",
													"type": "",
													"value": "160"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "18797:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18797:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "18789:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "18825:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "18843:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "18848:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "18839:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "18839:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "18852:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "18835:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18835:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "18829:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "18870:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "18885:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "18893:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "18881:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "18881:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "18863:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18863:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "18863:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "18917:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "18928:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "18913:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "18913:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "18937:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "18945:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "18933:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "18933:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "18906:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18906:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "18906:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "18969:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "18980:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "18965:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "18965:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "18985:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "18958:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "18958:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "18958:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "19012:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "19023:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "19008:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "19008:18:10"
												},
												{
													"name": "value3",
													"nodeType": "YulIdentifier",
													"src": "19028:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "19001:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19001:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "19001:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "19055:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "19066:3:10",
															"type": "",
															"value": "128"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "19051:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "19051:19:10"
												},
												{
													"name": "value4",
													"nodeType": "YulIdentifier",
													"src": "19072:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "19044:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19044:35:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "19044:35:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "18716:9:10",
									"type": ""
								},
								{
									"name": "value4",
									"nodeType": "YulTypedName",
									"src": "18727:6:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "18735:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "18743:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "18751:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "18759:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "18770:4:10",
									"type": ""
								}
							],
							"src": "18566:519:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "19264:175:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "19281:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "19292:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "19274:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19274:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "19274:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "19315:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "19326:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "19311:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "19311:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "19331:2:10",
													"type": "",
													"value": "25"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "19304:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19304:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "19304:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "19354:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "19365:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "19350:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "19350:18:10"
												},
												{
													"hexValue": "544f4b454e5f5452414e534645525f4f55545f4641494c4544",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "19370:27:10",
													"type": "",
													"value": "TOKEN_TRANSFER_OUT_FAILED"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "19343:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19343:55:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "19343:55:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "19407:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "19419:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "19430:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "19415:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19415:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "19407:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_240ffd6c262c542faf953100ec47f7b3f7ed65e23c06d0ff5d14cbe032268909__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "19241:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "19255:4:10",
									"type": ""
								}
							],
							"src": "19090:349:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "19618:242:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "19635:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "19646:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "19628:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19628:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "19628:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "19669:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "19680:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "19665:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "19665:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "19685:2:10",
													"type": "",
													"value": "52"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "19658:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19658:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "19658:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "19708:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "19719:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "19704:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "19704:18:10"
												},
												{
													"hexValue": "6f6e65206f662072656465656d546f6b656e73496e206f722072656465656d41",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "19724:34:10",
													"type": "",
													"value": "one of redeemTokensIn or redeemA"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "19697:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19697:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "19697:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "19779:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "19790:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "19775:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "19775:18:10"
												},
												{
													"hexValue": "6d6f756e74496e206d757374206265207a65726f",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "19795:22:10",
													"type": "",
													"value": "mountIn must be zero"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "19768:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19768:50:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "19768:50:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "19827:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "19839:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "19850:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "19835:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "19835:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "19827:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_e7cef2e7b515a83b650bc43dbe7230ede3601779d8be25fbf237261dccd3d9f2__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "19595:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "19609:4:10",
									"type": ""
								}
							],
							"src": "19444:416:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "20030:218:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "20040:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "20052:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "20063:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "20048:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20048:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "20040:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "20075:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20093:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20098:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "20089:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20089:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "20102:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "20085:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20085:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "20079:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "20120:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "20135:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "20143:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "20131:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20131:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "20113:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20113:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "20113:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "20167:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20178:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "20163:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20163:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "20187:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "20195:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "20183:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20183:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "20156:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20156:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "20156:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "20219:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20230:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "20215:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20215:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "20235:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "20208:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20208:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "20208:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "19983:9:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "19994:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "20002:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "20010:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "20021:4:10",
									"type": ""
								}
							],
							"src": "19865:383:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "20446:262:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "20456:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "20468:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "20479:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "20464:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20464:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "20456:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "20492:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20510:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20515:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "20506:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20506:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "20519:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "20502:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20502:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "20496:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "20537:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "20552:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "20560:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "20548:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20548:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "20530:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20530:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "20530:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "20584:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20595:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "20580:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20580:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "20604:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "20612:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "20600:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20600:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "20573:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20573:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "20573:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "20636:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20647:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "20632:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20632:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "20652:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "20625:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20625:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "20625:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "20679:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20690:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "20675:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20675:18:10"
												},
												{
													"name": "value3",
													"nodeType": "YulIdentifier",
													"src": "20695:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "20668:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20668:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "20668:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "20391:9:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "20402:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "20410:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "20418:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "20426:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "20437:4:10",
									"type": ""
								}
							],
							"src": "20253:455:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "20870:218:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "20880:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "20892:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "20903:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "20888:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20888:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "20880:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "20915:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20933:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "20938:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "20929:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20929:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "20942:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "20925:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20925:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "20919:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "20960:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "20975:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "20983:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "20971:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "20971:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "20953:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20953:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "20953:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "21007:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21018:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "21003:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21003:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "21027:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "21035:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "21023:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21023:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "20996:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "20996:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "20996:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "21059:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21070:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "21055:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21055:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "21075:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "21048:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21048:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "21048:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "20823:9:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "20834:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "20842:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "20850:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "20861:4:10",
									"type": ""
								}
							],
							"src": "20713:375:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "21278:262:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "21288:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "21300:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "21311:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "21296:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21296:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "21288:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "21324:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21342:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21347:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "21338:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21338:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "21351:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "21334:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21334:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "21328:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "21369:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "21384:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "21392:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "21380:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21380:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "21362:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21362:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "21362:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "21416:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21427:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "21412:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21412:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "21436:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "21444:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "21432:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21432:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "21405:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21405:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "21405:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "21468:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21479:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "21464:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21464:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "21484:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "21457:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21457:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "21457:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "21511:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21522:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "21507:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21507:18:10"
												},
												{
													"name": "value3",
													"nodeType": "YulIdentifier",
													"src": "21527:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "21500:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21500:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "21500:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "21223:9:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "21234:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "21242:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "21250:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "21258:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "21269:4:10",
									"type": ""
								}
							],
							"src": "21093:447:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "21738:232:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "21748:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "21760:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "21771:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "21756:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21756:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "21748:4:10"
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "21791:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "21806:6:10"
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "21822:3:10",
																			"type": "",
																			"value": "160"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "21827:1:10",
																			"type": "",
																			"value": "1"
																		}
																	],
																	"functionName": {
																		"name": "shl",
																		"nodeType": "YulIdentifier",
																		"src": "21818:3:10"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "21818:11:10"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "21831:1:10",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "sub",
																"nodeType": "YulIdentifier",
																"src": "21814:3:10"
															},
															"nodeType": "YulFunctionCall",
															"src": "21814:19:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "21802:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21802:32:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "21784:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21784:51:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "21784:51:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "21855:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21866:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "21851:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21851:18:10"
												},
												{
													"name": "value1",
													"nodeType": "YulIdentifier",
													"src": "21871:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "21844:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21844:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "21844:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "21898:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21909:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "21894:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21894:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "21914:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "21887:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21887:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "21887:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "21941:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "21952:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "21937:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "21937:18:10"
												},
												{
													"name": "value3",
													"nodeType": "YulIdentifier",
													"src": "21957:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "21930:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "21930:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "21930:34:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "21683:9:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "21694:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "21702:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "21710:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "21718:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "21729:4:10",
									"type": ""
								}
							],
							"src": "21545:425:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "22073:147:10",
								"statements": [
									{
										"body": {
											"nodeType": "YulBlock",
											"src": "22119:16:10",
											"statements": [
												{
													"expression": {
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "22128:1:10",
																"type": "",
																"value": "0"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "22131:1:10",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "revert",
															"nodeType": "YulIdentifier",
															"src": "22121:6:10"
														},
														"nodeType": "YulFunctionCall",
														"src": "22121:12:10"
													},
													"nodeType": "YulExpressionStatement",
													"src": "22121:12:10"
												}
											]
										},
										"condition": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "dataEnd",
															"nodeType": "YulIdentifier",
															"src": "22094:7:10"
														},
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "22103:9:10"
														}
													],
													"functionName": {
														"name": "sub",
														"nodeType": "YulIdentifier",
														"src": "22090:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "22090:23:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "22115:2:10",
													"type": "",
													"value": "64"
												}
											],
											"functionName": {
												"name": "slt",
												"nodeType": "YulIdentifier",
												"src": "22086:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22086:32:10"
										},
										"nodeType": "YulIf",
										"src": "22083:52:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "22144:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "22160:9:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "22154:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22154:16:10"
										},
										"variableNames": [
											{
												"name": "value0",
												"nodeType": "YulIdentifier",
												"src": "22144:6:10"
											}
										]
									},
									{
										"nodeType": "YulAssignment",
										"src": "22179:35:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "22199:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "22210:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "22195:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "22195:18:10"
												}
											],
											"functionName": {
												"name": "mload",
												"nodeType": "YulIdentifier",
												"src": "22189:5:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22189:25:10"
										},
										"variableNames": [
											{
												"name": "value1",
												"nodeType": "YulIdentifier",
												"src": "22179:6:10"
											}
										]
									}
								]
							},
							"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "22031:9:10",
									"type": ""
								},
								{
									"name": "dataEnd",
									"nodeType": "YulTypedName",
									"src": "22042:7:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "22054:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "22062:6:10",
									"type": ""
								}
							],
							"src": "21975:245:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "22399:241:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "22416:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "22427:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "22409:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22409:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "22409:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "22450:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "22461:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "22446:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "22446:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "22466:2:10",
													"type": "",
													"value": "51"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "22439:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22439:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "22439:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "22489:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "22500:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "22485:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "22485:18:10"
												},
												{
													"hexValue": "4c49515549444154455f434f4d5054524f4c4c45525f43414c43554c4154455f",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "22505:34:10",
													"type": "",
													"value": "LIQUIDATE_COMPTROLLER_CALCULATE_"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "22478:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22478:62:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "22478:62:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "22560:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "22571:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "22556:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "22556:18:10"
												},
												{
													"hexValue": "414d4f554e545f5345495a455f4641494c4544",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "22576:21:10",
													"type": "",
													"value": "AMOUNT_SEIZE_FAILED"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "22549:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22549:49:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "22549:49:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "22607:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "22619:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "22630:3:10",
													"type": "",
													"value": "128"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "22615:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22615:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "22607:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_b1c7e90880e9fbdf9aa93d626a842fbb127521a1492c295dbd98c98157e1e4f7__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "22376:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "22390:4:10",
									"type": ""
								}
							],
							"src": "22225:415:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "22819:174:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "22836:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "22847:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "22829:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22829:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "22829:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "22870:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "22881:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "22866:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "22866:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "22886:2:10",
													"type": "",
													"value": "24"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "22859:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22859:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "22859:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "22909:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "22920:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "22905:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "22905:18:10"
												},
												{
													"hexValue": "4c49515549444154455f5345495a455f544f4f5f4d554348",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "22925:26:10",
													"type": "",
													"value": "LIQUIDATE_SEIZE_TOO_MUCH"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "22898:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22898:54:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "22898:54:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "22961:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "22973:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "22984:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "22969:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "22969:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "22961:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_bffc2aa76a1b975ca5ba1defccc66ee3d6e80e3f510ac216baa6baef4008863e__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "22796:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "22810:4:10",
									"type": ""
								}
							],
							"src": "22645:348:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "23172:170:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "23189:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "23200:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "23182:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23182:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "23182:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "23223:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "23234:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "23219:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23219:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "23239:2:10",
													"type": "",
													"value": "20"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "23212:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23212:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "23212:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "23262:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "23273:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "23258:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23258:18:10"
												},
												{
													"hexValue": "746f6b656e207365697a757265206661696c6564",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "23278:22:10",
													"type": "",
													"value": "token seizure failed"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "23251:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23251:50:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "23251:50:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "23310:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "23322:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "23333:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "23318:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23318:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "23310:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_ef895053050823f299d1eac7edac9fbaf6b5ee335d1b858874856cee7182bcda__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "23149:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "23163:4:10",
									"type": ""
								}
							],
							"src": "22998:344:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "23560:315:10",
								"statements": [
									{
										"nodeType": "YulAssignment",
										"src": "23570:27:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "23582:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "23593:3:10",
													"type": "",
													"value": "160"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "23578:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23578:19:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "23570:4:10"
											}
										]
									},
									{
										"nodeType": "YulVariableDeclaration",
										"src": "23606:29:10",
										"value": {
											"arguments": [
												{
													"arguments": [
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "23624:3:10",
															"type": "",
															"value": "160"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "23629:1:10",
															"type": "",
															"value": "1"
														}
													],
													"functionName": {
														"name": "shl",
														"nodeType": "YulIdentifier",
														"src": "23620:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23620:11:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "23633:1:10",
													"type": "",
													"value": "1"
												}
											],
											"functionName": {
												"name": "sub",
												"nodeType": "YulIdentifier",
												"src": "23616:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23616:19:10"
										},
										"variables": [
											{
												"name": "_1",
												"nodeType": "YulTypedName",
												"src": "23610:2:10",
												"type": ""
											}
										]
									},
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "23651:9:10"
												},
												{
													"arguments": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "23666:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "23674:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "23662:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23662:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "23644:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23644:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "23644:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "23698:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "23709:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "23694:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23694:18:10"
												},
												{
													"arguments": [
														{
															"name": "value1",
															"nodeType": "YulIdentifier",
															"src": "23718:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "23726:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "23714:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23714:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "23687:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23687:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "23687:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "23750:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "23761:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "23746:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23746:18:10"
												},
												{
													"name": "value2",
													"nodeType": "YulIdentifier",
													"src": "23766:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "23739:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23739:34:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "23739:34:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "23793:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "23804:2:10",
															"type": "",
															"value": "96"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "23789:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23789:18:10"
												},
												{
													"arguments": [
														{
															"name": "value3",
															"nodeType": "YulIdentifier",
															"src": "23813:6:10"
														},
														{
															"name": "_1",
															"nodeType": "YulIdentifier",
															"src": "23821:2:10"
														}
													],
													"functionName": {
														"name": "and",
														"nodeType": "YulIdentifier",
														"src": "23809:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23809:15:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "23782:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23782:43:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "23782:43:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "23845:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "23856:3:10",
															"type": "",
															"value": "128"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "23841:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "23841:19:10"
												},
												{
													"name": "value4",
													"nodeType": "YulIdentifier",
													"src": "23862:6:10"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "23834:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "23834:35:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "23834:35:10"
									}
								]
							},
							"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "23497:9:10",
									"type": ""
								},
								{
									"name": "value4",
									"nodeType": "YulTypedName",
									"src": "23508:6:10",
									"type": ""
								},
								{
									"name": "value3",
									"nodeType": "YulTypedName",
									"src": "23516:6:10",
									"type": ""
								},
								{
									"name": "value2",
									"nodeType": "YulTypedName",
									"src": "23524:6:10",
									"type": ""
								},
								{
									"name": "value1",
									"nodeType": "YulTypedName",
									"src": "23532:6:10",
									"type": ""
								},
								{
									"name": "value0",
									"nodeType": "YulTypedName",
									"src": "23540:6:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "23551:4:10",
									"type": ""
								}
							],
							"src": "23347:528:10"
						},
						{
							"body": {
								"nodeType": "YulBlock",
								"src": "24054:174:10",
								"statements": [
									{
										"expression": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "24071:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "24082:2:10",
													"type": "",
													"value": "32"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "24064:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "24064:21:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "24064:21:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "24105:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "24116:2:10",
															"type": "",
															"value": "32"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "24101:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "24101:18:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "24121:2:10",
													"type": "",
													"value": "24"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "24094:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "24094:30:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "24094:30:10"
									},
									{
										"expression": {
											"arguments": [
												{
													"arguments": [
														{
															"name": "headStart",
															"nodeType": "YulIdentifier",
															"src": "24144:9:10"
														},
														{
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "24155:2:10",
															"type": "",
															"value": "64"
														}
													],
													"functionName": {
														"name": "add",
														"nodeType": "YulIdentifier",
														"src": "24140:3:10"
													},
													"nodeType": "YulFunctionCall",
													"src": "24140:18:10"
												},
												{
													"hexValue": "544f4b454e5f5452414e534645525f494e5f4641494c4544",
													"kind": "string",
													"nodeType": "YulLiteral",
													"src": "24160:26:10",
													"type": "",
													"value": "TOKEN_TRANSFER_IN_FAILED"
												}
											],
											"functionName": {
												"name": "mstore",
												"nodeType": "YulIdentifier",
												"src": "24133:6:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "24133:54:10"
										},
										"nodeType": "YulExpressionStatement",
										"src": "24133:54:10"
									},
									{
										"nodeType": "YulAssignment",
										"src": "24196:26:10",
										"value": {
											"arguments": [
												{
													"name": "headStart",
													"nodeType": "YulIdentifier",
													"src": "24208:9:10"
												},
												{
													"kind": "number",
													"nodeType": "YulLiteral",
													"src": "24219:2:10",
													"type": "",
													"value": "96"
												}
											],
											"functionName": {
												"name": "add",
												"nodeType": "YulIdentifier",
												"src": "24204:3:10"
											},
											"nodeType": "YulFunctionCall",
											"src": "24204:18:10"
										},
										"variableNames": [
											{
												"name": "tail",
												"nodeType": "YulIdentifier",
												"src": "24196:4:10"
											}
										]
									}
								]
							},
							"name": "abi_encode_tuple_t_stringliteral_0da3873a20fdc47c8625307ac91c3576e4c3c6ba3dbaf813e465d9b0cabb0ee0__to_t_string_memory_ptr__fromStack_reversed",
							"nodeType": "YulFunctionDefinition",
							"parameters": [
								{
									"name": "headStart",
									"nodeType": "YulTypedName",
									"src": "24031:9:10",
									"type": ""
								}
							],
							"returnVariables": [
								{
									"name": "tail",
									"nodeType": "YulTypedName",
									"src": "24045:4:10",
									"type": ""
								}
							],
							"src": "23880:348:10"
						}
					]
				},
				"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_contract$_ComptrollerInterface_$3351t_contract$_InterestRateModel_$4397t_uint256t_string_memory_ptrt_string_memory_ptrt_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 160))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value5 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value6 := abi_decode_uint8(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_contract$_EIP20NonStandardInterface_$3514(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_contract$_ComptrollerInterface_$3351(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ComptrollerInterface_$3351__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_ComptrollerInterface_$3351t_contract$_InterestRateModel_$4397t_uint256t_string_memory_ptrt_string_memory_ptrt_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 128))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value4 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value5 := abi_decode_uint8(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_contract$_InterestRateModel_$4397(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_InterestRateModel_$4397__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_contract$_CTokenInterface_$3030(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_987a3f65bf6c5144d945a7d9587fa166ee3a901eb2b594a0815c3c20bf841a5e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"re-entered\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_135504d16831a63c655007ab9521409902ae5ee7f0d4d3155446ade8199c0062__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"CErc20::sweepToken: only admin c\")\n        mstore(add(headStart, 96), \"an sweep tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1cd5edf3f8c5c849e30639fd2b4477757d2fdcadadbdd58a80bbf21b6f613b41__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"CErc20::sweepToken: can not swee\")\n        mstore(add(headStart, 96), \"p underlying token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_73c0b9b9fc59551809f9e3f686bb994cac13db80a83fd9ccdfe6d53da80fe637__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"marker method returned false\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_contract$_ComptrollerInterface_$3351_t_contract$_ComptrollerInterface_$3351__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_49c9d7834318fbd23fb0b05062dcbe05993694e29e663da07483dd74b33e77ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"only the admin may set the comp-\")\n        mstore(add(headStart, 96), \"like delegate\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d998648c97be54311575d3a2c41b4b9b1a42ee050ec72752cd3e44128c6d6c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"only admin may initialize the ma\")\n        mstore(add(headStart, 96), \"rket\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1bebca39b478e42a6b88dcff87467d0e08b422ebc72c3d074bd236265624e814__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"market may only be initialized o\")\n        mstore(add(headStart, 96), \"nce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_427426a02e699ec0d6d6d22f3254c7e686696e18d2de7af9416d6b5cc786ff6c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"initial exchange rate must be gr\")\n        mstore(add(headStart, 96), \"eater than zero.\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b20ca7ca5fb4cb4511b58e112cf8b8663096873b0029b9b6aeb6bb29723b6450__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"setting comptroller failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_59076c676f223cb9d4de55d807fe5a438ed31bccfb7626e1e7791e8e0eec7464__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"setting interest rate model fail\")\n        mstore(add(headStart, 96), \"ed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_9ab90068dc5fe9f7def6aab4ae887ed8eff65c4b83c1b9ba6beb99101f1ae8ea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"borrow rate is absurdly high\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_payable__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_contract$_InterestRateModel_$4397_t_contract$_InterestRateModel_$4397__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_240ffd6c262c542faf953100ec47f7b3f7ed65e23c06d0ff5d14cbe032268909__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"TOKEN_TRANSFER_OUT_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e7cef2e7b515a83b650bc43dbe7230ede3601779d8be25fbf237261dccd3d9f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"one of redeemTokensIn or redeemA\")\n        mstore(add(headStart, 96), \"mountIn must be zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_payable_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_b1c7e90880e9fbdf9aa93d626a842fbb127521a1492c295dbd98c98157e1e4f7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"LIQUIDATE_COMPTROLLER_CALCULATE_\")\n        mstore(add(headStart, 96), \"AMOUNT_SEIZE_FAILED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bffc2aa76a1b975ca5ba1defccc66ee3d6e80e3f510ac216baa6baef4008863e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"LIQUIDATE_SEIZE_TOO_MUCH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ef895053050823f299d1eac7edac9fbaf6b5ee335d1b858874856cee7182bcda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"token seizure failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_address_t_uint256__to_t_address_t_address_t_uint256_t_address_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_stringliteral_0da3873a20fdc47c8625307ac91c3576e4c3c6ba3dbaf813e465d9b0cabb0ee0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"TOKEN_TRANSFER_IN_FAILED\")\n        tail := add(headStart, 96)\n    }\n}",
				"id": 10,
				"language": "Yul",
				"name": "#utility.yul"
			}
		],
		"immutableReferences": {},
		"linkReferences": {},
		"object": "608060405234801561001057600080fd5b506004361061030c5760003560e01c80637f1e06be1161019d578063bd6d894d116100e9578063f2b3abbd116100a2578063f851a4401161007c578063f851a440146106a8578063f8f9da28146106c0578063fca7820b146106c8578063fe9c44ae146106db57600080fd5b8063f2b3abbd1461066f578063f3fdb15a14610682578063f5e3c4621461069557600080fd5b8063bd6d894d146105cd578063c37f68e2146105d5578063c5ebeaec14610608578063db006a751461061b578063dd62ed3e1461062e578063e9c714f21461066757600080fd5b8063a0712d6811610156578063aa5af0fd11610130578063aa5af0fd14610596578063ae9d70b01461059f578063b2a02ff1146105a7578063b71d1a0c146105ba57600080fd5b8063a0712d6814610568578063a6afed951461057b578063a9059cbb1461058357600080fd5b80637f1e06be1461050b578063852a12e31461051e5780638f840ddd1461053157806395d89b411461053a57806395dd91931461054257806399d8c1b41461055557600080fd5b80633af9e6691161025c578063601a0bf1116102155780636c540baf116101ef5780636c540baf146104be5780636f307dc3146104c757806370a08231146104da57806373acee981461050357600080fd5b8063601a0bf1146104955780636752e702146104a857806369ab3250146104b657600080fd5b80633af9e669146104385780633b1d21a21461044b5780633e941010146104535780634576b5db1461046657806347bd3718146104795780635fe3b5671461048257600080fd5b8063182df0f5116102c957806323b872dd116102a357806323b872dd146103c85780632608f818146103db57806326782247146103ee578063313ce5671461041957600080fd5b8063182df0f5146103985780631a31d465146103a05780631be19560146103b557600080fd5b806306fdde0314610311578063095ea7b31461032f5780630e75270214610352578063173b99041461037357806317bfdfbc1461037c57806318160ddd1461038f575b600080fd5b6103196106e3565b60405161032691906134b5565b60405180910390f35b61034261033d366004613522565b610771565b6040519015158152602001610326565b61036561036036600461354e565b6107df565b604051908152602001610326565b61036560085481565b61036561038a366004613567565b6107f2565b610365600d5481565b61036561084e565b6103b36103ae36600461363d565b61085d565b005b6103b36103c3366004613567565b6108f2565b6103426103d63660046136f3565b610abe565b6103656103e9366004613522565b610b0e565b600454610401906001600160a01b031681565b6040516001600160a01b039091168152602001610326565b6003546104269060ff1681565b60405160ff9091168152602001610326565b610365610446366004613567565b610b23565b610365610b69565b61036561046136600461354e565b610b73565b610365610474366004613567565b610b84565b610365600b5481565b600554610401906001600160a01b031681565b6103656104a336600461354e565b610cd6565b610365666379da05b6000081565b610365600081565b61036560095481565b601154610401906001600160a01b031681565b6103656104e8366004613567565b6001600160a01b03166000908152600e602052604090205490565b610365610d15565b6103b3610519366004613567565b610d5f565b61036561052c36600461354e565b610e36565b610365600c5481565b610319610e41565b610365610550366004613567565b610e4e565b6103b3610563366004613734565b610e59565b61036561057636600461354e565b6110b4565b6103656110bf565b610342610591366004613522565b6112ac565b610365600a5481565b6103656112fb565b6103656105b53660046136f3565b611393565b6103656105c8366004613567565b6113e2565b61036561146f565b6105e86105e3366004613567565b6114bf565b604080519485526020850193909352918301526060820152608001610326565b61036561061636600461354e565b611500565b61036561062936600461354e565b61150b565b61036561063c3660046137d6565b6001600160a01b039182166000908152600f6020908152604080832093909416825291909152205490565b610365611516565b61036561067d366004613567565b61161d565b600654610401906001600160a01b031681565b6103656106a336600461380f565b611631565b6003546104019061010090046001600160a01b031681565b610365611648565b6103656106d636600461354e565b61169b565b610342600181565b600180546106f090613851565b80601f016020809104026020016040519081016040528092919081815260200182805461071c90613851565b80156107695780601f1061073e57610100808354040283529160200191610769565b820191906000526020600020905b81548152906001019060200180831161074c57829003601f168201915b505050505081565b336000818152600f602090815260408083206001600160a01b03871680855292528083208590555191929182907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906107cd9087815260200190565b60405180910390a35060019392505050565b60006107ea826116da565b506000919050565b6000805460ff1661081e5760405162461bcd60e51b81526004016108159061388c565b60405180910390fd5b6000805460ff191690556108306110bf565b5061083a82610e4e565b90506000805460ff19166001179055919050565b600061085861172b565b905090565b61086b868686868686610e59565b601180546001600160a01b0319166001600160a01b038916908117909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e891906138b0565b5050505050505050565b60035461010090046001600160a01b031633146109695760405162461bcd60e51b815260206004820152602f60248201527f4345726332303a3a7377656570546f6b656e3a206f6e6c792061646d696e206360448201526e616e20737765657020746f6b656e7360881b6064820152608401610815565b6011546001600160a01b03828116911614156109e25760405162461bcd60e51b815260206004820152603260248201527f4345726332303a3a7377656570546f6b656e3a2063616e206e6f74207377656560448201527138103ab73232b9363cb4b733903a37b5b2b760711b6064820152608401610815565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610a29573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a4d91906138b0565b60035460405163a9059cbb60e01b81526001600160a01b03610100909204821660048201526024810183905291925083169063a9059cbb90604401600060405180830381600087803b158015610aa257600080fd5b505af1158015610ab6573d6000803e3d6000fd5b505050505050565b6000805460ff16610ae15760405162461bcd60e51b81526004016108159061388c565b6000805460ff19168155610af733868686611795565b1490506000805460ff191660011790559392505050565b6000610b1a83836119c3565b50600092915050565b6000806040518060200160405280610b3961146f565b90526001600160a01b0384166000908152600e6020526040902054909150610b62908290611a15565b9392505050565b6000610858611a35565b6000610b7e82611aaa565b92915050565b60035460009061010090046001600160a01b03163314610bb75760405163d219dc1f60e01b815260040160405180910390fd5b60055460408051623f1ee960e11b815290516001600160a01b0392831692851691627e3dd29160048083019260209291908290030181865afa158015610c01573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2591906138c9565b610c715760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c7365000000006044820152606401610815565b600580546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527f7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d91015b60405180910390a150600092915050565b6000805460ff16610cf95760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055610d0b6110bf565b5061083a82611b01565b6000805460ff16610d385760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055610d4a6110bf565b5050600b546000805460ff1916600117905590565b60035461010090046001600160a01b03163314610dd45760405162461bcd60e51b815260206004820152602d60248201527f6f6e6c79207468652061646d696e206d6179207365742074686520636f6d702d60448201526c6c696b652064656c656761746560981b6064820152608401610815565b6011546040516317066a5760e21b81526001600160a01b03838116600483015290911690635c19a95c90602401600060405180830381600087803b158015610e1b57600080fd5b505af1158015610e2f573d6000803e3d6000fd5b5050505050565b60006107ea82611c1c565b600280546106f090613851565b6000610b7e82611c6d565b60035461010090046001600160a01b03163314610ec45760405162461bcd60e51b8152602060048201526024808201527f6f6e6c792061646d696e206d617920696e697469616c697a6520746865206d616044820152631c9ad95d60e21b6064820152608401610815565b600954158015610ed45750600a54155b610f2c5760405162461bcd60e51b815260206004820152602360248201527f6d61726b6574206d6179206f6e6c7920626520696e697469616c697a6564206f6044820152626e636560e81b6064820152608401610815565b600784905583610f975760405162461bcd60e51b815260206004820152603060248201527f696e697469616c2065786368616e67652072617465206d75737420626520677260448201526f32b0ba32b9103a3430b7103d32b9379760811b6064820152608401610815565b6000610fa287610b84565b90508015610ff25760405162461bcd60e51b815260206004820152601a60248201527f73657474696e6720636f6d7074726f6c6c6572206661696c65640000000000006044820152606401610815565b42600955670de0b6b3a7640000600a5561100b86611cb7565b905080156110665760405162461bcd60e51b815260206004820152602260248201527f73657474696e6720696e7465726573742072617465206d6f64656c206661696c604482015261195960f21b6064820152608401610815565b8351611079906001906020870190613425565b50825161108d906002906020860190613425565b50506003805460ff90921660ff199283161790556000805490911660011790555050505050565b60006107ea82611e2c565b6009546000904290808214156110d85760009250505090565b60006110e2611a35565b600b54600c54600a546006546040516315f2405360e01b81526004810186905260248101859052604481018490529495509293919290916000916001600160a01b0316906315f2405390606401602060405180830381865afa15801561114c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117091906138b0565b9050645d21dba0008111156111c75760405162461bcd60e51b815260206004820152601c60248201527f626f72726f772072617465206973206162737572646c792068696768000000006044820152606401610815565b60006111d38789613901565b905060006111ef60405180602001604052808581525083611e6b565b905060006111fd8288611a15565b9050600061120b8883613918565b9050600061122a6040518060200160405280600854815250848a611e9c565b9050600061123985898a611e9c565b60098e9055600a819055600b849055600c839055604080518d815260208101879052908101829052606081018590529091507f4dec04e750ca11537cabcd8a9eab06494de08da3735bc8871cd41250e190bc049060800160405180910390a160009d505050505050505050505050505090565b6000805460ff166112cf5760405162461bcd60e51b81526004016108159061388c565b6000805460ff191681556112e533808686611795565b1490506000805460ff1916600117905592915050565b6006546000906001600160a01b031663b8168816611317611a35565b600b54600c546008546040516001600160e01b031960e087901b16815260048101949094526024840192909252604483015260648201526084015b602060405180830381865afa15801561136f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085891906138b0565b6000805460ff166113b65760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556113cc33858585611ebd565b50600080805460ff191660011790559392505050565b60035460009061010090046001600160a01b0316331461141557604051635cb56c2b60e01b815260040160405180910390fd5b600480546001600160a01b038481166001600160a01b031983168117909355604080519190921680825260208201939093527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a99101610cc5565b6000805460ff166114925760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556114a46110bf565b506114ad61084e565b90506000805460ff1916600117905590565b6001600160a01b0381166000908152600e602052604081205481908190819081906114e987611c6d565b6114f161172b565b93509350935093509193509193565b60006107ea82612136565b60006107ea82612175565b6004546000906001600160a01b031633141580611531575033155b1561154f57604051631ba24f2960e21b815260040160405180910390fd5b60038054600480546001600160a01b03808216610100818102610100600160a81b0319871617968790556001600160a01b031990931690935560408051948390048216808652929095041660208401529290917ff9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc910160405180910390a1600454604080516001600160a01b03808516825290921660208301527fca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9910160405180910390a160009250505090565b60006116276110bf565b50610b7e82611cb7565b600061163e8484846121b6565b5060009392505050565b6006546000906001600160a01b03166315f24053611664611a35565b600b54600c546040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401611352565b6000805460ff166116be5760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556116d06110bf565b5061083a82612294565b60005460ff166116fc5760405162461bcd60e51b81526004016108159061388c565b6000805460ff1916905561170e6110bf565b5061171a333383612350565b50506000805460ff19166001179055565b600d546000908061173e57505060075490565b6000611748611a35565b90506000600c54600b548361175d9190613918565b6117679190613901565b905060008361177e670de0b6b3a764000084613930565b611788919061394f565b95945050505050565b5090565b6005546040516317b9b84b60e31b81523060048201526001600160a01b038581166024830152848116604483015260648201849052600092839291169063bdcdc258906084016020604051808303816000875af11580156117fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061181e91906138b0565b905080156118425760405163089d427760e11b815260048101829052602401610815565b836001600160a01b0316856001600160a01b0316141561187557604051638cd22d1960e01b815260040160405180910390fd5b6000856001600160a01b0316876001600160a01b0316141561189a57506000196118c2565b506001600160a01b038086166000908152600f60209081526040808320938a16835292905220545b60006118ce8583613901565b6001600160a01b0388166000908152600e6020526040812054919250906118f6908790613901565b6001600160a01b0388166000908152600e60205260408120549192509061191e908890613918565b6001600160a01b03808b166000908152600e6020526040808220869055918b1681522081905590506000198414611978576001600160a01b03808a166000908152600f60209081526040808320938e168352929052208390555b876001600160a01b0316896001600160a01b03166000805160206139db833981519152896040516119ab91815260200190565b60405180910390a35060009998505050505050505050565b60005460ff166119e55760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556119f76110bf565b50611a03338383612350565b50506000805460ff1916600117905550565b600080611a228484611e6b565b9050611a2d816124f9565b949350505050565b6011546040516370a0823160e01b81523060048201526000916001600160a01b03169081906370a0823190602401602060405180830381865afa158015611a80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa491906138b0565b91505090565b6000805460ff16611acd5760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055611adf6110bf565b50611ae982612511565b5050600090506000805460ff19166001179055919050565b600354600090819061010090046001600160a01b03163314611b3657604051630f7e5e6d60e41b815260040160405180910390fd5b4260095414611b5857604051630dff50cb60e41b815260040160405180910390fd5b82611b61611a35565b1015611b8057604051633345e99960e01b815260040160405180910390fd5b600c54831115611ba3576040516378d2980560e11b815260040160405180910390fd5b82600c54611bb19190613901565b600c819055600354909150611bd49061010090046001600160a01b0316846125a5565b7f3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e600360019054906101000a90046001600160a01b03168483604051610cc593929190613971565b60005460ff16611c3e5760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055611c506110bf565b50611c5d3360008361268f565b506000805460ff19166001179055565b6001600160a01b03811660009081526010602052604081208054611c945750600092915050565b600a548154600091611ca591613930565b9050816001015481611a2d919061394f565b600354600090819061010090046001600160a01b03163314611cec5760405163407fded560e01b815260040160405180910390fd5b4260095414611d0e57604051630be2a5cb60e11b815260040160405180910390fd5b600660009054906101000a90046001600160a01b03169050826001600160a01b0316632191f92a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d8891906138c9565b611dd45760405162461bcd60e51b815260206004820152601c60248201527f6d61726b6572206d6574686f642072657475726e65642066616c7365000000006044820152606401610815565b600680546001600160a01b0319166001600160a01b0385811691821790925560408051928416835260208301919091527fedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f9269101610cc5565b60005460ff16611e4e5760405162461bcd60e51b81526004016108159061388c565b6000805460ff19169055611e606110bf565b50611c5d338261296c565b6040805160208101909152600081526040518060200160405280611e93856000015185612b95565b90529392505050565b600080611ea98585611e6b565b9050611788611eb7826124f9565b84612ba1565b60055460405163d02f735160e01b81523060048201526001600160a01b0386811660248301528581166044830152848116606483015260848201849052600092169063d02f73519060a4016020604051808303816000875af1158015611f27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f4b91906138b0565b90508015611f6f576040516363e00e3360e11b815260048101829052602401610815565b836001600160a01b0316836001600160a01b03161415611fa257604051633a94626760e11b815260040160405180910390fd5b6000611fc3836040518060200160405280666379da05b60000815250612bad565b90506000611fd18285613901565b905060006040518060200160405280611fe861172b565b905290506000611ff88285611a15565b9050600081600c5461200a9190613918565b600c819055600d54909150612020908690613901565b600d556001600160a01b0388166000908152600e6020526040902054612047908890613901565b6001600160a01b03808a166000908152600e602052604080822093909355908b1681522054612077908590613918565b6001600160a01b03808b166000818152600e602052604090819020939093559151908a16906000805160206139db833981519152906120b99088815260200190565b60405180910390a360405185815230906001600160a01b038a16906000805160206139db8339815191529060200160405180910390a37fa91e67c5ea634cd43a12c5a482724b03de01e85ca68702a53d0c2f45cb7c1dc530838360405161212293929190613971565b60405180910390a150505050505050505050565b60005460ff166121585760405162461bcd60e51b81526004016108159061388c565b6000805460ff1916905561216a6110bf565b50611c5d3382612bd0565b60005460ff166121975760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556121a96110bf565b50611c5d3382600061268f565b60005460ff166121d85760405162461bcd60e51b81526004016108159061388c565b6000805460ff191690556121ea6110bf565b506000816001600160a01b031663a6afed956040518163ffffffff1660e01b81526004016020604051808303816000875af115801561222d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061225191906138b0565b9050801561227557604051633eea49b760e11b815260048101829052602401610815565b61228133858585612d6f565b50506000805460ff191660011790555050565b60035460009061010090046001600160a01b031633146122c757604051631205b57b60e11b815260040160405180910390fd5b42600954146122e957604051637dfca6b760e11b815260040160405180910390fd5b670de0b6b3a76400008211156123125760405163717220f360e11b815260040160405180910390fd5b600880549083905560408051828152602081018590527faaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f8214609101610cc5565b600554604051631200453160e11b81523060048201526001600160a01b03858116602483015284811660448301526064820184905260009283929116906324008a62906084016020604051808303816000875af11580156123b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d991906138b0565b905080156123fd57604051638c81362d60e01b815260048101829052602401610815565b426009541461241f5760405163c9021e2f60e01b815260040160405180910390fd5b600061242a85611c6d565b90506000600019851461243d578461243f565b815b9050600061244d8883613229565b9050600061245b8285613901565b9050600082600b5461246d9190613901565b6001600160a01b038a8116600081815260106020908152604091829020878155600a54600190910155600b8590558151938f168452830191909152810185905260608101849052608081018290529091507f1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a19060a00160405180910390a1509098975050505050505050565b8051600090610b7e90670de0b6b3a76400009061394f565b6000808080426009541461253b576040516338acf79960e01b815260048101829052602401610815565b6125453386613229565b905080600c546125559190613918565b915081600c819055507fa91e67c5ea634cd43a12c5a482724b03de01e85ca68702a53d0c2f45cb7c1dc533828460405161259193929190613971565b60405180910390a160009590945092505050565b60115460405163a9059cbb60e01b81526001600160a01b0384811660048301526024820184905290911690819063a9059cbb90604401600060405180830381600087803b1580156125f557600080fd5b505af1158015612609573d6000803e3d6000fd5b5050505060003d60008114612625576020811461262f57600080fd5b600019915061263b565b60206000803e60005191505b50806126895760405162461bcd60e51b815260206004820152601960248201527f544f4b454e5f5452414e534645525f4f55545f4641494c4544000000000000006044820152606401610815565b50505050565b81158061269a575080155b6127035760405162461bcd60e51b815260206004820152603460248201527f6f6e65206f662072656465656d546f6b656e73496e206f722072656465656d416044820152736d6f756e74496e206d757374206265207a65726f60601b6064820152608401610815565b6000604051806020016040528061271861172b565b905290506000808415612739578491506127328386611a15565b9050612749565b6127438484613400565b91508390505b60055460405163eabe7d9160e01b81526000916001600160a01b03169063eabe7d919061277e9030908b908890600401613992565b6020604051808303816000875af115801561279d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127c191906138b0565b905080156127e55760405163480f424760e01b815260048101829052602401610815565b4260095414612807576040516397b5cfcd60e01b815260040160405180910390fd5b81612810611a35565b101561282f576040516391240a1b60e01b815260040160405180910390fd5b82600d5461283d9190613901565b600d556001600160a01b0387166000908152600e6020526040902054612864908490613901565b6001600160a01b0388166000908152600e602052604090205561288787836125a5565b60405183815230906001600160a01b038916906000805160206139db8339815191529060200160405180910390a37fe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a9298783856040516128e893929190613971565b60405180910390a16005546040516351dff98960e01b81523060048201526001600160a01b0389811660248301526044820185905260648201869052909116906351dff98990608401600060405180830381600087803b15801561294b57600080fd5b505af115801561295f573d6000803e3d6000fd5b5050505050505050505050565b600554604051634ef4c3e160e01b81526000916001600160a01b031690634ef4c3e1906129a190309087908790600401613992565b6020604051808303816000875af11580156129c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129e491906138b0565b90508015612a08576040516349abd4fd60e01b815260048101829052602401610815565b4260095414612a2a576040516338d8859760e01b815260040160405180910390fd5b60006040518060200160405280612a3f61172b565b905290506000612a4f8585613229565b90506000612a5d8284613400565b905080600d54612a6d9190613918565b600d556001600160a01b0386166000908152600e6020526040902054612a94908290613918565b6001600160a01b0387166000908152600e60205260409081902091909155517f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f90612ae490889085908590613971565b60405180910390a16040518181526001600160a01b0387169030906000805160206139db8339815191529060200160405180910390a36005546040516341c728b960e01b81523060048201526001600160a01b0388811660248301526044820185905260648201849052909116906341c728b990608401600060405180830381600087803b158015612b7557600080fd5b505af1158015612b89573d6000803e3d6000fd5b50505050505050505050565b6000610b628284613930565b6000610b628284613918565b6000670de0b6b3a7640000612bc6848460000151612b95565b610b62919061394f565b60055460405163368f515360e21b81526000916001600160a01b03169063da3d454c90612c0590309087908790600401613992565b6020604051808303816000875af1158015612c24573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c4891906138b0565b90508015612c6c5760405163918db40f60e01b815260048101829052602401610815565b4260095414612c8e57604051630e8d8c6160e21b815260040160405180910390fd5b81612c97611a35565b1015612cb6576040516348c2588160e01b815260040160405180910390fd5b6000612cc184611c6d565b90506000612ccf8483613918565b9050600084600b54612ce19190613918565b6001600160a01b0387166000908152601060205260409020838155600a54600190910155600b8190559050612d1686866125a5565b604080516001600160a01b038816815260208101879052908101839052606081018290527f13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab809060800160405180910390a1505050505050565b600554604051632fe3f38f60e11b81523060048201526001600160a01b03838116602483015286811660448301528581166064830152608482018590526000921690635fc7e71e9060a4016020604051808303816000875af1158015612dd9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612dfd91906138b0565b90508015612e2157604051630a14d17960e11b815260048101829052602401610815565b4260095414612e43576040516380965b1b60e01b815260040160405180910390fd5b42826001600160a01b0316636c540baf6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ea691906138b0565b14612ec457604051631046f38d60e31b815260040160405180910390fd5b846001600160a01b0316846001600160a01b03161415612ef757604051631bd1a62160e21b815260040160405180910390fd5b82612f155760405163d29da7ef60e01b815260040160405180910390fd5b600019831415612f3857604051635982c5bb60e11b815260040160405180910390fd5b6000612f45868686612350565b60055460405163c488847b60e01b815291925060009182916001600160a01b03169063c488847b90612f7f90309089908890600401613992565b6040805180830381865afa158015612f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fbf91906139b6565b915091506000821461302f5760405162461bcd60e51b815260206004820152603360248201527f4c49515549444154455f434f4d5054524f4c4c45525f43414c43554c4154455f604482015272105353d5539517d4d152569157d19052531151606a1b6064820152608401610815565b6040516370a0823160e01b81526001600160a01b0388811660048301528291908716906370a0823190602401602060405180830381865afa158015613078573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061309c91906138b0565b10156130ea5760405162461bcd60e51b815260206004820152601860248201527f4c49515549444154455f5345495a455f544f4f5f4d55434800000000000000006044820152606401610815565b6001600160a01b03851630141561310c5761310730898984611ebd565b6131c6565b60405163b2a02ff160e01b81526000906001600160a01b0387169063b2a02ff19061313f908c908c908790600401613992565b6020604051808303816000875af115801561315e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061318291906138b0565b146131c65760405162461bcd60e51b81526020600482015260146024820152731d1bdad95b881cd95a5e9d5c994819985a5b195960621b6044820152606401610815565b604080516001600160a01b038a811682528981166020830152818301869052871660608201526080810183905290517f298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb529181900360a00190a15050505050505050565b6011546040516370a0823160e01b81523060048201526000916001600160a01b0316908190839082906370a0823190602401602060405180830381865afa158015613278573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061329c91906138b0565b6040516323b872dd60e01b81529091506001600160a01b038316906323b872dd906132cf90899030908a90600401613992565b600060405180830381600087803b1580156132e957600080fd5b505af11580156132fd573d6000803e3d6000fd5b5050505060003d60008114613319576020811461332357600080fd5b600019915061332f565b60206000803e60005191505b508061337d5760405162461bcd60e51b815260206004820152601860248201527f544f4b454e5f5452414e534645525f494e5f4641494c454400000000000000006044820152606401610815565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa1580156133c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133e891906138b0565b90506133f48382613901565b98975050505050505050565b6000610b6261341784670de0b6b3a7640000612b95565b83516000610b62828461394f565b82805461343190613851565b90600052602060002090601f0160209004810192826134535760008555613499565b82601f1061346c57805160ff1916838001178555613499565b82800160010185558215613499579182015b8281111561349957825182559160200191906001019061347e565b506117919291505b8082111561179157600081556001016134a1565b600060208083528351808285015260005b818110156134e2578581018301518582016040015282016134c6565b818111156134f4576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b038116811461351f57600080fd5b50565b6000806040838503121561353557600080fd5b82356135408161350a565b946020939093013593505050565b60006020828403121561356057600080fd5b5035919050565b60006020828403121561357957600080fd5b8135610b628161350a565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126135ab57600080fd5b813567ffffffffffffffff808211156135c6576135c6613584565b604051601f8301601f19908116603f011681019082821181831017156135ee576135ee613584565b8160405283815286602085880101111561360757600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560ff8116811461363857600080fd5b919050565b600080600080600080600060e0888a03121561365857600080fd5b87356136638161350a565b965060208801356136738161350a565b955060408801356136838161350a565b945060608801359350608088013567ffffffffffffffff808211156136a757600080fd5b6136b38b838c0161359a565b945060a08a01359150808211156136c957600080fd5b506136d68a828b0161359a565b9250506136e560c08901613627565b905092959891949750929550565b60008060006060848603121561370857600080fd5b83356137138161350a565b925060208401356137238161350a565b929592945050506040919091013590565b60008060008060008060c0878903121561374d57600080fd5b86356137588161350a565b955060208701356137688161350a565b945060408701359350606087013567ffffffffffffffff8082111561378c57600080fd5b6137988a838b0161359a565b945060808901359150808211156137ae57600080fd5b506137bb89828a0161359a565b9250506137ca60a08801613627565b90509295509295509295565b600080604083850312156137e957600080fd5b82356137f48161350a565b915060208301356138048161350a565b809150509250929050565b60008060006060848603121561382457600080fd5b833561382f8161350a565b92506020840135915060408401356138468161350a565b809150509250925092565b600181811c9082168061386557607f821691505b6020821081141561388657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252600a90820152691c994b595b9d195c995960b21b604082015260600190565b6000602082840312156138c257600080fd5b5051919050565b6000602082840312156138db57600080fd5b81518015158114610b6257600080fd5b634e487b7160e01b600052601160045260246000fd5b600082821015613913576139136138eb565b500390565b6000821982111561392b5761392b6138eb565b500190565b600081600019048311821515161561394a5761394a6138eb565b500290565b60008261396c57634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039390931683526020830191909152604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600080604083850312156139c957600080fd5b50508051602090910151909290915056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220ce926571c28f011f5d216445c529432078afcdb1757e138c7b79980cad0557ec64736f6c634300080a0033",
		"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x30C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7F1E06BE GT PUSH2 0x19D JUMPI DUP1 PUSH4 0xBD6D894D GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0xF2B3ABBD GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF851A440 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x6A8 JUMPI DUP1 PUSH4 0xF8F9DA28 EQ PUSH2 0x6C0 JUMPI DUP1 PUSH4 0xFCA7820B EQ PUSH2 0x6C8 JUMPI DUP1 PUSH4 0xFE9C44AE EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xF2B3ABBD EQ PUSH2 0x66F JUMPI DUP1 PUSH4 0xF3FDB15A EQ PUSH2 0x682 JUMPI DUP1 PUSH4 0xF5E3C462 EQ PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD6D894D EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xC37F68E2 EQ PUSH2 0x5D5 JUMPI DUP1 PUSH4 0xC5EBEAEC EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0xDB006A75 EQ PUSH2 0x61B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0xE9C714F2 EQ PUSH2 0x667 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0712D68 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0xAA5AF0FD GT PUSH2 0x130 JUMPI DUP1 PUSH4 0xAA5AF0FD EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xAE9D70B0 EQ PUSH2 0x59F JUMPI DUP1 PUSH4 0xB2A02FF1 EQ PUSH2 0x5A7 JUMPI DUP1 PUSH4 0xB71D1A0C EQ PUSH2 0x5BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA0712D68 EQ PUSH2 0x568 JUMPI DUP1 PUSH4 0xA6AFED95 EQ PUSH2 0x57B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x583 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x7F1E06BE EQ PUSH2 0x50B JUMPI DUP1 PUSH4 0x852A12E3 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0x8F840DDD EQ PUSH2 0x531 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0x95DD9193 EQ PUSH2 0x542 JUMPI DUP1 PUSH4 0x99D8C1B4 EQ PUSH2 0x555 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AF9E669 GT PUSH2 0x25C JUMPI DUP1 PUSH4 0x601A0BF1 GT PUSH2 0x215 JUMPI DUP1 PUSH4 0x6C540BAF GT PUSH2 0x1EF JUMPI DUP1 PUSH4 0x6C540BAF EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0x6F307DC3 EQ PUSH2 0x4C7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0x73ACEE98 EQ PUSH2 0x503 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x601A0BF1 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0x6752E702 EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0x69AB3250 EQ PUSH2 0x4B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3AF9E669 EQ PUSH2 0x438 JUMPI DUP1 PUSH4 0x3B1D21A2 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x3E941010 EQ PUSH2 0x453 JUMPI DUP1 PUSH4 0x4576B5DB EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x47BD3718 EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0x5FE3B567 EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x182DF0F5 GT PUSH2 0x2C9 JUMPI DUP1 PUSH4 0x23B872DD GT PUSH2 0x2A3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x2608F818 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x26782247 EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x182DF0F5 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x1A31D465 EQ PUSH2 0x3A0 JUMPI DUP1 PUSH4 0x1BE19560 EQ PUSH2 0x3B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xE752702 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x173B9904 EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x17BFDFBC EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x38F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x319 PUSH2 0x6E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x34B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x342 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0x771 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x360 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x365 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST PUSH2 0x365 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x84E JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x3AE CALLDATASIZE PUSH1 0x4 PUSH2 0x363D JUMP JUMPDEST PUSH2 0x85D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B3 PUSH2 0x3C3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x8F2 JUMP JUMPDEST PUSH2 0x342 PUSH2 0x3D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x36F3 JUMP JUMPDEST PUSH2 0xABE JUMP JUMPDEST PUSH2 0x365 PUSH2 0x3E9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH2 0x401 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x426 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x446 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0xB23 JUMP JUMPDEST PUSH2 0x365 PUSH2 0xB69 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x461 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0xB73 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x365 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x401 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x4A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0xCD6 JUMP JUMPDEST PUSH2 0x365 PUSH7 0x6379DA05B60000 DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH2 0x401 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x4E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x365 PUSH2 0xD15 JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x519 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0xD5F JUMP JUMPDEST PUSH2 0x365 PUSH2 0x52C CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0xE36 JUMP JUMPDEST PUSH2 0x365 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x319 PUSH2 0xE41 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x550 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0xE4E JUMP JUMPDEST PUSH2 0x3B3 PUSH2 0x563 CALLDATASIZE PUSH1 0x4 PUSH2 0x3734 JUMP JUMPDEST PUSH2 0xE59 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x10B4 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x10BF JUMP JUMPDEST PUSH2 0x342 PUSH2 0x591 CALLDATASIZE PUSH1 0x4 PUSH2 0x3522 JUMP JUMPDEST PUSH2 0x12AC JUMP JUMPDEST PUSH2 0x365 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x12FB JUMP JUMPDEST PUSH2 0x365 PUSH2 0x5B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x36F3 JUMP JUMPDEST PUSH2 0x1393 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x5C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x13E2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x5E8 PUSH2 0x5E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x326 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x616 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x1500 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x629 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x150B JUMP JUMPDEST PUSH2 0x365 PUSH2 0x63C CALLDATASIZE PUSH1 0x4 PUSH2 0x37D6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x1516 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x67D CALLDATASIZE PUSH1 0x4 PUSH2 0x3567 JUMP JUMPDEST PUSH2 0x161D JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x401 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x6A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x380F JUMP JUMPDEST PUSH2 0x1631 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x401 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x1648 JUMP JUMPDEST PUSH2 0x365 PUSH2 0x6D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x354E JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST PUSH2 0x342 PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x6F0 SWAP1 PUSH2 0x3851 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x71C SWAP1 PUSH2 0x3851 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x769 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x73E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x769 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x74C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP2 DUP3 SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x7CD SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x16DA JUMP JUMPDEST POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x81E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x830 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x83A DUP3 PUSH2 0xE4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x858 PUSH2 0x172B JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x86B DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xE59 JUMP JUMPDEST PUSH1 0x11 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E8 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x969 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4345726332303A3A7377656570546F6B656E3A206F6E6C792061646D696E2063 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x616E20737765657020746F6B656E73 PUSH1 0x88 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4345726332303A3A7377656570546F6B656E3A2063616E206E6F742073776565 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x38103AB73232B9363CB4B733903A37B5B2B7 PUSH1 0x71 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA29 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA4D SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP3 DIV DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP2 SWAP3 POP DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAB6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0xAE1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH2 0xAF7 CALLER DUP7 DUP7 DUP7 PUSH2 0x1795 JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB1A DUP4 DUP4 PUSH2 0x19C3 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0xB39 PUSH2 0x146F JUMP JUMPDEST SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0xB62 SWAP1 DUP3 SWAP1 PUSH2 0x1A15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x858 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7E DUP3 PUSH2 0x1AAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xBB7 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD219DC1F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH3 0x3F1EE9 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 DUP6 AND SWAP2 PUSH3 0x7E3DD2 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC01 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC25 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH2 0xC71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61726B6572206D6574686F642072657475726E65642066616C736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x7AC369DBD14FA5EA3F473ED67CC9D598964A77501540BA6751EB0B3DECF5870D SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0xCF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xD0B PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x83A DUP3 PUSH2 0x1B01 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0xD4A PUSH2 0x10BF JUMP JUMPDEST POP POP PUSH1 0xB SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E6C79207468652061646D696E206D6179207365742074686520636F6D702D PUSH1 0x44 DUP3 ADD MSTORE PUSH13 0x6C696B652064656C6567617465 PUSH1 0x98 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17066A57 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x5C19A95C SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE2F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x1C1C JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x6F0 SWAP1 PUSH2 0x3851 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB7E DUP3 PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x6F6E6C792061646D696E206D617920696E697469616C697A6520746865206D61 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x1C9AD95D PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x9 SLOAD ISZERO DUP1 ISZERO PUSH2 0xED4 JUMPI POP PUSH1 0xA SLOAD ISZERO JUMPDEST PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61726B6574206D6179206F6E6C7920626520696E697469616C697A6564206F PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x6E6365 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x7 DUP5 SWAP1 SSTORE DUP4 PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x696E697469616C2065786368616E67652072617465206D757374206265206772 PUSH1 0x44 DUP3 ADD MSTORE PUSH16 0x32B0BA32B9103A3430B7103D32B93797 PUSH1 0x81 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFA2 DUP8 PUSH2 0xB84 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xFF2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657474696E6720636F6D7074726F6C6C6572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SSTORE PUSH8 0xDE0B6B3A7640000 PUSH1 0xA SSTORE PUSH2 0x100B DUP7 PUSH2 0x1CB7 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1066 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73657474696E6720696E7465726573742072617465206D6F64656C206661696C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x1959 PUSH1 0xF2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST DUP4 MLOAD PUSH2 0x1079 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH2 0x3425 JUMP JUMPDEST POP DUP3 MLOAD PUSH2 0x108D SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH2 0x3425 JUMP JUMPDEST POP POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND PUSH1 0xFF NOT SWAP3 DUP4 AND OR SWAP1 SSTORE PUSH1 0x0 DUP1 SLOAD SWAP1 SWAP2 AND PUSH1 0x1 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x1E2C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x0 SWAP1 TIMESTAMP SWAP1 DUP1 DUP3 EQ ISZERO PUSH2 0x10D8 JUMPI PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E2 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0xA SLOAD PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x15F24053 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE SWAP5 SWAP6 POP SWAP3 SWAP4 SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x15F24053 SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x114C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1170 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP PUSH5 0x5D21DBA000 DUP2 GT ISZERO PUSH2 0x11C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x626F72726F772072617465206973206162737572646C79206869676800000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D3 DUP8 DUP10 PUSH2 0x3901 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11EF PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE POP DUP4 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11FD DUP3 DUP9 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x120B DUP9 DUP4 PUSH2 0x3918 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x122A PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 SLOAD DUP2 MSTORE POP DUP5 DUP11 PUSH2 0x1E9C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1239 DUP6 DUP10 DUP11 PUSH2 0x1E9C JUMP JUMPDEST PUSH1 0x9 DUP15 SWAP1 SSTORE PUSH1 0xA DUP2 SWAP1 SSTORE PUSH1 0xB DUP5 SWAP1 SSTORE PUSH1 0xC DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP14 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x4DEC04E750CA11537CABCD8A9EAB06494DE08DA3735BC8871CD41250E190BC04 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x12CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH2 0x12E5 CALLER DUP1 DUP7 DUP7 PUSH2 0x1795 JUMP JUMPDEST EQ SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB8168816 PUSH2 0x1317 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x24 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x858 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x13B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x13CC CALLER DUP6 DUP6 DUP6 PUSH2 0x1EBD JUMP JUMPDEST POP PUSH1 0x0 DUP1 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1415 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5CB56C2B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP2 SWAP1 SWAP3 AND DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH32 0xCA4F2F25D0898EDD99413412FB94012F9E54EC8142F9B093E7720646A95B16A9 SWAP2 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x14A4 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x14AD PUSH2 0x84E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 DUP2 SWAP1 PUSH2 0x14E9 DUP8 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x14F1 PUSH2 0x172B JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x2136 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EA DUP3 PUSH2 0x2175 JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ ISZERO DUP1 PUSH2 0x1531 JUMPI POP CALLER ISZERO JUMPDEST ISZERO PUSH2 0x154F JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BA24F29 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP8 AND OR SWAP7 DUP8 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP1 SWAP4 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP5 DUP4 SWAP1 DIV DUP3 AND DUP1 DUP7 MSTORE SWAP3 SWAP1 SWAP6 DIV AND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 SWAP1 SWAP2 PUSH32 0xF9FFABCA9C8276E99321725BCB43FB076A6C66A54B7F21C4E8146D8519B417DC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x4 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND DUP3 MSTORE SWAP1 SWAP3 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xCA4F2F25D0898EDD99413412FB94012F9E54EC8142F9B093E7720646A95B16A9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1627 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0xB7E DUP3 PUSH2 0x1CB7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x163E DUP5 DUP5 DUP5 PUSH2 0x21B6 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x15F24053 PUSH2 0x1664 PUSH2 0x1A35 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1352 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x16BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x16D0 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x83A DUP3 PUSH2 0x2294 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x16FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x170E PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x171A CALLER CALLER DUP4 PUSH2 0x2350 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x0 SWAP1 DUP1 PUSH2 0x173E JUMPI POP POP PUSH1 0x7 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1748 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0xB SLOAD DUP4 PUSH2 0x175D SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH2 0x1767 SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 PUSH2 0x177E PUSH8 0xDE0B6B3A7640000 DUP5 PUSH2 0x3930 JUMP JUMPDEST PUSH2 0x1788 SWAP2 SWAP1 PUSH2 0x394F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x17B9B84B PUSH1 0xE3 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0xBDCDC258 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x181E SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1842 JUMPI PUSH1 0x40 MLOAD PUSH4 0x89D4277 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1875 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8CD22D19 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x189A JUMPI POP PUSH1 0x0 NOT PUSH2 0x18C2 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x18CE DUP6 DUP4 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x18F6 SWAP1 DUP8 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x191E SWAP1 DUP9 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP7 SWAP1 SSTORE SWAP2 DUP12 AND DUP2 MSTORE KECCAK256 DUP2 SWAP1 SSTORE SWAP1 POP PUSH1 0x0 NOT DUP5 EQ PUSH2 0x1978 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP15 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH1 0x40 MLOAD PUSH2 0x19AB SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x0 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x19F7 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1A03 CALLER DUP4 DUP4 PUSH2 0x2350 JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A22 DUP5 DUP5 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP PUSH2 0x1A2D DUP2 PUSH2 0x24F9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1AA4 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF AND PUSH2 0x1ACD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1ADF PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1AE9 DUP3 PUSH2 0x2511 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B36 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF7E5E6D PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x1B58 JUMPI PUSH1 0x40 MLOAD PUSH4 0xDFF50CB PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x1B61 PUSH2 0x1A35 JUMP JUMPDEST LT ISZERO PUSH2 0x1B80 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3345E999 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xC SLOAD DUP4 GT ISZERO PUSH2 0x1BA3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x78D29805 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xC SLOAD PUSH2 0x1BB1 SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP1 SWAP2 POP PUSH2 0x1BD4 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH2 0x25A5 JUMP JUMPDEST PUSH32 0x3BAD0C59CF2F06E7314077049F48A93578CD16F5EF92329F1DAB1420A99C177E PUSH1 0x3 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0xCC5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x1C3E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1C50 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1C5D CALLER PUSH1 0x0 DUP4 PUSH2 0x268F JUMP JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH2 0x1C94 JUMPI POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 SLOAD PUSH1 0x0 SWAP2 PUSH2 0x1CA5 SWAP2 PUSH2 0x3930 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x1A2D SWAP2 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1CEC JUMPI PUSH1 0x40 MLOAD PUSH4 0x407FDED5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x1D0E JUMPI PUSH1 0x40 MLOAD PUSH4 0xBE2A5CB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x2191F92A PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D64 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D88 SWAP2 SWAP1 PUSH2 0x38C9 JUMP JUMPDEST PUSH2 0x1DD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6D61726B6572206D6574686F642072657475726E65642066616C736500000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD SWAP3 DUP5 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xEDFFC32E068C7C95DFD4BDFD5C4D939A084D6B11C4199EAC8436ED234D72F926 SWAP2 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x1E4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x1E60 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1C5D CALLER DUP3 PUSH2 0x296C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1E93 DUP6 PUSH1 0x0 ADD MLOAD DUP6 PUSH2 0x2B95 JUMP JUMPDEST SWAP1 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1EA9 DUP6 DUP6 PUSH2 0x1E6B JUMP JUMPDEST SWAP1 POP PUSH2 0x1788 PUSH2 0x1EB7 DUP3 PUSH2 0x24F9 JUMP JUMPDEST DUP5 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD02F7351 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0xD02F7351 SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1F27 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1F4B SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1F6F JUMPI PUSH1 0x40 MLOAD PUSH4 0x63E00E33 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x1FA2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3A946267 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1FC3 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH7 0x6379DA05B60000 DUP2 MSTORE POP PUSH2 0x2BAD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1FD1 DUP3 DUP6 PUSH2 0x3901 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1FE8 PUSH2 0x172B JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x1FF8 DUP3 DUP6 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xC SLOAD PUSH2 0x200A SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH2 0x2020 SWAP1 DUP7 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2047 SWAP1 DUP9 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP12 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x2077 SWAP1 DUP6 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP11 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x20B9 SWAP1 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0xA91E67C5EA634CD43A12C5A482724B03DE01E85CA68702A53D0C2F45CB7C1DC5 ADDRESS DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x2122 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x2158 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x216A PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1C5D CALLER DUP3 PUSH2 0x2BD0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x2197 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x21A9 PUSH2 0x10BF JUMP JUMPDEST POP PUSH2 0x1C5D CALLER DUP3 PUSH1 0x0 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0xFF AND PUSH2 0x21D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x815 SWAP1 PUSH2 0x388C JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x21EA PUSH2 0x10BF JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA6AFED95 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x222D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2251 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2275 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EEA49B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST PUSH2 0x2281 CALLER DUP6 DUP6 DUP6 PUSH2 0x2D6F JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x22C7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1205B57B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x22E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DFCA6B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 DUP3 GT ISZERO PUSH2 0x2312 JUMPI PUSH1 0x40 MLOAD PUSH4 0x717220F3 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 DUP1 SLOAD SWAP1 DUP4 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0xAAA68312E2EA9D50E16AF5068410AB56E1A1FD06037B1A35664812C30F821460 SWAP2 ADD PUSH2 0xCC5 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x12004531 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP2 AND SWAP1 PUSH4 0x24008A62 SWAP1 PUSH1 0x84 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x23D9 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x23FD JUMPI PUSH1 0x40 MLOAD PUSH4 0x8C81362D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x241F JUMPI PUSH1 0x40 MLOAD PUSH4 0xC9021E2F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x242A DUP6 PUSH2 0x1C6D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x0 NOT DUP6 EQ PUSH2 0x243D JUMPI DUP5 PUSH2 0x243F JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x244D DUP9 DUP4 PUSH2 0x3229 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x245B DUP3 DUP6 PUSH2 0x3901 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0xB SLOAD PUSH2 0x246D SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP8 DUP2 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0xB DUP6 SWAP1 SSTORE DUP2 MLOAD SWAP4 DUP16 AND DUP5 MSTORE DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x1A2A22CB034D26D1854BDC6666A5B91FE25EFBBB5DCAD3B0355478D6F5C362A1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH2 0xB7E SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x253B JUMPI PUSH1 0x40 MLOAD PUSH4 0x38ACF799 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST PUSH2 0x2545 CALLER DUP7 PUSH2 0x3229 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD PUSH2 0x2555 SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST SWAP2 POP DUP2 PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH32 0xA91E67C5EA634CD43A12C5A482724B03DE01E85CA68702A53D0C2F45CB7C1DC5 CALLER DUP3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x2591 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x0 SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x25F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2609 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 RETURNDATASIZE PUSH1 0x0 DUP2 EQ PUSH2 0x2625 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x262F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 NOT SWAP2 POP PUSH2 0x263B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD SWAP2 POP JUMPDEST POP DUP1 PUSH2 0x2689 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544F4B454E5F5452414E534645525F4F55545F4641494C454400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST DUP2 ISZERO DUP1 PUSH2 0x269A JUMPI POP DUP1 ISZERO JUMPDEST PUSH2 0x2703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F6E65206F662072656465656D546F6B656E73496E206F722072656465656D41 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x6D6F756E74496E206D757374206265207A65726F PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2718 PUSH2 0x172B JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP5 ISZERO PUSH2 0x2739 JUMPI DUP5 SWAP2 POP PUSH2 0x2732 DUP4 DUP7 PUSH2 0x1A15 JUMP JUMPDEST SWAP1 POP PUSH2 0x2749 JUMP JUMPDEST PUSH2 0x2743 DUP5 DUP5 PUSH2 0x3400 JUMP JUMPDEST SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xEABE7D91 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xEABE7D91 SWAP1 PUSH2 0x277E SWAP1 ADDRESS SWAP1 DUP12 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x279D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27C1 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x27E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x480F4247 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x2807 JUMPI PUSH1 0x40 MLOAD PUSH4 0x97B5CFCD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x2810 PUSH2 0x1A35 JUMP JUMPDEST LT ISZERO PUSH2 0x282F JUMPI PUSH1 0x40 MLOAD PUSH4 0x91240A1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xD SLOAD PUSH2 0x283D SWAP2 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2864 SWAP1 DUP5 SWAP1 PUSH2 0x3901 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x2887 DUP8 DUP4 PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE ADDRESS SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0xE5B754FB1ABB7F01B499791D0B820AE3B6AF3424AC1C59768EDB53F4EC31A929 DUP8 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x28E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x51DFF989 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x51DFF989 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x294B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x295F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x4EF4C3E1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x4EF4C3E1 SWAP1 PUSH2 0x29A1 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x29C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29E4 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2A08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x49ABD4FD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x2A2A JUMPI PUSH1 0x40 MLOAD PUSH4 0x38D88597 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x2A3F PUSH2 0x172B JUMP JUMPDEST SWAP1 MSTORE SWAP1 POP PUSH1 0x0 PUSH2 0x2A4F DUP6 DUP6 PUSH2 0x3229 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2A5D DUP3 DUP5 PUSH2 0x3400 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD SLOAD PUSH2 0x2A6D SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x2A94 SWAP1 DUP3 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE MLOAD PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F SWAP1 PUSH2 0x2AE4 SWAP1 DUP9 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x3971 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 ADDRESS SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x39DB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x41C728B9 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x64 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x41C728B9 SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2B89 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 DUP5 PUSH2 0x3930 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 DUP3 DUP5 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2BC6 DUP5 DUP5 PUSH1 0x0 ADD MLOAD PUSH2 0x2B95 JUMP JUMPDEST PUSH2 0xB62 SWAP2 SWAP1 PUSH2 0x394F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x368F5153 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xDA3D454C SWAP1 PUSH2 0x2C05 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C24 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C48 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2C6C JUMPI PUSH1 0x40 MLOAD PUSH4 0x918DB40F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x2C8E JUMPI PUSH1 0x40 MLOAD PUSH4 0xE8D8C61 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x2C97 PUSH2 0x1A35 JUMP JUMPDEST LT ISZERO PUSH2 0x2CB6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x48C25881 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CC1 DUP5 PUSH2 0x1C6D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2CCF DUP5 DUP4 PUSH2 0x3918 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0xB SLOAD PUSH2 0x2CE1 SWAP2 SWAP1 PUSH2 0x3918 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0xA SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SSTORE PUSH1 0xB DUP2 SWAP1 SSTORE SWAP1 POP PUSH2 0x2D16 DUP7 DUP7 PUSH2 0x25A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x13ED6866D4E1EE6DA46F845C46D7E54120883D75C5EA9A2DACC1C4CA8984AB80 SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2FE3F38F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP7 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE DUP6 DUP2 AND PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP3 AND SWAP1 PUSH4 0x5FC7E71E SWAP1 PUSH1 0xA4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2DD9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DFD SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x2E21 JUMPI PUSH1 0x40 MLOAD PUSH4 0xA14D179 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x815 JUMP JUMPDEST TIMESTAMP PUSH1 0x9 SLOAD EQ PUSH2 0x2E43 JUMPI PUSH1 0x40 MLOAD PUSH4 0x80965B1B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6C540BAF PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2EA6 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST EQ PUSH2 0x2EC4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1046F38D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x2EF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1BD1A621 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH2 0x2F15 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD29DA7EF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP4 EQ ISZERO PUSH2 0x2F38 JUMPI PUSH1 0x40 MLOAD PUSH4 0x5982C5BB PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2F45 DUP7 DUP7 DUP7 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH4 0xC488847B PUSH1 0xE0 SHL DUP2 MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC488847B SWAP1 PUSH2 0x2F7F SWAP1 ADDRESS SWAP1 DUP10 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2F9B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FBF SWAP2 SWAP1 PUSH2 0x39B6 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP3 EQ PUSH2 0x302F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C49515549444154455F434F4D5054524F4C4C45525F43414C43554C4154455F PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x105353D5539517D4D152569157D19052531151 PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE DUP3 SWAP2 SWAP1 DUP8 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3078 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x309C SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST LT ISZERO PUSH2 0x30EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C49515549444154455F5345495A455F544F4F5F4D5543480000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND ADDRESS EQ ISZERO PUSH2 0x310C JUMPI PUSH2 0x3107 ADDRESS DUP10 DUP10 DUP5 PUSH2 0x1EBD JUMP JUMPDEST PUSH2 0x31C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB2A02FF1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xB2A02FF1 SWAP1 PUSH2 0x313F SWAP1 DUP13 SWAP1 DUP13 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x315E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3182 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST EQ PUSH2 0x31C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1D1BDAD95B881CD95A5E9D5C994819985A5B1959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP3 MSTORE DUP10 DUP2 AND PUSH1 0x20 DUP4 ADD MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP8 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 MLOAD PUSH32 0x298637F684DA70674F26509B10F07EC2FBC77A335AB1E7D6215A4B2484D8BB52 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3278 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x329C SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x32CF SWAP1 DUP10 SWAP1 ADDRESS SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x3992 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x32E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 RETURNDATASIZE PUSH1 0x0 DUP2 EQ PUSH2 0x3319 JUMPI PUSH1 0x20 DUP2 EQ PUSH2 0x3323 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 NOT SWAP2 POP PUSH2 0x332F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x0 DUP1 RETURNDATACOPY PUSH1 0x0 MLOAD SWAP2 POP JUMPDEST POP DUP1 PUSH2 0x337D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x544F4B454E5F5452414E534645525F494E5F4641494C45440000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x815 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33C4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33E8 SWAP2 SWAP1 PUSH2 0x38B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x33F4 DUP4 DUP3 PUSH2 0x3901 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB62 PUSH2 0x3417 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2B95 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x0 PUSH2 0xB62 DUP3 DUP5 PUSH2 0x394F JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x3431 SWAP1 PUSH2 0x3851 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x3453 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x3499 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x346C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x3499 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x3499 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x3499 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x347E JUMP JUMPDEST POP PUSH2 0x1791 SWAP3 SWAP2 POP JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1791 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x34A1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x34E2 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x34C6 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x34F4 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x351F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3540 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3560 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xB62 DUP2 PUSH2 0x350A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x35AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x35C6 JUMPI PUSH2 0x35C6 PUSH2 0x3584 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x35EE JUMPI PUSH2 0x35EE PUSH2 0x3584 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x3607 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x3663 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH2 0x3673 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD PUSH2 0x3683 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x36A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36B3 DUP12 DUP4 DUP13 ADD PUSH2 0x359A JUMP JUMPDEST SWAP5 POP PUSH1 0xA0 DUP11 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x36C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36D6 DUP11 DUP3 DUP12 ADD PUSH2 0x359A JUMP JUMPDEST SWAP3 POP POP PUSH2 0x36E5 PUSH1 0xC0 DUP10 ADD PUSH2 0x3627 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3708 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3713 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x3723 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x374D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x3758 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x3768 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x378C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3798 DUP11 DUP4 DUP12 ADD PUSH2 0x359A JUMP JUMPDEST SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x37AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37BB DUP10 DUP3 DUP11 ADD PUSH2 0x359A JUMP JUMPDEST SWAP3 POP POP PUSH2 0x37CA PUSH1 0xA0 DUP9 ADD PUSH2 0x3627 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x37E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x37F4 DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3804 DUP2 PUSH2 0x350A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x382F DUP2 PUSH2 0x350A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3846 DUP2 PUSH2 0x350A JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3865 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3886 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xA SWAP1 DUP3 ADD MSTORE PUSH10 0x1C994B595B9D195C9959 PUSH1 0xB2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x38DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x3913 JUMPI PUSH2 0x3913 PUSH2 0x38EB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x392B JUMPI PUSH2 0x392B PUSH2 0x38EB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x394A JUMPI PUSH2 0x394A PUSH2 0x38EB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x396C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x39C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP3 PUSH6 0x71C28F011F5D 0x21 PUSH5 0x45C5294320 PUSH25 0xAFCDB1757E138C7B79980CAD0557EC64736F6C634300080A00 CALLER ",
		"sourceMap": "244:1327:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;419:18:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6146:278:2;;;;;;:::i;:::-;;:::i;:::-;;;1237:14:10;;1230:22;1212:41;;1200:2;1185:18;6146:278:2;1072:187:10;3727:149:0;;;;;;:::i;:::-;;:::i;:::-;;;1595:25:10;;;1583:2;1568:18;3727:149:0;1449:177:10;1644:33:3;;;;;;10320:218:2;;;;;;:::i;:::-;;:::i;2289:23:3:-;;;;;;12637:123:2;;;:::i;855:684:0:-;;;;;;:::i;:::-;;:::i;:::-;;5324:371;;;;;;:::i;:::-;;:::i;5441:226:2:-;;;;;;:::i;:::-;;:::i;4203:189:0:-;;;;;;:::i;:::-;;:::i;1094:35:3:-;;;;;-1:-1:-1;;;;;1094:35:3;;;;;;-1:-1:-1;;;;;4989:32:10;;;4971:51;;4959:2;4944:18;1094:35:3;4809:219:10;615:21:3;;;;;;;;;;;;5205:4:10;5193:17;;;5175:36;;5163:2;5148:18;615:21:3;5033:184:10;7514:267:2;;;;;;:::i;:::-;;:::i;14069:100::-;;;:::i;5929:128:0:-;;;;;;:::i;:::-;;:::i;42615:728:2:-;;;;;;:::i;:::-;;:::i;2053:24:3:-;;;;;;1220:39;;;;;-1:-1:-1;;;;;1220:39:3;;;47831:327:2;;;;;;:::i;:::-;;:::i;3184:56:3:-;;3234:6;3184:56;;2458:33:7;;2490:1;2458:33;;1767:30:3;;;;;;8143:25;;;;;-1:-1:-1;;;;;8143:25:3;;;7137:121:2;;;;;;:::i;:::-;-1:-1:-1;;;;;7230:20:2;7203:7;7230:20;;;:13;:20;;;;;;;7137:121;9843:186;;;:::i;10373:220:0:-;;;;;;:::i;:::-;;:::i;2910:161::-;;;;;;:::i;:::-;;:::i;2183:25:3:-;;;;;;515:20;;;:::i;10747:188:2:-;;;;;;:::i;:::-;;:::i;934:1521::-;;;;;;:::i;:::-;;:::i;1929:133:0:-;;;;;;:::i;:::-;;:::i;14417:2933:2:-;;;:::i;4911:223::-;;;;;;:::i;:::-;;:::i;1918:23:3:-;;;;;;9405:292:2;;;:::i;37260:264::-;;;;;;:::i;:::-;;:::i;40770:639::-;;;;;;:::i;:::-;;:::i;12195:192::-;;;:::i;8127:408::-;;;;;;:::i;:::-;;:::i;:::-;;;;7459:25:10;;;7515:2;7500:18;;7493:34;;;;7543:18;;;7536:34;7601:2;7586:18;;7579:34;7446:3;7431:19;8127:408:2;7228:391:10;3339:141:0;;;;;;:::i;:::-;;:::i;2413:::-;;;;;;:::i;:::-;;:::i;6754:193:2:-;;;;;;:::i;:::-;-1:-1:-1;;;;;6905:25:2;;;6873:7;6905:25;;;:18;:25;;;;;;;;:34;;;;;;;;;;;;;6754:193;41683:711;;;:::i;50225:356::-;;;;;;:::i;:::-;;:::i;1361:42:3:-;;;;;-1:-1:-1;;;;;1361:42:3;;;4874:237:0;;;;;;:::i;:::-;;:::i;983:28:3:-;;;;;;;;-1:-1:-1;;;;;983:28:3;;;8977:252:2;;;:::i;43642:354::-;;;;;;:::i;:::-;;:::i;3405:36:3:-;;3437:4;3405:36;;419:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6146:278:2:-;6286:10;6250:4;6307:23;;;:18;:23;;;;;;;;-1:-1:-1;;;;;6307:32:2;;;;;;;;;;:41;;;6364:30;6250:4;;6286:10;;;6364:30;;;;6342:6;1595:25:10;;1583:2;1568:18;;1449:177;6364:30:2;;;;;;;;-1:-1:-1;6412:4:2;;6146:278;-1:-1:-1;;;6146:278:2:o;3727:149:0:-;3793:4;3810:32;3830:11;3810:19;:32::i;:::-;-1:-1:-1;2490:1:7;;3727:149:0;-1:-1:-1;3727:149:0:o;10320:218:2:-;10443:7;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;;;;;;;;;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;10468:16:::1;:14;:16::i;:::-;;10502:28;10522:7;10502:19;:28::i;:::-;10495:35;;53617:11:::0;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;10320:218;;-1:-1:-1;10320:218:2:o;12637:123::-;12697:7;12724:28;:26;:28::i;:::-;12717:35;;12637:123;:::o;855:684:0:-;1289:107;1306:12;1320:18;1340:28;1370:5;1377:7;1386:9;1289:16;:107::i;:::-;1456:10;:24;;-1:-1:-1;;;;;;1456:24:0;-1:-1:-1;;;;;1456:24:0;;;;;;;;1491:40;;;-1:-1:-1;;;1491:40:0;;;;:38;;:40;;;;;;;;;;;;;;;1456:24;1491:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;855:684;;;;;;;:::o;5324:371::-;5428:5;;;;;-1:-1:-1;;;;;5428:5:0;5414:10;:19;5406:79;;;;-1:-1:-1;;;5406:79:0;;10129:2:10;5406:79:0;;;10111:21:10;10168:2;10148:18;;;10141:30;10207:34;10187:18;;;10180:62;-1:-1:-1;;;10258:18:10;;;10251:45;10313:19;;5406:79:0;9927:411:10;5406:79:0;5522:10;;-1:-1:-1;;;;;5504:28:0;;;5522:10;;5504:28;;5496:91;;;;-1:-1:-1;;;5496:91:0;;10545:2:10;5496:91:0;;;10527:21:10;10584:2;10564:18;;;10557:30;10623:34;10603:18;;;10596:62;-1:-1:-1;;;10674:18:10;;;10667:48;10732:19;;5496:91:0;10343:414:10;5496:91:0;5616:30;;-1:-1:-1;;;5616:30:0;;5640:4;5616:30;;;4971:51:10;5598:15:0;;-1:-1:-1;;;;;5616:15:0;;;;;4944:18:10;;5616:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5672:5;;5657:30;;-1:-1:-1;;;5657:30:0;;-1:-1:-1;;;;;5672:5:0;;;;;;5657:30;;;10944:51:10;11011:18;;;11004:34;;;;;-1:-1:-1;5657:14:0;;;;;10917:18:10;;5657:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5395:300;5324:371;:::o;5441:226:2:-;5579:4;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;5603:44:::1;5618:10;5630:3:::0;5635;5640:6;5603:14:::1;:44::i;:::-;:56;5596:63;;53617:11:::0;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;5441:226;;-1:-1:-1;;;5441:226:2:o;4203:189:0:-;4293:4;4310:48;4336:8;4346:11;4310:25;:48::i;:::-;-1:-1:-1;2490:1:7;4203:189:0;;;;:::o;7514:267:2:-;7612:7;7637:23;7663:38;;;;;;;;7678:21;:19;:21::i;:::-;7663:38;;-1:-1:-1;;;;;7752:20:2;;;;;;:13;:20;;;;;;7637:64;;-1:-1:-1;7719:54:2;;7637:64;;7719:18;:54::i;:::-;7712:61;7514:267;-1:-1:-1;;;7514:267:2:o;14069:100::-;14120:7;14147:14;:12;:14::i;5929:128:0:-;5994:4;6018:31;6039:9;6018:20;:31::i;:::-;6011:38;5929:128;-1:-1:-1;;5929:128:0:o;42615:728:2:-;42806:5;;42729:7;;42806:5;;;-1:-1:-1;;;;;42806:5:2;42792:10;:19;42788:85;;42835:26;;-1:-1:-1;;;42835:26:2;;;;;;;;;;;42788:85;42923:11;;43020:30;;;-1:-1:-1;;;43020:30:2;;;;-1:-1:-1;;;;;42923:11:2;;;;43020:28;;;;;:30;;;;;;;;;;;;;;:28;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43012:71;;;;-1:-1:-1;;;43012:71:2;;11533:2:10;43012:71:2;;;11515:21:10;11572:2;11552:18;;;11545:30;11611;11591:18;;;11584:58;11659:18;;43012:71:2;11331:352:10;43012:71:2;43151:11;:28;;-1:-1:-1;;;;;;43151:28:2;-1:-1:-1;;;;;43151:28:2;;;;;;;;;43261:46;;;11976:15:10;;;11958:34;;12023:2;12008:18;;12001:43;;;;43261:46:2;;11893:18:10;43261:46:2;;;;;;;;-1:-1:-1;2490:1:7;;42615:728:2;-1:-1:-1;;42615:728:2:o;47831:327::-;47954:7;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;47979:16:::1;:14;:16::i;:::-;;48116:34;48137:12;48116:20;:34::i;9843:186::-:0;9950:7;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;9975:16:::1;:14;:16::i;:::-;-1:-1:-1::0;;10009:12:2::1;::::0;53617:11;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;9843:186;:::o;10373:220:0:-;10471:5;;;;;-1:-1:-1;;;;;10471:5:0;10457:10;:19;10449:77;;;;-1:-1:-1;;;10449:77:0;;12257:2:10;10449:77:0;;;12239:21:10;12296:2;12276:18;;;12269:30;12335:34;12315:18;;;12308:62;-1:-1:-1;;;12386:18:10;;;12379:43;12439:19;;10449:77:0;12055:409:10;10449:77:0;10546:10;;10537:48;;-1:-1:-1;;;10537:48:0;;-1:-1:-1;;;;;4989:32:10;;;10537:48:0;;;4971:51:10;10546:10:0;;;;10537:29;;4944:18:10;;10537:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10373:220;:::o;2910:161::-;2982:4;2999:38;3024:12;2999:24;:38::i;515:20:3:-;;;;;;;:::i;10747:188:2:-;10859:7;10891:36;10919:7;10891:27;:36::i;934:1521::-;1227:5;;;;;-1:-1:-1;;;;;1227:5:2;1213:10;:19;1205:68;;;;-1:-1:-1;;;1205:68:2;;12671:2:10;1205:68:2;;;12653:21:10;12710:2;12690:18;;;12683:30;12749:34;12729:18;;;12722:62;-1:-1:-1;;;12800:18:10;;;12793:34;12844:19;;1205:68:2;12469:400:10;1205:68:2;1306:18;;:23;:43;;;;-1:-1:-1;1333:11:2;;:16;1306:43;1284:128;;;;-1:-1:-1;;;1284:128:2;;13076:2:10;1284:128:2;;;13058:21:10;13115:2;13095:18;;;13088:30;13154:34;13134:18;;;13127:62;-1:-1:-1;;;13205:18:10;;;13198:33;13248:19;;1284:128:2;12874:399:10;1284:128:2;1463:27;:58;;;1554:31;1532:129;;;;-1:-1:-1;;;1532:129:2;;13480:2:10;1532:129:2;;;13462:21:10;13519:2;13499:18;;;13492:30;13558:34;13538:18;;;13531:62;-1:-1:-1;;;13609:18:10;;;13602:46;13665:19;;1532:129:2;13278:412:10;1532:129:2;1706:11;1720:29;1736:12;1720:15;:29::i;:::-;1706:43;-1:-1:-1;1768:15:2;;1760:54;;;;-1:-1:-1;;;1760:54:2;;13897:2:10;1760:54:2;;;13879:21:10;13936:2;13916:18;;;13909:30;13975:28;13955:18;;;13948:56;14021:18;;1760:54:2;13695:350:10;1760:54:2;8778:15;1933:18;:37;462:4:8;1981:11:2;:25;2106:46;2133:18;2106:26;:46::i;:::-;2100:52;-1:-1:-1;2171:15:2;;2163:62;;;;-1:-1:-1;;;2163:62:2;;14252:2:10;2163:62:2;;;14234:21:10;14291:2;14271:18;;;14264:30;14330:34;14310:18;;;14303:62;-1:-1:-1;;;14381:18:10;;;14374:32;14423:19;;2163:62:2;14050:398:10;2163:62:2;2238:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;2261:16:2;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;;2288:8:2;:20;;;;;;-1:-1:-1;;2288:20:2;;;;;;:8;2429:18;;;;;2288:20;2429:18;;;-1:-1:-1;;;;;934:1521:2:o;1929:133:0:-;1987:4;2004:24;2017:10;2004:12;:24::i;14417:2933:2:-;14635:18;;14476:7;;8778:15;;14723:45;;;14719:93;;;2490:1:7;14785:15:2;;;;14417:2933;:::o;14719:93::-;14879:17;14899:14;:12;:14::i;:::-;14947:12;;14994:13;;15045:11;;15156:17;;:121;;-1:-1:-1;;;15156:121:2;;;;;14655:25:10;;;14696:18;;;14689:34;;;14739:18;;;14732:34;;;14879::2;;-1:-1:-1;14947:12:2;;14994:13;;15045:11;;14924:20;;-1:-1:-1;;;;;15156:17:2;;:31;;14628:18:10;;15156:121:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15127:150;;763:10:3;15310:18:2;:43;;15288:121;;;;-1:-1:-1;;;15288:121:2;;14979:2:10;15288:121:2;;;14961:21:10;15018:2;14998:18;;;14991:30;15057;15037:18;;;15030:58;15105:18;;15288:121:2;14777:352:10;15288:121:2;15499:18;15520:44;15541:23;15520:18;:44;:::i;:::-;15499:65;;16056:31;16090:90;16109:35;;;;;;;;16124:18;16109:35;;;16159:10;16090:4;:90::i;:::-;16056:124;;16191:27;16221:91;16254:20;16289:12;16221:18;:91::i;:::-;16191:121;-1:-1:-1;16323:23:2;16349:34;16371:12;16191:121;16349:34;:::i;:::-;16323:60;;16394:24;16421:151;16461:38;;;;;;;;16476:21;;16461:38;;;16514:19;16548:13;16421:25;:151::i;:::-;16394:178;;16583:22;16608:133;16648:20;16683:16;16714;16608:25;:133::i;:::-;16945:18;:39;;;16995:11;:28;;;17034:12;:30;;;17075:13;:32;;;17172:142;;;7459:25:10;;;7515:2;7500:18;;7493:34;;;7543:18;;;7536:34;;;7601:2;7586:18;;7579:34;;;16995:28:2;;-1:-1:-1;17172:142:2;;7446:3:10;7431:19;17172:142:2;;;;;;;2490:1:7;17327:15:2;;;;;;;;;;;;;;;14417:2933;:::o;4911:223::-;5034:4;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;5063:51:::1;5078:10;::::0;5102:3;5107:6;5063:14:::1;:51::i;:::-;:63;5056:70;;53617:11:::0;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;4911:223;;-1:-1:-1;;4911:223:2:o;9405:292::-;9507:17;;9467:7;;-1:-1:-1;;;;;9507:17:2;:31;9557:14;:12;:14::i;:::-;9590:12;;9621:13;;9653:21;;9507:182;;-1:-1:-1;;;;;;9507:182:2;;;;;;;;;;7459:25:10;;;;7500:18;;;7493:34;;;;7543:18;;;7536:34;7586:18;;;7579:34;7431:19;;9507:182:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;37260:264::-;37408:7;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;37428:60:::1;37442:10;37454::::0;37466:8;37476:11;37428:13:::1;:60::i;:::-;-1:-1:-1::0;2490:1:7::1;53617:11:2::0;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;37260:264;;-1:-1:-1;;;37260:264:2:o;40770:639::-;40959:5;;40883:7;;40959:5;;;-1:-1:-1;;;;;40959:5:2;40945:10;:19;40941:86;;40988:27;;-1:-1:-1;;;40988:27:2;;;;;;;;;;;40941:86;41126:12;;;-1:-1:-1;;;;;41209:30:2;;;-1:-1:-1;;;;;;41209:30:2;;;;;;;41324:49;;;41126:12;;;;11958:34:10;;;12023:2;12008:18;;12001:43;;;;41324:49:2;;11893:18:10;41324:49:2;11688:362:10;12195:192:2;12300:7;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;12325:16:::1;:14;:16::i;:::-;;12359:20;:18;:20::i;:::-;12352:27;;53617:11:::0;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;12195:192;:::o;8127:408::-;-1:-1:-1;;;;;8400:22:2;;8254:7;8400:22;;;:13;:22;;;;;;8254:7;;;;;;;;8437:36;8414:7;8437:27;:36::i;:::-;8488:28;:26;:28::i;:::-;8355:172;;;;;;;;8127:408;;;;;:::o;3339:141:0:-;3401:4;3418:28;3433:12;3418:14;:28::i;2413:141::-;2475:4;2492:28;2507:12;2492:14;:28::i;41683:711:2:-;41845:12;;41734:7;;-1:-1:-1;;;;;41845:12:2;41831:10;:26;;;:54;;-1:-1:-1;41861:10:2;:24;41831:54;41827:124;;;41909:30;;-1:-1:-1;;;41909:30:2;;;;;;;;;;;41827:124;42035:5;;;42077:12;;;-1:-1:-1;;;;;42077:12:2;;;42035:5;42150:20;;;-1:-1:-1;;;;;;42150:20:2;;;;;;;-1:-1:-1;;;;;;42219:34:2;;;;;;42271:25;;;42035:5;;;;;;11958:34:10;;;42290:5:2;;;;;12023:2:10;12008:18;;12001:43;42035:5:2;42077:12;;42271:25;;11893:18:10;42271:25:2;;;;;;;42345:12;;42312:46;;;-1:-1:-1;;;;;11976:15:10;;;11958:34;;42345:12:2;;;12023:2:10;12008:18;;12001:43;42312:46:2;;11893:18:10;42312:46:2;;;;;;;2490:1:7;42371:15:2;;;;41683:711;:::o;50225:356::-;50348:7;50373:16;:14;:16::i;:::-;;50525:48;50552:20;50525:26;:48::i;4874:237:0:-;4996:4;5013:64;5037:8;5047:11;5060:16;5013:23;:64::i;:::-;-1:-1:-1;2490:1:7;4874:237:0;;;;;:::o;8977:252:2:-;9079:17;;9039:7;;-1:-1:-1;;;;;9079:17:2;:31;9129:14;:12;:14::i;:::-;9162:12;;9193:13;;9079:142;;-1:-1:-1;;;;;;9079:142:2;;;;;;;;;;14655:25:10;;;;14696:18;;;14689:34;;;;14739:18;;;14732:34;14628:18;;9079:142:2;14453:319:10;43642:354:2;43779:7;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;43804:16:::1;:14;:16::i;:::-;;43940:48;43963:24;43940:22;:48::i;28253:264::-:0;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;28336:16:::1;:14;:16::i;:::-;;28456:53;28473:10;28485;28497:11;28456:16;:53::i;:::-;-1:-1:-1::0;;53617:11:2;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;28253:264::o;13010:889::-;13163:11;;13115:7;;13189:17;13185:707;;-1:-1:-1;;13362:27:2;;;13010:889::o;13185:707::-;13571:17;13591:14;:12;:14::i;:::-;13571:34;;13620:36;13720:13;;13688:12;;13659:9;:41;;;;:::i;:::-;:74;;;;:::i;:::-;13620:113;-1:-1:-1;13748:20:2;13832:12;13772:39;462:4:8;13620:113:2;13772:39;:::i;:::-;13771:73;;;;:::i;:::-;13748:96;13010:889;-1:-1:-1;;;;;13010:889:2:o;13185:707::-;13129:770;13010:889;:::o;2921:1729::-;3147:11;;:123;;-1:-1:-1;;;3147:123:2;;3197:4;3147:123;;;16510:34:10;-1:-1:-1;;;;;16580:15:10;;;16560:18;;;16553:43;16632:15;;;16612:18;;;16605:43;16664:18;;;16657:34;;;3065:7:2;;;;3147:11;;;:27;;16444:19:10;;3147:123:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3129:141;-1:-1:-1;3285:12:2;;3281:89;;3321:37;;-1:-1:-1;;;3321:37:2;;;;;1595:25:10;;;1568:18;;3321:37:2;1449:177:10;3281:89:2;3436:3;-1:-1:-1;;;;;3429:10:2;:3;-1:-1:-1;;;;;3429:10:2;;3425:70;;;3463:20;;-1:-1:-1;;;3463:20:2;;;;;;;;;;;3425:70;3572:25;3627:3;-1:-1:-1;;;;;3616:14:2;:7;-1:-1:-1;;;;;3616:14:2;;3612:169;;;-1:-1:-1;;;3612:169:2;;;-1:-1:-1;;;;;;3737:23:2;;;;;;;:18;:23;;;;;;;;:32;;;;;;;;;;3612:169;3859:20;3882:26;3902:6;3882:17;:26;:::i;:::-;-1:-1:-1;;;;;3942:18:2;;3919:20;3942:18;;;:13;:18;;;;;;3859:49;;-1:-1:-1;3919:20:2;3942:27;;3963:6;;3942:27;:::i;:::-;-1:-1:-1;;;;;4003:18:2;;3980:20;4003:18;;;:13;:18;;;;;;3919:50;;-1:-1:-1;3980:20:2;4003:27;;4024:6;;4003:27;:::i;:::-;-1:-1:-1;;;;;4164:18:2;;;;;;;:13;:18;;;;;;:33;;;4208:18;;;;;;:33;;;3980:50;-1:-1:-1;;;4314:38:2;;4310:118;;-1:-1:-1;;;;;4369:23:2;;;;;;;:18;:23;;;;;;;;:32;;;;;;;;;:47;;;4310:118;4499:3;-1:-1:-1;;;;;4485:26:2;4494:3;-1:-1:-1;;;;;4485:26:2;-1:-1:-1;;;;;;;;;;;4504:6:2;4485:26;;;;1595:25:10;;1583:2;1568:18;;1449:177;4485:26:2;;;;;;;;-1:-1:-1;2490:1:7;;2921:1729:2;-1:-1:-1;;;;;;;;;2921:1729:2:o;28756:309::-;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;28886:16:::1;:14;:16::i;:::-;;29006:51;29023:10;29035:8;29045:11;29006:16;:51::i;:::-;-1:-1:-1::0;;53617:11:2;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;-1:-1:-1;28756:309:2:o;1184:174:8:-;1262:4;1279:18;1300:15;1305:1;1308:6;1300:4;:15::i;:::-;1279:36;;1333:17;1342:7;1333:8;:17::i;:::-;1326:24;1184:174;-1:-1:-1;;;;1184:174:8:o;6325:186:0:-;6444:10;;6473:30;;-1:-1:-1;;;6473:30:0;;6497:4;6473:30;;;4971:51:10;6389:4:0;;-1:-1:-1;;;;;6444:10:0;;;;6473:15;;4944:18:10;;6473:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6466:37;;;6325:186;:::o;45425:322:2:-;45532:7;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;45557:16:::1;:14;:16::i;:::-;;45685:28;45703:9;45685:17;:28::i;:::-;;;2490:1:7;45724:15:2;;53617:11:::0;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;45425:322;;-1:-1:-1;45425:322:2:o;48435:1421::-;48678:5;;48523:7;;;;48678:5;;;-1:-1:-1;;;;;48678:5:2;48664:10;:19;48660:85;;48707:26;;-1:-1:-1;;;48707:26:2;;;;;;;;;;;48660:85;8778:15;48849:18;;:38;48845:104;;48911:26;;-1:-1:-1;;;48911:26:2;;;;;;;;;;;48845:104;49055:12;49038:14;:12;:14::i;:::-;:29;49034:101;;;49091:32;;-1:-1:-1;;;49091:32:2;;;;;;;;;;;49034:101;49229:13;;49214:12;:28;49210:98;;;49266:30;;-1:-1:-1;;;49266:30:2;;;;;;;;;;;49210:98;49476:12;49460:13;;:28;;;;:::i;:::-;49562:13;:32;;;49728:5;;49562:32;;-1:-1:-1;49714:34:2;;49728:5;;;-1:-1:-1;;;;;49728:5:2;49735:12;49714:13;:34::i;:::-;49766:54;49782:5;;;;;;;;;-1:-1:-1;;;;;49782:5:2;49789:12;49803:16;49766:54;;;;;;;;:::i;21254:278::-;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;21366:16:::1;:14;:16::i;:::-;;21475:49;21495:10;21508:1;21511:12;21475:11;:49::i;:::-;-1:-1:-1::0;53617:11:2;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;21254:278::o;11189:851::-;-1:-1:-1;;;;;11407:23:2;;11293:7;11407:23;;;:14;:23;;;;;11636:24;;11632:70;;-1:-1:-1;11689:1:2;;11189:851;-1:-1:-1;;11189:851:2:o;11632:70::-;11953:11;;11926:24;;11896:27;;11926:38;;;:::i;:::-;11896:68;;12004:14;:28;;;11982:19;:50;;;;:::i;50911:1299::-;51235:5;;51023:7;;;;51235:5;;;-1:-1:-1;;;;;51235:5:2;51221:10;:19;51217:91;;51264:32;;-1:-1:-1;;;51264:32:2;;;;;;;;;;;51217:91;8778:15;51412:18;;:38;51408:110;;51474:32;;-1:-1:-1;;;51474:32:2;;;;;;;;;;;51408:110;51612:17;;;;;;;;;-1:-1:-1;;;;;51612:17:2;51589:40;;51746:20;-1:-1:-1;;;;;51746:40:2;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51724:120;;;;-1:-1:-1;;;51724:120:2;;11533:2:10;51724:120:2;;;11515:21:10;11572:2;11552:18;;;11545:30;11611;11591:18;;;11584:58;11659:18;;51724:120:2;11331:352:10;51724:120:2;51921:17;:40;;-1:-1:-1;;;;;;51921:40:2;-1:-1:-1;;;;;51921:40:2;;;;;;;;;52067:107;;;11976:15:10;;;11958:34;;12023:2;12008:18;;12001:43;;;;52067:107:2;;11893:18:10;52067:107:2;11688:362:10;17620:247:2;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;17695:16:::1;:14;:16::i;:::-;;17826:33;17836:10;17848;17826:9;:33::i;3919:133:8:-:0;-1:-1:-1;;;;;;;;;;;;4008:36:8;;;;;;;;4023:19;4028:1;:10;;;4040:1;4023:4;:19::i;:::-;4008:36;;4001:43;3919:133;-1:-1:-1;;;3919:133:8:o;1503:208::-;1601:4;1618:18;1639:15;1644:1;1647:6;1639:4;:15::i;:::-;1618:36;;1672:31;1677:17;1686:7;1677:8;:17::i;:::-;1696:6;1672:4;:31::i;38111:2217:2:-;38336:11;;:163;;-1:-1:-1;;;38336:163:2;;38383:4;38336:163;;;17718:34:10;-1:-1:-1;;;;;17788:15:10;;;17768:18;;;17761:43;17840:15;;;17820:18;;;17813:43;17892:15;;;17872:18;;;17865:43;17924:19;;;17917:35;;;38318:15:2;;38336:11;;:24;;17652:19:10;;38336:163:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38318:181;-1:-1:-1;38514:12:2;;38510:95;;38550:43;;-1:-1:-1;;;38550:43:2;;;;;1595:25:10;;;1568:18;;38550:43:2;1449:177:10;38510:95:2;38678:10;-1:-1:-1;;;;;38666:22:2;:8;-1:-1:-1;;;;;38666:22:2;;38662:98;;;38712:36;;-1:-1:-1;;;38712:36:2;;;;;;;;;;;38662:98;39047:27;39077:99;39096:11;39122:43;;;;;;;;3234:6:3;39122:43:2;;;39077:4;:99::i;:::-;39047:129;-1:-1:-1;39187:29:2;39219:33;39047:129;39219:11;:33;:::i;:::-;39187:65;;39263:23;39289:45;;;;;;;;39304:28;:26;:28::i;:::-;39289:45;;39263:71;-1:-1:-1;39345:27:2;39375:90;39263:71;39435:19;39375:18;:90::i;:::-;39345:120;;39476:24;39519:19;39503:13;;:35;;;;:::i;:::-;39731:13;:32;;;39788:11;;39476:62;;-1:-1:-1;39788:33:2;;39802:19;;39788:33;:::i;:::-;39774:11;:47;-1:-1:-1;;;;;39858:23:2;;;;;;:13;:23;;;;;;:37;;39884:11;;39858:37;:::i;:::-;-1:-1:-1;;;;;39832:23:2;;;;;;;:13;:23;;;;;;:63;;;;39947:25;;;;;;;:62;;39988:21;;39947:62;:::i;:::-;-1:-1:-1;;;;;39906:25:2;;;;;;;:13;:25;;;;;;;:103;;;;40064:53;;;;;;-1:-1:-1;;;;;;;;;;;40064:53:2;;;40095:21;1595:25:10;;1583:2;1568:18;;1449:177;40064:53:2;;;;;;;;40133:54;;1595:25:10;;;40160:4:2;;-1:-1:-1;;;;;40133:54:2;;;-1:-1:-1;;;;;;;;;;;40133:54:2;1583:2:10;1568:18;40133:54:2;;;;;;;40203:117;40239:4;40259:19;40293:16;40203:117;;;;;;;;:::i;:::-;;;;;;;;38266:2062;;;;;;38111:2217;;;;:::o;25461:242::-;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;25540:16:::1;:14;:16::i;:::-;;25649:46;25669:10;25682:12;25649:11;:46::i;20717:245::-:0;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;20796:16:::1;:14;:16::i;:::-;;20905:49;20925:10;20938:12;20952:1;20905:11;:49::i;32392:736::-:0;53538:11;;;;53530:34;;;;-1:-1:-1;;;53530:34:2;;;;;;;:::i;:::-;53589:5;53575:19;;-1:-1:-1;;53575:19:2;;;32565:16:::1;:14;:16::i;:::-;;32594:13;32610:16;-1:-1:-1::0;;;;;32610:31:2::1;;:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32594:49:::0;-1:-1:-1;32658:17:2;;32654:227:::1;;32823:46;::::0;-1:-1:-1;;;32823:46:2;;::::1;::::0;::::1;1595:25:10::0;;;1568:18;;32823:46:2::1;1449:177:10::0;32654:227:2::1;32984:136;33019:10;33044:8;33067:11;33093:16;32984:20;:136::i;:::-;-1:-1:-1::0;;53617:11:2;:18;;-1:-1:-1;;53617:18:2;53631:4;53617:18;;;-1:-1:-1;;32392:736:2:o;44260:909::-;44439:5;;44362:7;;44439:5;;;-1:-1:-1;;;;;44439:5:2;44425:10;:19;44421:87;;44468:28;;-1:-1:-1;;;44468:28:2;;;;;;;;;;;44421:87;8778:15;44593:18;;:38;44589:106;;44655:28;;-1:-1:-1;;;44655:28:2;;;;;;;;;;;44589:106;904:4:3;44767:24:2;:51;44763:120;;;44842:29;;-1:-1:-1;;;44842:29:2;;;;;;;;;;;44763:120;44930:21;;;44962:48;;;;45028:105;;;18487:25:10;;;18543:2;18528:18;;18521:34;;;45028:105:2;;18460:18:10;45028:105:2;18313:248:10;29453:2545:2;29670:11;;:138;;-1:-1:-1;;;29670:138:2;;29723:4;29670:138;;;16510:34:10;-1:-1:-1;;;;;16580:15:10;;;16560:18;;;16553:43;16632:15;;;16612:18;;;16605:43;16664:18;;;16657:34;;;29585:7:2;;;;29670:11;;;:30;;16444:19:10;;29670:138:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29652:156;-1:-1:-1;29823:12:2;;29819:92;;29859:40;;-1:-1:-1;;;29859:40:2;;;;;1595:25:10;;;1568:18;;29859:40:2;1449:177:10;29819:92:2;8778:15;29999:18;;:38;29995:105;;30061:27;;-1:-1:-1;;;30061:27:2;;;;;;;;;;;29995:105;30192:26;30221:37;30249:8;30221:27;:37::i;:::-;30192:66;;30337:24;-1:-1:-1;;30364:11:2;:32;:93;;30446:11;30364:93;;;30412:18;30364:93;30337:120;;31031:25;31059:37;31072:5;31079:16;31059:12;:37::i;:::-;31031:65;-1:-1:-1;31357:25:2;31385:38;31031:65;31385:18;:38;:::i;:::-;31357:66;;31434:23;31475:17;31460:12;;:32;;;;:::i;:::-;-1:-1:-1;;;;;31575:24:2;;;;;;;:14;:24;;;;;;;;;:54;;;31681:11;;31640:38;;;;:52;31703:12;:30;;;31794:159;;18881:15:10;;;18863:34;;18913:18;;18906:43;;;;18965:18;;18958:34;;;19023:2;19008:18;;19001:34;;;19066:3;19051:19;;19044:35;;;31703:30:2;;-1:-1:-1;31794:159:2;;18812:3:10;18797:19;31794:159:2;;;;;;;-1:-1:-1;31973:17:2;;29453:2545;-1:-1:-1;;;;;;;;29453:2545:2:o;858:213:8:-;1040:12;;915:4;;1040:23;;462:4;;1040:23;:::i;46087:1491:2:-;46169:7;;;;8778:15;46410:18;;:38;46406:122;;46472:44;;-1:-1:-1;;;46472:44:2;;;;;1595:25:10;;;1568:18;;46472:44:2;1449:177:10;46406:122:2;47117:35;47130:10;47142:9;47117:12;:35::i;:::-;47099:53;;47200:15;47184:13;;:31;;;;:::i;:::-;47165:50;;47308:16;47292:13;:32;;;;47413:60;47427:10;47439:15;47456:16;47413:60;;;;;;;;:::i;:::-;;;;;;;;2490:1:7;;47554:15:2;;-1:-1:-1;46087:1491:2;-1:-1:-1;;;46087:1491:2:o;9204:930:0:-;9357:10;;9379:26;;-1:-1:-1;;;9379:26:0;;-1:-1:-1;;;;;10962:32:10;;;9379:26:0;;;10944:51:10;11011:18;;;11004:34;;;9357:10:0;;;;;;9379:14;;10917:18:10;;9379:26:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9418:12;9472:16;9511:1;9506:152;;;;9681:2;9676:228;;;;10039:1;10036;10029:12;9506:152;-1:-1:-1;;9601:6:0;-1:-1:-1;9506:152:0;;9676:228;9778:2;9775:1;9772;9757:24;9820:1;9814:8;9803:19;;9465:595;;10089:7;10081:45;;;;-1:-1:-1;;;10081:45:0;;19292:2:10;10081:45:0;;;19274:21:10;19331:2;19311:18;;;19304:30;19370:27;19350:18;;;19343:55;19415:18;;10081:45:0;19090:349:10;10081:45:0;9286:848;;9204:930;;:::o;22092:3193:2:-;22263:19;;;:42;;-1:-1:-1;22286:19:2;;22263:42;22241:144;;;;-1:-1:-1;;;22241:144:2;;19646:2:10;22241:144:2;;;19628:21:10;19685:2;19665:18;;;19658:30;19724:34;19704:18;;;19697:62;-1:-1:-1;;;19775:18:10;;;19768:50;19835:19;;22241:144:2;19444:416:10;22241:144:2;22458:23;22484:45;;;;;;;;22499:28;:26;:28::i;:::-;22484:45;;22458:71;-1:-1:-1;22542:20:2;;22646:18;;22642:757;;22937:14;22922:29;;22981:48;23000:12;23014:14;22981:18;:48::i;:::-;22966:63;;22642:757;;;23309:34;23314:14;23330:12;23309:4;:34::i;:::-;23294:49;;23373:14;23358:29;;22642:757;23471:11;;:114;;-1:-1:-1;;;23471:114:2;;23453:15;;-1:-1:-1;;;;;23471:11:2;;:25;;:114;;23519:4;;23539:8;;23562:12;;23471:114;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23453:132;-1:-1:-1;23600:12:2;;23596:87;;23636:35;;-1:-1:-1;;;23636:35:2;;;;;1595:25:10;;;1568:18;;23636:35:2;1449:177:10;23596:87:2;8778:15;23771:18;;:38;23767:100;;23833:22;;-1:-1:-1;;;23833:22:2;;;;;;;;;;;23767:100;23965:12;23948:14;:12;:14::i;:::-;:29;23944:99;;;24001:30;;-1:-1:-1;;;24001:30:2;;;;;;;;;;;23944:99;24399:12;24385:11;;:26;;;;:::i;:::-;24371:11;:40;-1:-1:-1;;;;;24448:23:2;;;;;;:13;:23;;;;;;:38;;24474:12;;24448:38;:::i;:::-;-1:-1:-1;;;;;24422:23:2;;;;;;:13;:23;;;;;:64;24862:37;24436:8;24886:12;24862:13;:37::i;:::-;24977:47;;1595:25:10;;;25004:4:2;;-1:-1:-1;;;;;24977:47:2;;;-1:-1:-1;;;;;;;;;;;24977:47:2;1583:2:10;1568:18;24977:47:2;;;;;;;25040:44;25047:8;25057:12;25071;25040:44;;;;;;;;:::i;:::-;;;;;;;;25137:11;;:140;;-1:-1:-1;;;25137:140:2;;25184:4;25137:140;;;20530:34:10;-1:-1:-1;;;;;20600:15:10;;;20580:18;;;20573:43;20632:18;;;20625:34;;;20675:18;;;20668:34;;;25137:11:2;;;;:24;;20464:19:10;;25137:140:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22230:3055;;;;22092:3193;;;:::o;18208:2246::-;18341:11;;:108;;-1:-1:-1;;;18341:108:2;;18323:15;;-1:-1:-1;;;;;18341:11:2;;:23;;:108;;18387:4;;18407:6;;18428:10;;18341:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18323:126;-1:-1:-1;18464:12:2;;18460:85;;18500:33;;-1:-1:-1;;;18500:33:2;;;;;1595:25:10;;;1568:18;;18500:33:2;1449:177:10;18460:85:2;8778:15;18633:18;;:38;18629:98;;18695:20;;-1:-1:-1;;;18695:20:2;;;;;;;;;;;18629:98;18739:23;18765:45;;;;;;;;18780:28;:26;:28::i;:::-;18765:45;;18739:71;-1:-1:-1;19419:24:2;19446:32;19459:6;19467:10;19446:12;:32::i;:::-;19419:59;;19671:18;19692:36;19697:16;19715:12;19692:4;:36::i;:::-;19671:57;;20062:10;20048:11;;:24;;;;:::i;:::-;20034:11;:38;-1:-1:-1;;;;;20107:21:2;;;;;;:13;:21;;;;;;:34;;20131:10;;20107:34;:::i;:::-;-1:-1:-1;;;;;20083:21:2;;;;;;:13;:21;;;;;;;:58;;;;20217:42;;;;;20097:6;;20230:16;;20248:10;;20217:42;:::i;:::-;;;;;;;;20275:43;;1595:25:10;;;-1:-1:-1;;;;;20275:43:2;;;20292:4;;-1:-1:-1;;;;;;;;;;;20275:43:2;1583:2:10;1568:18;20275:43:2;;;;;;;20371:11;;:75;;-1:-1:-1;;;20371:75:2;;20402:4;20371:75;;;20530:34:10;-1:-1:-1;;;;;20600:15:10;;;20580:18;;;20573:43;20632:18;;;20625:34;;;20675:18;;;20668:34;;;20371:11:2;;;;:22;;20464:19:10;;20371:75:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18272:2182;;;;18208:2246;;:::o;4656:90:8:-;4709:4;4733:5;4737:1;4733;:5;:::i;3232:90::-;3285:4;3309:5;3313:1;3309;:5;:::i;4060:121::-;4119:4;462;4143:19;4148:1;4151;:10;;;4143:4;:19::i;:::-;:30;;;;:::i;25877:2217:2:-;26040:11;;:114;;-1:-1:-1;;;26040:114:2;;26022:15;;-1:-1:-1;;;;;26040:11:2;;:25;;:114;;26088:4;;26108:8;;26131:12;;26040:114;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;26022:132;-1:-1:-1;26169:12:2;;26165:87;;26205:35;;-1:-1:-1;;;26205:35:2;;;;;1595:25:10;;;1568:18;;26205:35:2;1449:177:10;26165:87:2;8778:15;26340:18;;:38;26336:100;;26402:22;;-1:-1:-1;;;26402:22:2;;;;;;;;;;;26336:100;26545:12;26528:14;:12;:14::i;:::-;:29;26524:93;;;26581:24;;-1:-1:-1;;;26581:24:2;;;;;;;;;;;26524:93;26864:26;26893:37;26921:8;26893:27;:37::i;:::-;26864:66;-1:-1:-1;26941:25:2;26969:33;26990:12;26864:66;26969:33;:::i;:::-;26941:61;;27013:23;27054:12;27039;;:27;;;;:::i;:::-;-1:-1:-1;;;;;27397:24:2;;;;;;:14;:24;;;;;:54;;;27503:11;;27462:38;;;;:52;27525:12;:30;;;27013:53;-1:-1:-1;27927:37:2;27412:8;27951:12;27927:13;:37::i;:::-;28020:66;;;-1:-1:-1;;;;;21802:32:10;;21784:51;;21866:2;21851:18;;21844:34;;;21894:18;;;21887:34;;;21952:2;21937:18;;21930:34;;;28020:66:2;;21771:3:10;21756:19;28020:66:2;;;;;;;25969:2125;;;;25877:2217;;:::o;33607:3092::-;33856:11;;:187;;-1:-1:-1;;;33856:187:2;;33913:4;33856:187;;;17718:34:10;-1:-1:-1;;;;;17788:15:10;;;17768:18;;;17761:43;17840:15;;;17820:18;;;17813:43;17892:15;;;17872:18;;;17865:43;17924:19;;;17917:35;;;33838:15:2;;33856:11;;:34;;17652:19:10;;33856:187:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33838:205;-1:-1:-1;34058:12:2;;34054:90;;34094:38;;-1:-1:-1;;;34094:38:2;;;;;1595:25:10;;;1568:18;;34094:38:2;1449:177:10;34054:90:2;8778:15;34232:18;;:38;34228:103;;34294:25;;-1:-1:-1;;;34294:25:2;;;;;;;;;;;34228:103;8778:15;34436:16;-1:-1:-1;;;;;34436:35:2;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;34432:132;;34517:35;;-1:-1:-1;;;34517:35:2;;;;;;;;;;;34432:132;34637:10;-1:-1:-1;;;;;34625:22:2;:8;-1:-1:-1;;;;;34625:22:2;;34621:93;;;34671:31;;-1:-1:-1;;;34671:31:2;;;;;;;;;;;34621:93;34769:16;34765:84;;34809:28;;-1:-1:-1;;;34809:28:2;;;;;;;;;;;34765:84;-1:-1:-1;;34905:11:2;:32;34901:103;;;34961:31;;-1:-1:-1;;;34961:31:2;;;;;;;;;;;34901:103;35057:25;35085:101;35116:10;35141:8;35164:11;35085:16;:101::i;:::-;35450:11;;:182;;-1:-1:-1;;;35450:182:2;;35057:129;;-1:-1:-1;35401:24:2;;;;-1:-1:-1;;;;;35450:11:2;;:55;;:182;;35532:4;;35564:16;;35057:129;;35450:182;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;35400:232;;;;2490:1:7;35665:16:2;:28;35643:129;;;;-1:-1:-1;;;35643:129:2;;22427:2:10;35643:129:2;;;22409:21:10;22466:2;22446:18;;;22439:30;22505:34;22485:18;;;22478:62;-1:-1:-1;;;22556:18:10;;;22549:49;22615:19;;35643:129:2;22225:415:10;35643:129:2;35880:36;;-1:-1:-1;;;35880:36:2;;-1:-1:-1;;;;;4989:32:10;;;35880:36:2;;;4971:51:10;35920:11:2;;35880:26;;;;;;4944:18:10;;35880:36:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:51;;35858:125;;;;-1:-1:-1;;;35858:125:2;;22847:2:10;35858:125:2;;;22829:21:10;22886:2;22866:18;;;22859:30;22925:26;22905:18;;;22898:54;22969:18;;35858:125:2;22645:348:10;35858:125:2;-1:-1:-1;;;;;36116:42:2;;36153:4;36116:42;36112:343;;;36175:63;36197:4;36204:10;36216:8;36226:11;36175:13;:63::i;:::-;36112:343;;;36297:57;;-1:-1:-1;;;36297:57:2;;2490:1:7;;-1:-1:-1;;;;;36297:22:2;;;;;:57;;36320:10;;36332:8;;36342:11;;36297:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:90;36271:172;;;;-1:-1:-1;;;36271:172:2;;23200:2:10;36271:172:2;;;23182:21:10;23239:2;23219:18;;;23212:30;-1:-1:-1;;;23258:18:10;;;23251:50;23318:18;;36271:172:2;22998:344:10;36271:172:2;36519;;;-1:-1:-1;;;;;23662:15:10;;;23644:34;;23714:15;;;23709:2;23694:18;;23687:43;23746:18;;;23739:34;;;23809:15;;23804:2;23789:18;;23782:43;23856:3;23841:19;;23834:35;;;36519:172:2;;;;;;;23593:3:10;36519:172:2;;;33782:2917;;;;33607:3092;;;;:::o;7128:1372:0:-;7286:10;;7411:52;;-1:-1:-1;;;7411:52:0;;7457:4;7411:52;;;4971:51:10;7212:4:0;;-1:-1:-1;;;;;7286:10:0;;;;7212:4;;7286:10;;7411:37;;4944:18:10;;7411:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7474:47;;-1:-1:-1;;;7474:47:0;;7390:73;;-1:-1:-1;;;;;;7474:18:0;;;;;:47;;7493:4;;7507;;7514:6;;7474:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7534:12;7588:16;7627:1;7622:153;;;;7798:2;7793:229;;;;8158:1;8155;8148:12;7622:153;-1:-1:-1;;7718:6:0;-1:-1:-1;7622:153:0;;7793:229;7896:2;7893:1;7890;7875:24;7938:1;7932:8;7921:19;;7581:598;;8208:7;8200:44;;;;-1:-1:-1;;;8200:44:0;;24082:2:10;8200:44:0;;;24064:21:10;24121:2;24101:18;;;24094:30;24160:26;24140:18;;;24133:54;24204:18;;8200:44:0;23880:348:10;8200:44:0;8342:52;;-1:-1:-1;;;8342:52:0;;8388:4;8342:52;;;4971:51:10;8322:17:0;;-1:-1:-1;;;;;8342:37:0;;;;;4944:18:10;;8342:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8322:72;-1:-1:-1;8412:28:0;8427:13;8322:72;8412:28;:::i;:::-;8405:35;7128:1372;-1:-1:-1;;;;;;;;7128:1372:0:o;5067:126:8:-;5126:4;5150:35;5155:17;5160:1;462:4;5155;:17::i;:::-;5174:10;;5731:4;5755:5;5759:1;5755;:5;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:597:10;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:10;574:15;-1:-1:-1;;570:29:10;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:10:o;616:131::-;-1:-1:-1;;;;;691:31:10;;681:42;;671:70;;737:1;734;727:12;671:70;616:131;:::o;752:315::-;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:10:o;1264:180::-;1323:6;1376:2;1364:9;1355:7;1351:23;1347:32;1344:52;;;1392:1;1389;1382:12;1344:52;-1:-1:-1;1415:23:10;;1264:180;-1:-1:-1;1264:180:10:o;1631:247::-;1690:6;1743:2;1731:9;1722:7;1718:23;1714:32;1711:52;;;1759:1;1756;1749:12;1711:52;1798:9;1785:23;1817:31;1842:5;1817:31;:::i;1883:127::-;1944:10;1939:3;1935:20;1932:1;1925:31;1975:4;1972:1;1965:15;1999:4;1996:1;1989:15;2015:719;2058:5;2111:3;2104:4;2096:6;2092:17;2088:27;2078:55;;2129:1;2126;2119:12;2078:55;2165:6;2152:20;2191:18;2228:2;2224;2221:10;2218:36;;;2234:18;;:::i;:::-;2309:2;2303:9;2277:2;2363:13;;-1:-1:-1;;2359:22:10;;;2383:2;2355:31;2351:40;2339:53;;;2407:18;;;2427:22;;;2404:46;2401:72;;;2453:18;;:::i;:::-;2493:10;2489:2;2482:22;2528:2;2520:6;2513:18;2574:3;2567:4;2562:2;2554:6;2550:15;2546:26;2543:35;2540:55;;;2591:1;2588;2581:12;2540:55;2655:2;2648:4;2640:6;2636:17;2629:4;2621:6;2617:17;2604:54;2702:1;2695:4;2690:2;2682:6;2678:15;2674:26;2667:37;2722:6;2713:15;;;;;;2015:719;;;;:::o;2739:156::-;2805:20;;2865:4;2854:16;;2844:27;;2834:55;;2885:1;2882;2875:12;2834:55;2739:156;;;:::o;2900:1157::-;3086:6;3094;3102;3110;3118;3126;3134;3187:3;3175:9;3166:7;3162:23;3158:33;3155:53;;;3204:1;3201;3194:12;3155:53;3243:9;3230:23;3262:31;3287:5;3262:31;:::i;:::-;3312:5;-1:-1:-1;3369:2:10;3354:18;;3341:32;3382:33;3341:32;3382:33;:::i;:::-;3434:7;-1:-1:-1;3493:2:10;3478:18;;3465:32;3506:33;3465:32;3506:33;:::i;:::-;3558:7;-1:-1:-1;3612:2:10;3597:18;;3584:32;;-1:-1:-1;3667:3:10;3652:19;;3639:33;3691:18;3721:14;;;3718:34;;;3748:1;3745;3738:12;3718:34;3771:50;3813:7;3804:6;3793:9;3789:22;3771:50;:::i;:::-;3761:60;;3874:3;3863:9;3859:19;3846:33;3830:49;;3904:2;3894:8;3891:16;3888:36;;;3920:1;3917;3910:12;3888:36;;3943:52;3987:7;3976:8;3965:9;3961:24;3943:52;:::i;:::-;3933:62;;;4014:37;4046:3;4035:9;4031:19;4014:37;:::i;:::-;4004:47;;2900:1157;;;;;;;;;;:::o;4348:456::-;4425:6;4433;4441;4494:2;4482:9;4473:7;4469:23;4465:32;4462:52;;;4510:1;4507;4500:12;4462:52;4549:9;4536:23;4568:31;4593:5;4568:31;:::i;:::-;4618:5;-1:-1:-1;4675:2:10;4660:18;;4647:32;4688:33;4647:32;4688:33;:::i;:::-;4348:456;;4740:7;;-1:-1:-1;;;4794:2:10;4779:18;;;;4766:32;;4348:456::o;5948:1015::-;6125:6;6133;6141;6149;6157;6165;6218:3;6206:9;6197:7;6193:23;6189:33;6186:53;;;6235:1;6232;6225:12;6186:53;6274:9;6261:23;6293:31;6318:5;6293:31;:::i;:::-;6343:5;-1:-1:-1;6400:2:10;6385:18;;6372:32;6413:33;6372:32;6413:33;:::i;:::-;6465:7;-1:-1:-1;6519:2:10;6504:18;;6491:32;;-1:-1:-1;6574:2:10;6559:18;;6546:32;6597:18;6627:14;;;6624:34;;;6654:1;6651;6644:12;6624:34;6677:50;6719:7;6710:6;6699:9;6695:22;6677:50;:::i;:::-;6667:60;;6780:3;6769:9;6765:19;6752:33;6736:49;;6810:2;6800:8;6797:16;6794:36;;;6826:1;6823;6816:12;6794:36;;6849:52;6893:7;6882:8;6871:9;6867:24;6849:52;:::i;:::-;6839:62;;;6920:37;6952:3;6941:9;6937:19;6920:37;:::i;:::-;6910:47;;5948:1015;;;;;;;;:::o;7624:388::-;7692:6;7700;7753:2;7741:9;7732:7;7728:23;7724:32;7721:52;;;7769:1;7766;7759:12;7721:52;7808:9;7795:23;7827:31;7852:5;7827:31;:::i;:::-;7877:5;-1:-1:-1;7934:2:10;7919:18;;7906:32;7947:33;7906:32;7947:33;:::i;:::-;7999:7;7989:17;;;7624:388;;;;;:::o;8529:480::-;8630:6;8638;8646;8699:2;8687:9;8678:7;8674:23;8670:32;8667:52;;;8715:1;8712;8705:12;8667:52;8754:9;8741:23;8773:31;8798:5;8773:31;:::i;:::-;8823:5;-1:-1:-1;8875:2:10;8860:18;;8847:32;;-1:-1:-1;8931:2:10;8916:18;;8903:32;8944:33;8903:32;8944:33;:::i;:::-;8996:7;8986:17;;;8529:480;;;;;:::o;9014:380::-;9093:1;9089:12;;;;9136;;;9157:61;;9211:4;9203:6;9199:17;9189:27;;9157:61;9264:2;9256:6;9253:14;9233:18;9230:38;9227:161;;;9310:10;9305:3;9301:20;9298:1;9291:31;9345:4;9342:1;9335:15;9373:4;9370:1;9363:15;9227:161;;9014:380;;;:::o;9399:334::-;9601:2;9583:21;;;9640:2;9620:18;;;9613:30;-1:-1:-1;;;9674:2:10;9659:18;;9652:40;9724:2;9709:18;;9399:334::o;9738:184::-;9808:6;9861:2;9849:9;9840:7;9836:23;9832:32;9829:52;;;9877:1;9874;9867:12;9829:52;-1:-1:-1;9900:16:10;;9738:184;-1:-1:-1;9738:184:10:o;11049:277::-;11116:6;11169:2;11157:9;11148:7;11144:23;11140:32;11137:52;;;11185:1;11182;11175:12;11137:52;11217:9;11211:16;11270:5;11263:13;11256:21;11249:5;11246:32;11236:60;;11292:1;11289;11282:12;15134:127;15195:10;15190:3;15186:20;15183:1;15176:31;15226:4;15223:1;15216:15;15250:4;15247:1;15240:15;15266:125;15306:4;15334:1;15331;15328:8;15325:34;;;15339:18;;:::i;:::-;-1:-1:-1;15376:9:10;;15266:125::o;15396:128::-;15436:3;15467:1;15463:6;15460:1;15457:13;15454:39;;;15473:18;;:::i;:::-;-1:-1:-1;15509:9:10;;15396:128::o;15846:168::-;15886:7;15952:1;15948;15944:6;15940:14;15937:1;15934:21;15929:1;15922:9;15915:17;15911:45;15908:71;;;15959:18;;:::i;:::-;-1:-1:-1;15999:9:10;;15846:168::o;16019:217::-;16059:1;16085;16075:132;;16129:10;16124:3;16120:20;16117:1;16110:31;16164:4;16161:1;16154:15;16192:4;16189:1;16182:15;16075:132;-1:-1:-1;16221:9:10;;16019:217::o;16702:353::-;-1:-1:-1;;;;;16930:32:10;;;;16912:51;;16994:2;16979:18;;16972:34;;;;17037:2;17022:18;;17015:34;16900:2;16885:18;;16702:353::o;19865:383::-;-1:-1:-1;;;;;20131:15:10;;;20113:34;;20183:15;;;;20178:2;20163:18;;20156:43;20230:2;20215:18;;20208:34;;;;20063:2;20048:18;;19865:383::o;21975:245::-;22054:6;22062;22115:2;22103:9;22094:7;22090:23;22086:32;22083:52;;;22131:1;22128;22121:12;22083:52;-1:-1:-1;;22154:16:10;;22210:2;22195:18;;;22189:25;22154:16;;22189:25;;-1:-1:-1;21975:245:10:o"
	},
	"Assembly": ".code\n  PUSH 80\t\t\tcontract CErc20Immutable is CE...\n  PUSH 40\t\t\tcontract CErc20Immutable is CE...\n  MSTORE \t\t\tcontract CErc20Immutable is CE...\n  CALLVALUE \t\t\tconstructor(address underlying...\n  DUP1 \t\t\tconstructor(address underlying...\n  ISZERO \t\t\tconstructor(address underlying...\n  PUSH [tag] 1\t\t\tconstructor(address underlying...\n  JUMPI \t\t\tconstructor(address underlying...\n  PUSH 0\t\t\tconstructor(address underlying...\n  DUP1 \t\t\tconstructor(address underlying...\n  REVERT \t\t\tconstructor(address underlying...\ntag 1\t\t\tconstructor(address underlying...\n  JUMPDEST \t\t\tconstructor(address underlying...\n  POP \t\t\tconstructor(address underlying...\n  PUSH 40\t\t\tconstructor(address underlying...\n  MLOAD \t\t\tconstructor(address underlying...\n  PUSHSIZE \t\t\tconstructor(address underlying...\n  CODESIZE \t\t\tconstructor(address underlying...\n  SUB \t\t\tconstructor(address underlying...\n  DUP1 \t\t\tconstructor(address underlying...\n  PUSHSIZE \t\t\tconstructor(address underlying...\n  DUP4 \t\t\tconstructor(address underlying...\n  CODECOPY \t\t\tconstructor(address underlying...\n  DUP2 \t\t\tconstructor(address underlying...\n  ADD \t\t\tconstructor(address underlying...\n  PUSH 40\t\t\tconstructor(address underlying...\n  DUP2 \t\t\tconstructor(address underlying...\n  SWAP1 \t\t\tconstructor(address underlying...\n  MSTORE \t\t\tconstructor(address underlying...\n  PUSH [tag] 2\t\t\tconstructor(address underlying...\n  SWAP2 \t\t\tconstructor(address underlying...\n  PUSH [tag] 3\t\t\tconstructor(address underlying...\n  JUMP [in]\t\t\tconstructor(address underlying...\ntag 2\t\t\tconstructor(address underlying...\n  JUMPDEST \t\t\tconstructor(address underlying...\n  PUSH 3\t\t\tadmin\n  DUP1 \t\t\tadmin = payable(msg.sender)\n  SLOAD \t\t\tadmin = payable(msg.sender)\n  PUSH 100\t\t\t\n  PUSH 1\t\t\t\n  PUSH A8\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  NOT \t\t\t\n  AND \t\t\tadmin = payable(msg.sender)\n  CALLER \t\t\tmsg.sender\n  PUSH 100\t\t\tadmin = payable(msg.sender)\n  MUL \t\t\tadmin = payable(msg.sender)\n  OR \t\t\tadmin = payable(msg.sender)\n  SWAP1 \t\t\tadmin = payable(msg.sender)\n  SSTORE \t\t\tadmin = payable(msg.sender)\n  PUSH [tag] 6\t\t\tinitialize(underlying_, comptr...\n  DUP9 \t\t\tunderlying_\n  DUP9 \t\t\tcomptroller_\n  DUP9 \t\t\tinterestRateModel_\n  DUP9 \t\t\tinitialExchangeRateMantissa_\n  DUP9 \t\t\tname_\n  DUP9 \t\t\tsymbol_\n  DUP9 \t\t\tdecimals_\n  PUSH [tag] 7\t\t\tinitialize\n  JUMP [in]\t\t\tinitialize(underlying_, comptr...\ntag 6\t\t\tinitialize(underlying_, comptr...\n  JUMPDEST \t\t\tinitialize(underlying_, comptr...\n  PUSH 3\t\t\tadmin\n  DUP1 \t\t\tadmin = admin_\n  SLOAD \t\t\tadmin = admin_\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\tadmin = admin_\n  SWAP3 \t\t\tadmin = admin_\n  AND \t\t\tadmin = admin_\n  PUSH 100\t\t\tadmin = admin_\n  MUL \t\t\tadmin = admin_\n  PUSH 100\t\t\t\n  PUSH 1\t\t\t\n  PUSH A8\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  NOT \t\t\t\n  SWAP1 \t\t\tadmin = admin_\n  SWAP3 \t\t\tadmin = admin_\n  AND \t\t\tadmin = admin_\n  SWAP2 \t\t\tadmin = admin_\n  SWAP1 \t\t\tadmin = admin_\n  SWAP2 \t\t\tadmin = admin_\n  OR \t\t\tadmin = admin_\n  SWAP1 \t\t\tadmin = admin_\n  SSTORE \t\t\tadmin = admin_\n  POP \t\t\t\n  PUSH [tag] 80\t\t\tcontract CErc20Immutable is CE...\n  SWAP6 \t\t\tcontract CErc20Immutable is CE...\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP \t\t\tcontract CErc20Immutable is CE...\ntag 7\t\t\t  constructor(address underlyi...\n  JUMPDEST \t\t\t  constructor(address underlyi...\n  PUSH [tag] 10\t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\n  DUP7 \t\t\t);\\r\\n\\r\\n      \n  DUP7 \t\t\t// Initialize the \n  DUP7 \t\t\trket\\r\\n        initialize(und\n  DUP7 \t\t\tlying\n  DUP7 \t\t\t comptr\n  DUP7 \t\t\tler_, int\n  PUSH [tag] 11\t\t\tayable(msg.sende\n  PUSH 20\t\t\tayable(msg.sende\n  SHL \t\t\tayable(msg.sende\n  PUSH [tag] 18446744073709551804\t\t\tayable(msg.sende\n  OR \t\t\tayable(msg.sende\n  PUSH 20\t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\n  SHR \t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\n  JUMP [in]\t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\ntag 10\t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\n  JUMPDEST \t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\n  PUSH 11\t\t\t, decimals\n  DUP1 \t\t\t, decimals_);\\r\\n\\r\\n       \n  SLOAD \t\t\t, decimals_);\\r\\n\\r\\n       \n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  NOT \t\t\t\n  AND \t\t\t, decimals_);\\r\\n\\r\\n       \n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP10 \t\t\t, decimals_);\\r\\n\\r\\n       \n  AND \t\t\t, decimals_);\\r\\n\\r\\n       \n  SWAP1 \t\t\t, decimals_);\\r\\n\\r\\n       \n  DUP2 \t\t\t, decimals_);\\r\\n\\r\\n       \n  OR \t\t\t, decimals_);\\r\\n\\r\\n       \n  SWAP1 \t\t\t, decimals_);\\r\\n\\r\\n       \n  SWAP2 \t\t\t, decimals_);\\r\\n\\r\\n       \n  SSTORE \t\t\t, decimals_);\\r\\n\\r\\n       \n  PUSH 40\t\t\t proper admin now that initial...\n  DUP1 \t\t\t proper admin now that initial...\n  MLOAD \t\t\t proper admin now that initial...\n  PUSH 18160DDD\t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t proper admin now that initial...\n  MSTORE \t\t\t proper admin now that initial...\n  SWAP1 \t\t\t proper admin now that initial...\n  MLOAD \t\t\t proper admin now that initial...\n  PUSH 18160DDD\t\t\t proper admin now that initial...\n  SWAP2 \t\t\t proper admin now that initial...\n  PUSH 4\t\t\t proper admin now that initial...\n  DUP1 \t\t\t proper admin now that initial...\n  DUP3 \t\t\t proper admin now that initial...\n  ADD \t\t\t proper admin now that initial...\n  SWAP3 \t\t\t proper admin now that initial...\n  PUSH 20\t\t\t proper admin now that initial...\n  SWAP3 \t\t\t proper admin now that initial...\n  SWAP1 \t\t\t proper admin now that initial...\n  SWAP2 \t\t\t proper admin now that initial...\n  SWAP1 \t\t\t proper admin now that initial...\n  DUP3 \t\t\t proper admin now that initial...\n  SWAP1 \t\t\t proper admin now that initial...\n  SUB \t\t\t proper admin now that initial...\n  ADD \t\t\t proper admin now that initial...\n  DUP2 \t\t\t proper admin now that initial...\n  DUP7 \t\t\t, decimals_);\\r\\n\\r\\n       \n  GAS \t\t\t proper admin now that initial...\n  STATICCALL \t\t\t proper admin now that initial...\n  ISZERO \t\t\t proper admin now that initial...\n  DUP1 \t\t\t proper admin now that initial...\n  ISZERO \t\t\t proper admin now that initial...\n  PUSH [tag] 13\t\t\t proper admin now that initial...\n  JUMPI \t\t\t proper admin now that initial...\n  RETURNDATASIZE \t\t\t proper admin now that initial...\n  PUSH 0\t\t\t proper admin now that initial...\n  DUP1 \t\t\t proper admin now that initial...\n  RETURNDATACOPY \t\t\t proper admin now that initial...\n  RETURNDATASIZE \t\t\t proper admin now that initial...\n  PUSH 0\t\t\t proper admin now that initial...\n  REVERT \t\t\t proper admin now that initial...\ntag 13\t\t\t proper admin now that initial...\n  JUMPDEST \t\t\t proper admin now that initial...\n  POP \t\t\t proper admin now that initial...\n  POP \t\t\t proper admin now that initial...\n  POP \t\t\t proper admin now that initial...\n  POP \t\t\t proper admin now that initial...\n  PUSH 40\t\t\t proper admin now that initial...\n  MLOAD \t\t\t proper admin now that initial...\n  RETURNDATASIZE \t\t\t proper admin now that initial...\n  PUSH 1F\t\t\t proper admin now that initial...\n  NOT \t\t\t proper admin now that initial...\n  PUSH 1F\t\t\t proper admin now that initial...\n  DUP3 \t\t\t proper admin now that initial...\n  ADD \t\t\t proper admin now that initial...\n  AND \t\t\t proper admin now that initial...\n  DUP3 \t\t\t proper admin now that initial...\n  ADD \t\t\t proper admin now that initial...\n  DUP1 \t\t\t proper admin now that initial...\n  PUSH 40\t\t\t proper admin now that initial...\n  MSTORE \t\t\t proper admin now that initial...\n  POP \t\t\t proper admin now that initial...\n  DUP2 \t\t\t proper admin now that initial...\n  ADD \t\t\t proper admin now that initial...\n  SWAP1 \t\t\t proper admin now that initial...\n  PUSH [tag] 14\t\t\t proper admin now that initial...\n  SWAP2 \t\t\t proper admin now that initial...\n  SWAP1 \t\t\t proper admin now that initial...\n  PUSH [tag] 15\t\t\t proper admin now that initial...\n  JUMP [in]\t\t\t proper admin now that initial...\ntag 14\t\t\t proper admin now that initial...\n  JUMPDEST \t\t\t proper admin now that initial...\n  POP \t\t\t proper admin now that initial...\n  POP \t\t\t  constructor(address underlyi...\n  POP \t\t\t  constructor(address underlyi...\n  POP \t\t\t  constructor(address underlyi...\n  POP \t\t\t  constructor(address underlyi...\n  POP \t\t\t  constructor(address underlyi...\n  POP \t\t\t  constructor(address underlyi...\n  POP \t\t\t  constructor(address underlyi...\n  JUMP [out]\t\t\t  constructor(address underlyi...\ntag 11\t\t\toller_,\\r\\n                Int...\n  JUMPDEST \t\t\toller_,\\r\\n                Int...\n  PUSH 3\t\t\tthe c\n  SLOAD \t\t\tthe c\n  PUSH 100\t\t\tthe c\n  SWAP1 \t\t\tthe c\n  DIV \t\t\tthe c\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  AND \t\t\tthe c\n  CALLER \t\t\t// Creator\n  EQ \t\t\t// Creator of the c\n  PUSH [tag] 17\t\t\t        // Creator of the cont...\n  JUMPI \t\t\t        // Creator of the cont...\n  PUSH 40\t\t\t        // Creator of the cont...\n  MLOAD \t\t\t        // Creator of the cont...\n  PUSH 461BCD\t\t\t\n  PUSH E5\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t        // Creator of the cont...\n  MSTORE \t\t\t        // Creator of the cont...\n  PUSH 20\t\t\t\n  PUSH 4\t\t\t        // Creator of the cont...\n  DUP3 \t\t\t        // Creator of the cont...\n  ADD \t\t\t        // Creator of the cont...\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  DUP1 \t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 6F6E6C792061646D696E206D617920696E697469616C697A6520746865206D61\t\t\t\n  PUSH 44\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 1C9AD95D\t\t\t\n  PUSH E2\t\t\t\n  SHL \t\t\t\n  PUSH 64\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 84\t\t\t\n  ADD \t\t\t\ntag 18\t\t\t        // Creator of the cont...\n  JUMPDEST \t\t\t        // Creator of the cont...\n  PUSH 40\t\t\t        // Creator of the cont...\n  MLOAD \t\t\t        // Creator of the cont...\n  DUP1 \t\t\t        // Creator of the cont...\n  SWAP2 \t\t\t        // Creator of the cont...\n  SUB \t\t\t        // Creator of the cont...\n  SWAP1 \t\t\t        // Creator of the cont...\n  REVERT \t\t\t        // Creator of the cont...\ntag 17\t\t\t        // Creator of the cont...\n  JUMPDEST \t\t\t        // Creator of the cont...\n  PUSH 9\t\t\t);\\r\\n\\r\\n        // I\n  SLOAD \t\t\t);\\r\\n\\r\\n        // I\n  ISZERO \t\t\t);\\r\\n\\r\\n        // Initia\n  DUP1 \t\t\t);\\r\\n\\r\\n        // Initializ...\n  ISZERO \t\t\t);\\r\\n\\r\\n        // Initializ...\n  PUSH [tag] 20\t\t\t);\\r\\n\\r\\n        // Initializ...\n  JUMPI \t\t\t);\\r\\n\\r\\n        // Initializ...\n  POP \t\t\t\n  PUSH A\t\t\t the market\n  SLOAD \t\t\t the market\n  ISZERO \t\t\t the market\\r\\n   \ntag 20\t\t\t);\\r\\n\\r\\n        // Initializ...\n  JUMPDEST \t\t\t);\\r\\n\\r\\n        // Initializ...\n  PUSH [tag] 21\t\t\tn = payable(msg.sender);\\r\\n\\r...\n  JUMPI \t\t\tn = payable(msg.sender);\\r\\n\\r...\n  PUSH 40\t\t\tn = payable(msg.sender);\\r\\n\\r...\n  MLOAD \t\t\tn = payable(msg.sender);\\r\\n\\r...\n  PUSH 461BCD\t\t\t\n  PUSH E5\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\tn = payable(msg.sender);\\r\\n\\r...\n  MSTORE \t\t\tn = payable(msg.sender);\\r\\n\\r...\n  PUSH 20\t\t\t\n  PUSH 4\t\t\tn = payable(msg.sender);\\r\\n\\r...\n  DUP3 \t\t\tn = payable(msg.sender);\\r\\n\\r...\n  ADD \t\t\tn = payable(msg.sender);\\r\\n\\r...\n  MSTORE \t\t\t\n  PUSH 23\t\t\t\n  PUSH 24\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 6D61726B6574206D6179206F6E6C7920626520696E697469616C697A6564206F\t\t\t\n  PUSH 44\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 6E6365\t\t\t\n  PUSH E8\t\t\t\n  SHL \t\t\t\n  PUSH 64\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 84\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 18\t\t\tn = payable(msg.sender);\\r\\n\\r...\n  JUMP \t\t\t\ntag 21\t\t\tn = payable(msg.sender);\\r\\n\\r...\n  JUMPDEST \t\t\tn = payable(msg.sender);\\r\\n\\r...\n  PUSH 7\t\t\tals_);\\r\\n\\r\\n        // Set t...\n  DUP5 \t\t\tals_);\\r\\n\\r\\n        // Set t...\n  SWAP1 \t\t\tals_);\\r\\n\\r\\n        // Set t...\n  SSTORE \t\t\tals_);\\r\\n\\r\\n        // Set t...\n  DUP4 \t\t\tadmin_;\\r\\n    }\\r\\n}\\r\\n\n  PUSH [tag] 24\t\t\tdone\\r\\n        admin = admin_...\n  JUMPI \t\t\tdone\\r\\n        admin = admin_...\n  PUSH 40\t\t\tdone\\r\\n        admin = admin_...\n  MLOAD \t\t\tdone\\r\\n        admin = admin_...\n  PUSH 461BCD\t\t\t\n  PUSH E5\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\tdone\\r\\n        admin = admin_...\n  MSTORE \t\t\tdone\\r\\n        admin = admin_...\n  PUSH 20\t\t\t\n  PUSH 4\t\t\tdone\\r\\n        admin = admin_...\n  DUP3 \t\t\tdone\\r\\n        admin = admin_...\n  ADD \t\t\tdone\\r\\n        admin = admin_...\n  MSTORE \t\t\t\n  PUSH 30\t\t\t\n  PUSH 24\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 696E697469616C2065786368616E67652072617465206D757374206265206772\t\t\t\n  PUSH 44\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 32B0BA32B9103A3430B7103D32B93797\t\t\t\n  PUSH 81\t\t\t\n  SHL \t\t\t\n  PUSH 64\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 84\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 18\t\t\tdone\\r\\n        admin = admin_...\n  JUMP \t\t\t\ntag 24\t\t\tdone\\r\\n        admin = admin_...\n  JUMPDEST \t\t\tdone\\r\\n        admin = admin_...\n  PUSH 0\t\t\t\n  PUSH [tag] 27\t\t\t\n  DUP8 \t\t\t\n  PUSH [tag] 28\t\t\t\n  JUMP [in]\t\t\t\ntag 27\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP1 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 29\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 461BCD\t\t\t\n  PUSH E5\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  PUSH 4\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 1A\t\t\t\n  PUSH 24\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 73657474696E6720636F6D7074726F6C6C6572206661696C6564000000000000\t\t\t\n  PUSH 44\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 64\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 18\t\t\t\n  JUMP \t\t\t\ntag 29\t\t\t\n  JUMPDEST \t\t\t\n  TIMESTAMP \t\t\t\n  PUSH 9\t\t\t\n  SSTORE \t\t\t\n  PUSH DE0B6B3A7640000\t\t\t * @\n  PUSH A\t\t\t\n  SSTORE \t\t\t\n  PUSH [tag] 34\t\t\t\n  DUP7 \t\t\t\n  PUSH [tag] 35\t\t\t\n  JUMP [in]\t\t\t\ntag 34\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP1 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 36\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 461BCD\t\t\t\n  PUSH E5\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  PUSH 4\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 22\t\t\t\n  PUSH 24\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 73657474696E6720696E7465726573742072617465206D6F64656C206661696C\t\t\t\n  PUSH 44\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 1959\t\t\t\n  PUSH F2\t\t\t\n  SHL \t\t\t\n  PUSH 64\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 84\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 18\t\t\t\n  JUMP \t\t\t\ntag 36\t\t\t\n  JUMPDEST \t\t\t\n  DUP4 \t\t\t\n  MLOAD \t\t\t\n  PUSH [tag] 39\t\t\t\n  SWAP1 \t\t\t\n  PUSH 1\t\t\t\n  SWAP1 \t\t\t\n  PUSH 20\t\t\t\n  DUP8 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 40\t\t\t\n  JUMP [in]\t\t\t\ntag 39\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  MLOAD \t\t\t\n  PUSH [tag] 41\t\t\t\n  SWAP1 \t\t\t\n  PUSH 2\t\t\t\n  SWAP1 \t\t\t\n  PUSH 20\t\t\t\n  DUP7 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 40\t\t\t\n  JUMP [in]\t\t\t\ntag 41\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 3\t\t\t\n  DUP1 \t\t\t\n  SLOAD \t\t\t\n  PUSH FF\t\t\t\n  SWAP1 \t\t\t\n  SWAP3 \t\t\t\n  AND \t\t\t\n  PUSH FF\t\t\t\n  NOT \t\t\t\n  SWAP3 \t\t\t\n  DUP4 \t\t\t\n  AND \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  SLOAD \t\t\t\n  SWAP1 \t\t\t\n  SWAP2 \t\t\t\n  AND \t\t\t\n  PUSH 1\t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  SSTORE \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP [out]\t\t\toller_,\\r\\n                Int...\ntag 28\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 3\t\t\t\n  SLOAD \t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  PUSH 100\t\t\t\n  SWAP1 \t\t\t\n  DIV \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  AND \t\t\t\n  CALLER \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 43\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH D219DC1F\t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 43\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 5\t\t\t\n  SLOAD \t\t\t\n  PUSH 40\t\t\t\n  DUP1 \t\t\t\n  MLOAD \t\t\t\n  PUSH 3F1EE9\t\t\t\n  PUSH E1\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  SWAP1 \t\t\t\n  MLOAD \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  SWAP3 \t\t\t\n  DUP4 \t\t\t\n  AND \t\t\t\n  SWAP3 \t\t\t\n  DUP6 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\n  PUSH 7E3DD2\t\t\t\n  SWAP2 \t\t\t\n  PUSH 4\t\t\t\n  DUP1 \t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  SWAP3 \t\t\t\n  PUSH 20\t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  DUP3 \t\t\t\n  SWAP1 \t\t\t\n  SUB \t\t\t\n  ADD \t\t\t\n  DUP2 \t\t\t\n  DUP7 \t\t\t\n  GAS \t\t\t\n  STATICCALL \t\t\t\n  ISZERO \t\t\t\n  DUP1 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 45\t\t\t\n  JUMPI \t\t\t\n  RETURNDATASIZE \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  RETURNDATACOPY \t\t\t\n  RETURNDATASIZE \t\t\t\n  PUSH 0\t\t\t\n  REVERT \t\t\t\ntag 45\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  RETURNDATASIZE \t\t\t\n  PUSH 1F\t\t\t\n  NOT \t\t\t\n  PUSH 1F\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  DUP1 \t\t\t\n  PUSH 40\t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 46\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 47\t\t\t\n  JUMP [in]\t\t\t\ntag 46\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 48\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 461BCD\t\t\t\n  PUSH E5\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  PUSH 4\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 1C\t\t\t\n  PUSH 24\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 6D61726B6572206D6574686F642072657475726E65642066616C736500000000\t\t\t\n  PUSH 44\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 64\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 18\t\t\t\n  JUMP \t\t\t\ntag 48\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 5\t\t\t\n  DUP1 \t\t\t\n  SLOAD \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  NOT \t\t\t\n  AND \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP6 \t\t\t\n  DUP2 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\n  DUP3 \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  SWAP3 \t\t\t\n  SSTORE \t\t\t\n  PUSH 40\t\t\t\n  DUP1 \t\t\t\n  MLOAD \t\t\t\n  SWAP3 \t\t\t\n  DUP5 \t\t\t\n  AND \t\t\t\n  DUP4 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  SWAP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 7AC369DBD14FA5EA3F473ED67CC9D598964A77501540BA6751EB0B3DECF5870D\t\t\t\n  SWAP2 \t\t\t\n  ADD \t\t\t\ntag 51\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  LOG1 \t\t\t\n  POP \t\t\t\n  PUSH 0\t\t\t\n  SWAP3 \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP [out]\t\t\t\ntag 35\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 3\t\t\t\n  SLOAD \t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  DUP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH 100\t\t\t\n  SWAP1 \t\t\t\n  DIV \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  AND \t\t\t\n  CALLER \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 55\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 407FDED5\t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 55\t\t\t\n  JUMPDEST \t\t\t\n  TIMESTAMP \t\t\t\n  PUSH 9\t\t\t\n  SLOAD \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 57\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH BE2A5CB\t\t\t\n  PUSH E1\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  SWAP2 \t\t\t\n  SUB \t\t\t\n  SWAP1 \t\t\t\n  REVERT \t\t\t\ntag 57\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 6\t\t\t\n  PUSH 0\t\t\t\n  SWAP1 \t\t\t\n  SLOAD \t\t\t\n  SWAP1 \t\t\t\n  PUSH 100\t\t\t\n  EXP \t\t\t\n  SWAP1 \t\t\t\n  DIV \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  AND \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  DUP3 \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  AND \t\t\t\n  PUSH 2191F92A\t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP2 \t\t\t\n  PUSH FFFFFFFF\t\t\t\n  AND \t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 4\t\t\t\n  ADD \t\t\t\n  PUSH 20\t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  DUP4 \t\t\t\n  SUB \t\t\t\n  DUP2 \t\t\t\n  DUP7 \t\t\t\n  GAS \t\t\t\n  STATICCALL \t\t\t\n  ISZERO \t\t\t\n  DUP1 \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 59\t\t\t\n  JUMPI \t\t\t\n  RETURNDATASIZE \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  RETURNDATACOPY \t\t\t\n  RETURNDATASIZE \t\t\t\n  PUSH 0\t\t\t\n  REVERT \t\t\t\ntag 59\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  RETURNDATASIZE \t\t\t\n  PUSH 1F\t\t\t\n  NOT \t\t\t\n  PUSH 1F\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  AND \t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  DUP1 \t\t\t\n  PUSH 40\t\t\t\n  MSTORE \t\t\t\n  POP \t\t\t\n  DUP2 \t\t\t\n  ADD \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 60\t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  PUSH [tag] 47\t\t\t\n  JUMP [in]\t\t\t\ntag 60\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 61\t\t\t\n  JUMPI \t\t\t\n  PUSH 40\t\t\t\n  MLOAD \t\t\t\n  PUSH 461BCD\t\t\t\n  PUSH E5\t\t\t\n  SHL \t\t\t\n  DUP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  PUSH 4\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 1C\t\t\t\n  PUSH 24\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 6D61726B6572206D6574686F642072657475726E65642066616C736500000000\t\t\t\n  PUSH 44\t\t\t\n  DUP3 \t\t\t\n  ADD \t\t\t\n  MSTORE \t\t\t\n  PUSH 64\t\t\t\n  ADD \t\t\t\n  PUSH [tag] 18\t\t\t\n  JUMP \t\t\t\ntag 61\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 6\t\t\t\n  DUP1 \t\t\t\n  SLOAD \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  NOT \t\t\t\n  AND \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP6 \t\t\t\n  DUP2 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\n  DUP3 \t\t\t\n  OR \t\t\t\n  SWAP1 \t\t\t\n  SWAP3 \t\t\t\n  SSTORE \t\t\t\n  PUSH 40\t\t\t\n  DUP1 \t\t\t\n  MLOAD \t\t\t\n  SWAP3 \t\t\t\n  DUP5 \t\t\t\n  AND \t\t\t\n  DUP4 \t\t\t\n  MSTORE \t\t\t\n  PUSH 20\t\t\t\n  DUP4 \t\t\t\n  ADD \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  SWAP2 \t\t\t\n  MSTORE \t\t\t\n  PUSH EDFFC32E068C7C95DFD4BDFD5C4D939A084D6B11C4199EAC8436ED234D72F926\t\t\t\n  SWAP2 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 51\t\t\t\n  JUMP \t\t\t\ntag 40\t\t\tcontract CErc20Immutable is CE...\n  JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  DUP1 \t\t\tcontract CErc20Immutable is CE...\n  SLOAD \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 65\t\t\tcontract CErc20Immutable is CE...\n  SWAP1 \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 66\t\t\tcontract CErc20Immutable is CE...\n  JUMP [in]\t\t\tcontract CErc20Immutable is CE...\ntag 65\t\t\tcontract CErc20Immutable is CE...\n  JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n  SWAP1 \t\t\tcontract CErc20Immutable is CE...\n  PUSH 0\t\t\tcontract CErc20Immutable is CE...\n  MSTORE \t\t\tcontract CErc20Immutable is CE...\n  PUSH 20\t\t\tcontract CErc20Immutable is CE...\n  PUSH 0\t\t\tcontract CErc20Immutable is CE...\n  KECCAK256 \t\t\tcontract CErc20Immutable is CE...\n  SWAP1 \t\t\tcontract CErc20Immutable is CE...\n  PUSH 1F\t\t\tcontract CErc20Immutable is CE...\n  ADD \t\t\tcontract CErc20Immutable is CE...\n  PUSH 20\t\t\tcontract CErc20Immutable is CE...\n  SWAP1 \t\t\tcontract CErc20Immutable is CE...\n  DIV \t\t\tcontract CErc20Immutable is CE...\n  DUP2 \t\t\tcontract CErc20Immutable is CE...\n  ADD \t\t\tcontract CErc20Immutable is CE...\n  SWAP3 \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 68\t\t\tcontract CErc20Immutable is CE...\n  JUMPI \t\t\tcontract CErc20Immutable is CE...\n  PUSH 0\t\t\tcontract CErc20Immutable is CE...\n  DUP6 \t\t\tcontract CErc20Immutable is CE...\n  SSTORE \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 71\t\t\tcontract CErc20Immutable is CE...\n  JUMP \t\t\tcontract CErc20Immutable is CE...\ntag 68\t\t\tcontract CErc20Immutable is CE...\n  JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  PUSH 1F\t\t\tcontract CErc20Immutable is CE...\n  LT \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 69\t\t\tcontract CErc20Immutable is CE...\n  JUMPI \t\t\tcontract CErc20Immutable is CE...\n  DUP1 \t\t\tcontract CErc20Immutable is CE...\n  MLOAD \t\t\tcontract CErc20Immutable is CE...\n  PUSH FF\t\t\tcontract CErc20Immutable is CE...\n  NOT \t\t\tcontract CErc20Immutable is CE...\n  AND \t\t\tcontract CErc20Immutable is CE...\n  DUP4 \t\t\tcontract CErc20Immutable is CE...\n  DUP1 \t\t\tcontract CErc20Immutable is CE...\n  ADD \t\t\tcontract CErc20Immutable is CE...\n  OR \t\t\tcontract CErc20Immutable is CE...\n  DUP6 \t\t\tcontract CErc20Immutable is CE...\n  SSTORE \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 71\t\t\tcontract CErc20Immutable is CE...\n  JUMP \t\t\tcontract CErc20Immutable is CE...\ntag 69\t\t\tcontract CErc20Immutable is CE...\n  JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  DUP1 \t\t\tcontract CErc20Immutable is CE...\n  ADD \t\t\tcontract CErc20Immutable is CE...\n  PUSH 1\t\t\tcontract CErc20Immutable is CE...\n  ADD \t\t\tcontract CErc20Immutable is CE...\n  DUP6 \t\t\tcontract CErc20Immutable is CE...\n  SSTORE \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  ISZERO \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 71\t\t\tcontract CErc20Immutable is CE...\n  JUMPI \t\t\tcontract CErc20Immutable is CE...\n  SWAP2 \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  ADD \t\t\tcontract CErc20Immutable is CE...\ntag 70\t\t\tcontract CErc20Immutable is CE...\n  JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  DUP2 \t\t\tcontract CErc20Immutable is CE...\n  GT \t\t\tcontract CErc20Immutable is CE...\n  ISZERO \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 71\t\t\tcontract CErc20Immutable is CE...\n  JUMPI \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  MLOAD \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  SSTORE \t\t\tcontract CErc20Immutable is CE...\n  SWAP2 \t\t\tcontract CErc20Immutable is CE...\n  PUSH 20\t\t\tcontract CErc20Immutable is CE...\n  ADD \t\t\tcontract CErc20Immutable is CE...\n  SWAP2 \t\t\tcontract CErc20Immutable is CE...\n  SWAP1 \t\t\tcontract CErc20Immutable is CE...\n  PUSH 1\t\t\tcontract CErc20Immutable is CE...\n  ADD \t\t\tcontract CErc20Immutable is CE...\n  SWAP1 \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 70\t\t\tcontract CErc20Immutable is CE...\n  JUMP \t\t\tcontract CErc20Immutable is CE...\ntag 71\t\t\tcontract CErc20Immutable is CE...\n  JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n  POP \t\t\t\n  PUSH [tag] 72\t\t\tcontract CErc20Immutable is CE...\n  SWAP3 \t\t\tcontract CErc20Immutable is CE...\n  SWAP2 \t\t\tcontract CErc20Immutable is CE...\n  POP \t\t\t\n  PUSH [tag] 73\t\t\tcontract CErc20Immutable is CE...\n  JUMP [in]\t\t\tcontract CErc20Immutable is CE...\ntag 72\t\t\tcontract CErc20Immutable is CE...\n  JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n  POP \t\t\tcontract CErc20Immutable is CE...\n  SWAP1 \t\t\tcontract CErc20Immutable is CE...\n  JUMP [out]\t\t\tcontract CErc20Immutable is CE...\ntag 73\t\t\tcontract CErc20Immutable is CE...\n  JUMPDEST \t\t\tcontract CErc20Immutable is CE...\ntag 74\t\t\tcontract CErc20Immutable is CE...\n  JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n  DUP1 \t\t\tcontract CErc20Immutable is CE...\n  DUP3 \t\t\tcontract CErc20Immutable is CE...\n  GT \t\t\tcontract CErc20Immutable is CE...\n  ISZERO \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 72\t\t\tcontract CErc20Immutable is CE...\n  JUMPI \t\t\tcontract CErc20Immutable is CE...\n  PUSH 0\t\t\tcontract CErc20Immutable is CE...\n  DUP2 \t\t\tcontract CErc20Immutable is CE...\n  SSTORE \t\t\tcontract CErc20Immutable is CE...\n  PUSH 1\t\t\tcontract CErc20Immutable is CE...\n  ADD \t\t\tcontract CErc20Immutable is CE...\n  PUSH [tag] 74\t\t\tcontract CErc20Immutable is CE...\n  JUMP \t\t\tcontract CErc20Immutable is CE...\ntag 76\t\t\te-Identifier: BSD-3-Clause\\r\\n...\n  JUMPDEST \t\t\te-Identifier: BSD-3-Clause\\r\\n...\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH A0\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP2 \t\t\tl\";\\r\\n\\r\\n/**\\r\\n * @title Co...\n  AND \t\t\tl\";\\r\\n\\r\\n/**\\r\\n * @title Co...\n  DUP2 \t\t\t/CErc20.sol\";\\r\\n\\r\\n/**\\r\\n *...\n  EQ \t\t\t/CErc20.sol\";\\r\\n\\r\\n/**\\r\\n *...\n  PUSH [tag] 82\t\t\t\\nimport \"./CErc20.sol\";\\r\\n\\r...\n  JUMPI \t\t\t\\nimport \"./CErc20.sol\";\\r\\n\\r...\n  PUSH 0\t\t\tl\n  DUP1 \t\t\tt\n  REVERT \t\t\tc20Immutable\ntag 82\t\t\t\\nimport \"./CErc20.sol\";\\r\\n\\r...\n  JUMPDEST \t\t\t\\nimport \"./CErc20.sol\";\\r\\n\\r...\n  POP \t\t\te-Identifier: BSD-3-Clause\\r\\n...\n  JUMP [out]\t\t\te-Identifier: BSD-3-Clause\\r\\n...\ntag 77\t\t\t @notice CTokens which wrap an...\n  JUMPDEST \t\t\t @notice CTokens which wrap an...\n  PUSH 4E487B71\t\t\ttable\\r\\n * \n  PUSH E0\t\t\t im\n  SHL \t\t\t are immutable\\r\\n * @\n  PUSH 0\t\t\ta\n  MSTORE \t\t\trlying and are immutable\\r\\n *...\n  PUSH 41\t\t\t\\r\\nco\n  PUSH 4\t\t\t \n  MSTORE \t\t\tpound\\r\\n */\\r\\ncon\n  PUSH 24\t\t\tle i\n  PUSH 0\t\t\tt\n  REVERT \t\t\tc20Immutable is\ntag 78\t\t\t    /**\\r\\n     * @notice Cons...\n  JUMPDEST \t\t\t    /**\\r\\n     * @notice Cons...\n  PUSH 0\t\t\t     \n  DUP3 \t\t\tng \n  PUSH 1F\t\t\tnder\n  DUP4 \t\t\tof the\n  ADD \t\t\tess of the underl\n  SLT \t\t\taddress of the underlying a\n  PUSH [tag] 85\t\t\tying_ The address of the under...\n  JUMPI \t\t\tying_ The address of the under...\n  PUSH 0\t\t\tp\n  DUP1 \t\t\t*\n  REVERT \t\t\t\\r\\n     * @pa\ntag 85\t\t\tying_ The address of the under...\n  JUMPDEST \t\t\tying_ The address of the under...\n  DUP2 \t\t\taddress of th\n  MLOAD \t\t\taddress of th\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH 40\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP1 \t\t\the address\n  DUP3 \t\t\the address\n  GT \t\t\the address\n  ISZERO \t\t\t_ The address of the interest ...\n  PUSH [tag] 87\t\t\t_ The address of the interest ...\n  JUMPI \t\t\t_ The address of the interest ...\n  PUSH [tag] 87\t\t\t the interest rate\n  PUSH [tag] 77\t\t\t the interest rate\n  JUMP [in]\t\t\t the interest rate\ntag 87\t\t\t the interest rate\n  JUMPDEST \t\t\t the interest rate\n  PUSH 40\t\t\tit\n  MLOAD \t\t\tThe initi\n  PUSH 1F\t\t\tti\n  DUP4 \t\t\te_ ERC-20 nam\n  ADD \t\t\te_ ERC-20 nam\n  PUSH 1F\t\t\t\n  NOT \t\t\t\n  SWAP1 \t\t\t name_ ERC-20 name of \n  DUP2 \t\t\t name_ ERC-20 name of \n  AND \t\t\t name_ ERC-20 name of \n  PUSH 3F\t\t\tis\n  ADD \t\t\taram name_ ERC-20 name of this...\n  AND \t\t\t* @param name_ ERC-20 name of ...\n  DUP2 \t\t\t 1e18\\r\\n     * @param name_ E...\n  ADD \t\t\t 1e18\\r\\n     * @param name_ E...\n  SWAP1 \t\t\t 1e18\\r\\n     * @param name_ E...\n  DUP3 \t\t\tsymbol_ ERC-20 sym\n  DUP3 \t\t\tsymbol_ ERC-20 sym\n  GT \t\t\tsymbol_ ERC-20 sym\n  DUP2 \t\t\tl of this token\\r\\n     \n  DUP4 \t\t\tl of this token\\r\\n     \n  LT \t\t\tl of this token\\r\\n     \n  OR \t\t\tam symbol_ ERC-20 symbol of th...\n  ISZERO \t\t\tparam symbol_ ERC-20 symbol of...\n  PUSH [tag] 89\t\t\tparam symbol_ ERC-20 symbol of...\n  JUMPI \t\t\tparam symbol_ ERC-20 symbol of...\n  PUSH [tag] 89\t\t\taram decimals_ ERC\n  PUSH [tag] 77\t\t\taram decimals_ ERC\n  JUMP [in]\t\t\taram decimals_ ERC\ntag 89\t\t\taram decimals_ ERC\n  JUMPDEST \t\t\taram decimals_ ERC\n  DUP2 \t\t\tof this to\n  PUSH 40\t\t\tio\n  MSTORE \t\t\t precision of this tok\n  DUP4 \t\t\t A\n  DUP2 \t\t\tm admi\n  MSTORE \t\t\t* @param admin_ Ad\n  PUSH 20\t\t\tstra\n  SWAP3 \t\t\tthe administra\n  POP \t\t\tthe administra\n  DUP7 \t\t\tor(\n  DUP4 \t\t\ttr\n  DUP6 \t\t\t c\n  DUP9 \t\t\t */\\r\\n \n  ADD \t\t\t     */\\r\\n    co\n  ADD \t\t\ten\\r\\n     */\\r\\n    constru\n  GT \t\t\ttoken\\r\\n     */\\r\\n    constr...\n  ISZERO \t\t\tis token\\r\\n     */\\r\\n    con...\n  PUSH [tag] 90\t\t\tis token\\r\\n     */\\r\\n    con...\n  JUMPI \t\t\tis token\\r\\n     */\\r\\n    con...\n  PUSH 0\t\t\ty\n  DUP1 \t\t\te\n  REVERT \t\t\tess underlyi\ntag 90\t\t\tis token\\r\\n     */\\r\\n    con...\n  JUMPDEST \t\t\tis token\\r\\n     */\\r\\n    con...\n  PUSH 0\t\t\t \n  SWAP2 \t\t\t          \n  POP \t\t\t          \ntag 91\t\t\tlerInterface comptroller_,\\r\\n...\n  JUMPDEST \t\t\tlerInterface comptroller_,\\r\\n...\n  DUP4 \t\t\tom\n  DUP3 \t\t\te\n  LT \t\t\tface comp\n  ISZERO \t\t\tlerInterface comptroller_,\\r\\n...\n  PUSH [tag] 93\t\t\tlerInterface comptroller_,\\r\\n...\n  JUMPI \t\t\tlerInterface comptroller_,\\r\\n...\n  DUP6 \t\t\tt initialExcha\n  DUP3 \t\t\tt initialExcha\n  ADD \t\t\tt initialExcha\n  DUP4 \t\t\t uint initialExchangeRa\n  ADD \t\t\t uint initialExchangeRa\n  MLOAD \t\t\t       uint initialExchangeRat\n  DUP2 \t\t\tateModel_,\\r\\n  \n  DUP4 \t\t\tateModel_,\\r\\n  \n  ADD \t\t\tateModel_,\\r\\n  \n  DUP5 \t\t\testRateModel_,\\r\\n       \n  ADD \t\t\testRateModel_,\\r\\n       \n  MSTORE \t\t\tl interestRateModel_,\\r\\n     ...\n  SWAP1 \t\t\t,\\r\\n       \n  DUP3 \t\t\t,\\r\\n       \n  ADD \t\t\t,\\r\\n       \n  SWAP1 \t\t\t,\\r\\n       \n  PUSH [tag] 91\t\t\tlerInterface comptroller_,\\r\\n...\n  JUMP \t\t\tlerInterface comptroller_,\\r\\n...\ntag 93\t\t\tlerInterface comptroller_,\\r\\n...\n  JUMPDEST \t\t\tlerInterface comptroller_,\\r\\n...\n  DUP4 \t\t\tst\n  DUP3 \t\t\t \n  GT \t\t\t      str\n  ISZERO \t\t\t         string memory name_,\\...\n  PUSH [tag] 94\t\t\t         string memory name_,\\...\n  JUMPI \t\t\t         string memory name_,\\...\n  PUSH 0\t\t\t,\n  DUP4 \t\t\tmb\n  DUP6 \t\t\try\n  DUP4 \t\t\ting me\n  ADD \t\t\t string memory \n  ADD \t\t\t     string memory symbo\n  MSTORE \t\t\t            string memory symb...\ntag 94\t\t\t         string memory name_,\\...\n  JUMPDEST \t\t\t         string memory name_,\\...\n  SWAP7 \t\t\tals_,\\r\n  SWAP6 \t\t\t    /**\\r\\n     * @notice Cons...\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP [out]\t\t\t    /**\\r\\n     * @notice Cons...\ntag 79\t\t\t      address payable admin_) ...\n  JUMPDEST \t\t\t      address payable admin_) ...\n  DUP1 \t\t\ttialization\\r\\n\n  MLOAD \t\t\ttialization\\r\\n\n  PUSH [tag] 96\t\t\tdmin = payable(msg.sender);\\r\\...\n  DUP2 \t\t\ttialization\\r\\n\n  PUSH [tag] 76\t\t\tdmin = payable(msg.sender);\\r\\...\n  JUMP [in]\t\t\tdmin = payable(msg.sender);\\r\\...\ntag 96\t\t\tdmin = payable(msg.sender);\\r\\...\n  JUMPDEST \t\t\tdmin = payable(msg.sender);\\r\\...\n  SWAP2 \t\t\t      address payable admin_) ...\n  SWAP1 \t\t\t      address payable admin_) ...\n  POP \t\t\t      address payable admin_) ...\n  JUMP [out]\t\t\t      address payable admin_) ...\ntag 3\t\t\tInitialize the market\\r\\n     ...\n  JUMPDEST \t\t\tInitialize the market\\r\\n     ...\n  PUSH 0\t\t\t\\n     \n  DUP1 \t\t\t admin\n  PUSH 0\t\t\t admin\n  DUP1 \t\t\t\\r\\n    \n  PUSH 0\t\t\t\\n}\\r\\n\n  DUP1 \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  PUSH 100\t\t\t\n  DUP10 \t\t\t\n  DUP12 \t\t\t\n  SUB \t\t\t\n  SLT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 98\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 98\t\t\t\n  JUMPDEST \t\t\t\n  DUP9 \t\t\t\n  MLOAD \t\t\t\n  PUSH [tag] 99\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 76\t\t\t\n  JUMP [in]\t\t\t\ntag 99\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 20\t\t\t\n  DUP11 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  SWAP1 \t\t\t\n  SWAP9 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 100\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 76\t\t\t\n  JUMP [in]\t\t\t\ntag 100\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 40\t\t\t\n  DUP11 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  SWAP1 \t\t\t\n  SWAP8 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 101\t\t\t\n  DUP2 \t\t\t\n  PUSH [tag] 76\t\t\t\n  JUMP [in]\t\t\t\ntag 101\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 60\t\t\t\n  DUP11 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  PUSH 80\t\t\t\n  DUP12 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  SWAP2 \t\t\t\n  SWAP8 \t\t\t\n  POP \t\t\t\n  SWAP6 \t\t\t\n  POP \t\t\t\n  PUSH 1\t\t\t\n  PUSH 1\t\t\t\n  PUSH 40\t\t\t\n  SHL \t\t\t\n  SUB \t\t\t\n  DUP1 \t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 102\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 102\t\t\t\n  JUMPDEST \t\t\t\n  PUSH [tag] 103\t\t\t\n  DUP13 \t\t\t\n  DUP4 \t\t\t\n  DUP14 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 78\t\t\t\n  JUMP [in]\t\t\t\ntag 103\t\t\t\n  JUMPDEST \t\t\t\n  SWAP6 \t\t\t\n  POP \t\t\t\n  PUSH A0\t\t\t\n  DUP12 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  DUP1 \t\t\t\n  DUP3 \t\t\t\n  GT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 104\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 104\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  PUSH [tag] 105\t\t\t\n  DUP12 \t\t\t\n  DUP3 \t\t\t\n  DUP13 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 78\t\t\t\n  JUMP [in]\t\t\t\ntag 105\t\t\t\n  JUMPDEST \t\t\t\n  SWAP4 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  PUSH C0\t\t\t\n  DUP10 \t\t\t\n  ADD \t\t\t\n  MLOAD \t\t\t\n  PUSH FF\t\t\t\n  DUP2 \t\t\t\n  AND \t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 106\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 106\t\t\t\n  JUMPDEST \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\n  PUSH [tag] 107\t\t\t\n  PUSH E0\t\t\t\n  DUP11 \t\t\t\n  ADD \t\t\t\n  PUSH [tag] 79\t\t\t\n  JUMP [in]\t\t\t\ntag 107\t\t\t\n  JUMPDEST \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  SWAP3 \t\t\tInitialize the market\\r\\n     ...\n  SWAP6 \t\t\tInitialize the market\\r\\n     ...\n  SWAP9 \t\t\tInitialize the market\\r\\n     ...\n  POP \t\t\tInitialize the market\\r\\n     ...\n  SWAP3 \t\t\tInitialize the market\\r\\n     ...\n  SWAP6 \t\t\tInitialize the market\\r\\n     ...\n  SWAP9 \t\t\tInitialize the market\\r\\n     ...\n  SWAP1 \t\t\tInitialize the market\\r\\n     ...\n  SWAP4 \t\t\tInitialize the market\\r\\n     ...\n  SWAP7 \t\t\tInitialize the market\\r\\n     ...\n  POP \t\t\tInitialize the market\\r\\n     ...\n  JUMP [out]\t\t\tInitialize the market\\r\\n     ...\ntag 15\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  DUP5 \t\t\t\n  SUB \t\t\t\n  SLT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 109\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 109\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  MLOAD \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP [out]\t\t\t\ntag 47\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 0\t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  DUP5 \t\t\t\n  SUB \t\t\t\n  SLT \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 116\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 116\t\t\t\n  JUMPDEST \t\t\t\n  DUP2 \t\t\t\n  MLOAD \t\t\t\n  DUP1 \t\t\t\n  ISZERO \t\t\t\n  ISZERO \t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  PUSH [tag] 117\t\t\t\n  JUMPI \t\t\t\n  PUSH 0\t\t\t\n  DUP1 \t\t\t\n  REVERT \t\t\t\ntag 117\t\t\t\n  JUMPDEST \t\t\t\n  SWAP4 \t\t\t\n  SWAP3 \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  POP \t\t\t\n  JUMP [out]\t\t\t\ntag 66\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 1\t\t\t\n  DUP2 \t\t\t\n  DUP2 \t\t\t\n  SHR \t\t\t\n  SWAP1 \t\t\t\n  DUP3 \t\t\t\n  AND \t\t\t\n  DUP1 \t\t\t\n  PUSH [tag] 122\t\t\t\n  JUMPI \t\t\t\n  PUSH 7F\t\t\t\n  DUP3 \t\t\t\n  AND \t\t\t\n  SWAP2 \t\t\t\n  POP \t\t\t\ntag 122\t\t\t\n  JUMPDEST \t\t\t\n  PUSH 20\t\t\t\n  DUP3 \t\t\t\n  LT \t\t\t\n  DUP2 \t\t\t\n  EQ \t\t\t\n  ISZERO \t\t\t\n  PUSH [tag] 123\t\t\t\n  JUMPI \t\t\t\n  PUSH 4E487B71\t\t\t\n  PUSH E0\t\t\t\n  SHL \t\t\t\n  PUSH 0\t\t\t\n  MSTORE \t\t\t\n  PUSH 22\t\t\t\n  PUSH 4\t\t\t\n  MSTORE \t\t\t\n  PUSH 24\t\t\t\n  PUSH 0\t\t\t\n  REVERT \t\t\t\ntag 123\t\t\t\n  JUMPDEST \t\t\t\n  POP \t\t\t\n  SWAP2 \t\t\t\n  SWAP1 \t\t\t\n  POP \t\t\t\n  JUMP [out]\t\t\t\ntag 80\t\t\t\n  JUMPDEST \t\t\t\n  PUSH #[$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract CErc20Immutable is CE...\n  DUP1 \t\t\tcontract CErc20Immutable is CE...\n  PUSH [$] 0000000000000000000000000000000000000000000000000000000000000000\t\t\tcontract CErc20Immutable is CE...\n  PUSH 0\t\t\tcontract CErc20Immutable is CE...\n  CODECOPY \t\t\tcontract CErc20Immutable is CE...\n  PUSH 0\t\t\tcontract CErc20Immutable is CE...\n  RETURN \t\t\tcontract CErc20Immutable is CE...\n.data\n  0:\n    .code\n      PUSH 80\t\t\tcontract CErc20Immutable is CE...\n      PUSH 40\t\t\tcontract CErc20Immutable is CE...\n      MSTORE \t\t\tcontract CErc20Immutable is CE...\n      CALLVALUE \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      ISZERO \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 1\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 1\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      POP \t\t\tcontract CErc20Immutable is CE...\n      PUSH 4\t\t\tcontract CErc20Immutable is CE...\n      CALLDATASIZE \t\t\tcontract CErc20Immutable is CE...\n      LT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 2\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      CALLDATALOAD \t\t\tcontract CErc20Immutable is CE...\n      PUSH E0\t\t\tcontract CErc20Immutable is CE...\n      SHR \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 7F1E06BE\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 55\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH BD6D894D\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 56\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH F2B3ABBD\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 57\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH F851A440\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 58\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH F851A440\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 51\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH F8F9DA28\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 52\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH FCA7820B\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 53\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH FE9C44AE\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 54\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 58\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH F2B3ABBD\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 48\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH F3FDB15A\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 49\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH F5E3C462\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 50\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 57\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH BD6D894D\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 42\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH C37F68E2\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 43\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH C5EBEAEC\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 44\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH DB006A75\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 45\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH DD62ED3E\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 46\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH E9C714F2\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 47\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 56\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH A0712D68\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 59\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH AA5AF0FD\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 60\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH AA5AF0FD\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 38\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH AE9D70B0\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 39\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH B2A02FF1\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 40\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH B71D1A0C\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 41\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 60\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH A0712D68\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 35\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH A6AFED95\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 36\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH A9059CBB\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 37\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 59\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 7F1E06BE\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 29\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 852A12E3\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 30\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 8F840DDD\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 31\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 95D89B41\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 32\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 95DD9193\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 33\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 99D8C1B4\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 34\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 55\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 3AF9E669\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 61\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 601A0BF1\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 62\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 6C540BAF\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 63\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 6C540BAF\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 25\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 6F307DC3\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 26\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 70A08231\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 27\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 73ACEE98\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 28\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 63\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 601A0BF1\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 22\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 6752E702\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 23\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 69AB3250\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 24\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 62\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 3AF9E669\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 16\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 3B1D21A2\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 17\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 3E941010\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 18\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 4576B5DB\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 19\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 47BD3718\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 20\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 5FE3B567\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 21\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 61\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 182DF0F5\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 64\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 23B872DD\t\t\tcontract CErc20Immutable is CE...\n      GT \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 65\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 23B872DD\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 12\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 2608F818\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 13\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 26782247\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 14\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 313CE567\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 15\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 65\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 182DF0F5\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 9\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 1A31D465\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 10\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 1BE19560\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 11\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 64\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 6FDDE03\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 3\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 95EA7B3\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 4\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH E752702\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 5\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 173B9904\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 6\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 17BFDFBC\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 7\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      PUSH 18160DDD\t\t\tcontract CErc20Immutable is CE...\n      EQ \t\t\tcontract CErc20Immutable is CE...\n      PUSH [tag] 8\t\t\tcontract CErc20Immutable is CE...\n      JUMPI \t\t\tcontract CErc20Immutable is CE...\n    tag 2\t\t\tcontract CErc20Immutable is CE...\n      JUMPDEST \t\t\tcontract CErc20Immutable is CE...\n      PUSH 0\t\t\tcontract CErc20Immutable is CE...\n      DUP1 \t\t\tcontract CErc20Immutable is CE...\n      REVERT \t\t\tcontract CErc20Immutable is CE...\n    tag 3\t\t\toller_ The address\n      JUMPDEST \t\t\toller_ The address\n      PUSH [tag] 66\t\t\toller_ The address\n      PUSH [tag] 67\t\t\toller_ The address\n      JUMP [in]\t\t\toller_ The address\n    tag 66\t\t\toller_ The address\n      JUMPDEST \t\t\toller_ The address\n      PUSH 40\t\t\toller_ The address\n      MLOAD \t\t\toller_ The address\n      PUSH [tag] 68\t\t\toller_ The address\n      SWAP2 \t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      PUSH [tag] 69\t\t\toller_ The address\n      JUMP [in]\t\t\toller_ The address\n    tag 68\t\t\toller_ The address\n      JUMPDEST \t\t\toller_ The address\n      PUSH 40\t\t\toller_ The address\n      MLOAD \t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      SWAP2 \t\t\toller_ The address\n      SUB \t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      RETURN \t\t\toller_ The address\n    tag 4\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 70\t\t\t\n      PUSH [tag] 71\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 72\t\t\t\n      JUMP [in]\t\t\t\n    tag 71\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 73\t\t\t\n      JUMP [in]\t\t\t\n    tag 70\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\tct is admin du\n      ISZERO \t\t\tct is admin du\n      ISZERO \t\t\t contract is admin dur\n      DUP2 \t\t\t // Creator of the contract is...\n      MSTORE \t\t\t // Creator of the contract is...\n      PUSH 20\t\t\t) \n      ADD \t\t\t payable admin_) {\n      PUSH [tag] 68\t\t\t\n      JUMP \t\t\t memory name_,\\r\\n            ...\n    tag 5\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 77\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP [in]\t\t\t\n    tag 77\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 79\t\t\t\n      JUMP [in]\t\t\t\n    tag 76\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 68\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 6\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH 8\t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 7\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 86\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 86\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 88\t\t\t\n      JUMP [in]\t\t\t\n    tag 8\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH D\t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 9\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 94\t\t\t\n      JUMP [in]\t\t\t\n    tag 10\t\t\t  constructor(address underlyi...\n      JUMPDEST \t\t\t  constructor(address underlyi...\n      PUSH [tag] 96\t\t\t  constructor(address underlyi...\n      PUSH [tag] 97\t\t\t  constructor(address underlyi...\n      CALLDATASIZE \t\t\t  constructor(address underlyi...\n      PUSH 4\t\t\t  constructor(address underlyi...\n      PUSH [tag] 98\t\t\t  constructor(address underlyi...\n      JUMP [in]\t\t\t  constructor(address underlyi...\n    tag 97\t\t\t  constructor(address underlyi...\n      JUMPDEST \t\t\t  constructor(address underlyi...\n      PUSH [tag] 99\t\t\t  constructor(address underlyi...\n      JUMP [in]\t\t\t  constructor(address underlyi...\n    tag 96\t\t\t  constructor(address underlyi...\n      JUMPDEST \t\t\t  constructor(address underlyi...\n      STOP \t\t\t  constructor(address underlyi...\n    tag 11\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 96\t\t\t\n      PUSH [tag] 101\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 101\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 103\t\t\t\n      JUMP [in]\t\t\t\n    tag 12\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 70\t\t\t\n      PUSH [tag] 105\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 106\t\t\t\n      JUMP [in]\t\t\t\n    tag 105\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 107\t\t\t\n      JUMP [in]\t\t\t\n    tag 13\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 110\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 72\t\t\t\n      JUMP [in]\t\t\t\n    tag 110\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 111\t\t\t\n      JUMP [in]\t\t\t\n    tag 14\t\t\t          string memory symbol...\n      JUMPDEST \t\t\t          string memory symbol...\n      PUSH 4\t\t\t          string memory symbol...\n      SLOAD \t\t\t          string memory symbol...\n      PUSH [tag] 113\t\t\t          string memory symbol...\n      SWAP1 \t\t\t          string memory symbol...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t          string memory symbol...\n      DUP2 \t\t\t          string memory symbol...\n      JUMP \t\t\t          string memory symbol...\n    tag 113\t\t\t          string memory symbol...\n      JUMPDEST \t\t\t          string memory symbol...\n      PUSH 40\t\t\t          string memory symbol...\n      MLOAD \t\t\t          string memory symbol...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 68\t\t\t          string memory symbol...\n      JUMP \t\t\t\n    tag 15\t\t\t\\r\\n     * @param name_\n      JUMPDEST \t\t\t\\r\\n     * @param name_\n      PUSH 3\t\t\t\\r\\n     * @param name_\n      SLOAD \t\t\t\\r\\n     * @param name_\n      PUSH [tag] 117\t\t\t\\r\\n     * @param name_\n      SWAP1 \t\t\t\\r\\n     * @param name_\n      PUSH FF\t\t\t\\r\\n     * @param name_\n      AND \t\t\t\\r\\n     * @param name_\n      DUP2 \t\t\t\\r\\n     * @param name_\n      JUMP \t\t\t\\r\\n     * @param name_\n    tag 117\t\t\t\\r\\n     * @param name_\n      JUMPDEST \t\t\t\\r\\n     * @param name_\n      PUSH 40\t\t\t\\r\\n     * @param name_\n      MLOAD \t\t\t\\r\\n     * @param name_\n      PUSH FF\t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 68\t\t\t\\r\\n     * @param name_\n      JUMP \t\t\t\n    tag 16\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 122\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 122\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 123\t\t\t\n      JUMP [in]\t\t\t\n    tag 17\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 126\t\t\t\n      JUMP [in]\t\t\t\n    tag 18\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 129\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP [in]\t\t\t\n    tag 129\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 130\t\t\t\n      JUMP [in]\t\t\t\n    tag 19\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 133\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 133\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 135\t\t\t\n      JUMP [in]\t\t\t\n    tag 20\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH B\t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 21\t\t\ttor of the contract is admin d...\n      JUMPDEST \t\t\ttor of the contract is admin d...\n      PUSH 5\t\t\ttor of the contract is admin d...\n      SLOAD \t\t\ttor of the contract is admin d...\n      PUSH [tag] 113\t\t\ttor of the contract is admin d...\n      SWAP1 \t\t\ttor of the contract is admin d...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\ttor of the contract is admin d...\n      DUP2 \t\t\ttor of the contract is admin d...\n      JUMP \t\t\ttor of the contract is admin d...\n    tag 22\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 145\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP [in]\t\t\t\n    tag 145\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 146\t\t\t\n      JUMP [in]\t\t\t\n    tag 23\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH 6379DA05B60000\t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 24\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 25\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 26\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 11\t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 113\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 27\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 162\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 162\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 28\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 166\t\t\t\n      JUMP [in]\t\t\t\n    tag 29\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 96\t\t\t\n      PUSH [tag] 169\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 169\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 170\t\t\t\n      JUMP [in]\t\t\t\n    tag 30\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 172\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP [in]\t\t\t\n    tag 172\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 173\t\t\t\n      JUMP [in]\t\t\t\n    tag 31\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH C\t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 32\t\t\test rate model\\r\\n    \n      JUMPDEST \t\t\test rate model\\r\\n    \n      PUSH [tag] 66\t\t\test rate model\\r\\n    \n      PUSH [tag] 179\t\t\test rate model\\r\\n    \n      JUMP [in]\t\t\test rate model\\r\\n    \n    tag 33\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 182\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 182\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 183\t\t\t\n      JUMP [in]\t\t\t\n    tag 34\t\t\toller_,\\r\\n                Int...\n      JUMPDEST \t\t\toller_,\\r\\n                Int...\n      PUSH [tag] 96\t\t\toller_,\\r\\n                Int...\n      PUSH [tag] 186\t\t\toller_,\\r\\n                Int...\n      CALLDATASIZE \t\t\toller_,\\r\\n                Int...\n      PUSH 4\t\t\toller_,\\r\\n                Int...\n      PUSH [tag] 187\t\t\toller_,\\r\\n                Int...\n      JUMP [in]\t\t\toller_,\\r\\n                Int...\n    tag 186\t\t\toller_,\\r\\n                Int...\n      JUMPDEST \t\t\toller_,\\r\\n                Int...\n      PUSH [tag] 188\t\t\toller_,\\r\\n                Int...\n      JUMP [in]\t\t\toller_,\\r\\n                Int...\n    tag 35\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 190\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP [in]\t\t\t\n    tag 190\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 191\t\t\t\n      JUMP [in]\t\t\t\n    tag 36\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 37\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 70\t\t\t\n      PUSH [tag] 197\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 72\t\t\t\n      JUMP [in]\t\t\t\n    tag 197\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 198\t\t\t\n      JUMP [in]\t\t\t\n    tag 38\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH A\t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 39\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 204\t\t\t\n      JUMP [in]\t\t\t\n    tag 40\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 207\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 106\t\t\t\n      JUMP [in]\t\t\t\n    tag 207\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 208\t\t\t\n      JUMP [in]\t\t\t\n    tag 41\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 211\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 211\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 213\t\t\t\n      JUMP [in]\t\t\t\n    tag 42\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 216\t\t\t\n      JUMP [in]\t\t\t\n    tag 43\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 218\t\t\t\n      PUSH [tag] 219\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 219\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 220\t\t\t\n      JUMP [in]\t\t\t\n    tag 218\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      SWAP5 \t\t\t\n      DUP6 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP6 \t\t\t\n      ADD \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 80\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 68\t\t\t\n      JUMP \t\t\t\n    tag 44\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 224\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP [in]\t\t\t\n    tag 224\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 225\t\t\t\n      JUMP [in]\t\t\t\n    tag 45\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 228\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP [in]\t\t\t\n    tag 228\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 229\t\t\t\n      JUMP [in]\t\t\t\n    tag 46\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 232\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 233\t\t\t\n      JUMP [in]\t\t\t\n    tag 232\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH F\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP5 \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      JUMP \t\t\t\n    tag 47\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 237\t\t\t\n      JUMP [in]\t\t\t\n    tag 48\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 240\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 87\t\t\t\n      JUMP [in]\t\t\t\n    tag 240\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 242\t\t\t\n      JUMP [in]\t\t\t\n    tag 49\t\t\tize(underlying_, comptroller_,...\n      JUMPDEST \t\t\tize(underlying_, comptroller_,...\n      PUSH 6\t\t\tize(underlying_, comptroller_,...\n      SLOAD \t\t\tize(underlying_, comptroller_,...\n      PUSH [tag] 113\t\t\tize(underlying_, comptroller_,...\n      SWAP1 \t\t\tize(underlying_, comptroller_,...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\tize(underlying_, comptroller_,...\n      DUP2 \t\t\tize(underlying_, comptroller_,...\n      JUMP \t\t\tize(underlying_, comptroller_,...\n    tag 50\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 249\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 250\t\t\t\n      JUMP [in]\t\t\t\n    tag 249\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 251\t\t\t\n      JUMP [in]\t\t\t\n    tag 51\t\t\tstRateModel_,\\r\\n             \n      JUMPDEST \t\t\tstRateModel_,\\r\\n             \n      PUSH 3\t\t\tstRateModel_,\\r\\n             \n      SLOAD \t\t\tstRateModel_,\\r\\n             \n      PUSH [tag] 113\t\t\tstRateModel_,\\r\\n             \n      SWAP1 \t\t\tstRateModel_,\\r\\n             \n      PUSH 100\t\t\tstRateModel_,\\r\\n             \n      SWAP1 \t\t\tstRateModel_,\\r\\n             \n      DIV \t\t\tstRateModel_,\\r\\n             \n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\tstRateModel_,\\r\\n             \n      DUP2 \t\t\tstRateModel_,\\r\\n             \n      JUMP \t\t\tstRateModel_,\\r\\n             \n    tag 52\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 257\t\t\t\n      JUMP [in]\t\t\t\n    tag 53\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 76\t\t\t\n      PUSH [tag] 260\t\t\t\n      CALLDATASIZE \t\t\t\n      PUSH 4\t\t\t\n      PUSH [tag] 78\t\t\t\n      JUMP [in]\t\t\t\n    tag 260\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 261\t\t\t\n      JUMP [in]\t\t\t\n    tag 54\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 70\t\t\t\n      PUSH 1\t\t\t\n      DUP2 \t\t\t\n      JUMP \t\t\t\n    tag 67\t\t\toller_ The address\n      JUMPDEST \t\t\toller_ The address\n      PUSH 1\t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      SLOAD \t\t\toller_ The address\n      PUSH [tag] 266\t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      PUSH [tag] 267\t\t\toller_ The address\n      JUMP [in]\t\t\toller_ The address\n    tag 266\t\t\toller_ The address\n      JUMPDEST \t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      PUSH 1F\t\t\toller_ The address\n      ADD \t\t\toller_ The address\n      PUSH 20\t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      SWAP2 \t\t\toller_ The address\n      DIV \t\t\toller_ The address\n      MUL \t\t\toller_ The address\n      PUSH 20\t\t\toller_ The address\n      ADD \t\t\toller_ The address\n      PUSH 40\t\t\toller_ The address\n      MLOAD \t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      DUP2 \t\t\toller_ The address\n      ADD \t\t\toller_ The address\n      PUSH 40\t\t\toller_ The address\n      MSTORE \t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      SWAP3 \t\t\toller_ The address\n      SWAP2 \t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      DUP2 \t\t\toller_ The address\n      DUP2 \t\t\toller_ The address\n      MSTORE \t\t\toller_ The address\n      PUSH 20\t\t\toller_ The address\n      ADD \t\t\toller_ The address\n      DUP3 \t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      SLOAD \t\t\toller_ The address\n      PUSH [tag] 268\t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      PUSH [tag] 267\t\t\toller_ The address\n      JUMP [in]\t\t\toller_ The address\n    tag 268\t\t\toller_ The address\n      JUMPDEST \t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      ISZERO \t\t\toller_ The address\n      PUSH [tag] 269\t\t\toller_ The address\n      JUMPI \t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      PUSH 1F\t\t\toller_ The address\n      LT \t\t\toller_ The address\n      PUSH [tag] 270\t\t\toller_ The address\n      JUMPI \t\t\toller_ The address\n      PUSH 100\t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      DUP4 \t\t\toller_ The address\n      SLOAD \t\t\toller_ The address\n      DIV \t\t\toller_ The address\n      MUL \t\t\toller_ The address\n      DUP4 \t\t\toller_ The address\n      MSTORE \t\t\toller_ The address\n      SWAP2 \t\t\toller_ The address\n      PUSH 20\t\t\toller_ The address\n      ADD \t\t\toller_ The address\n      SWAP2 \t\t\toller_ The address\n      PUSH [tag] 269\t\t\toller_ The address\n      JUMP \t\t\toller_ The address\n    tag 270\t\t\toller_ The address\n      JUMPDEST \t\t\toller_ The address\n      DUP3 \t\t\toller_ The address\n      ADD \t\t\toller_ The address\n      SWAP2 \t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      PUSH 0\t\t\toller_ The address\n      MSTORE \t\t\toller_ The address\n      PUSH 20\t\t\toller_ The address\n      PUSH 0\t\t\toller_ The address\n      KECCAK256 \t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n    tag 271\t\t\toller_ The address\n      JUMPDEST \t\t\toller_ The address\n      DUP2 \t\t\toller_ The address\n      SLOAD \t\t\toller_ The address\n      DUP2 \t\t\toller_ The address\n      MSTORE \t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      PUSH 1\t\t\toller_ The address\n      ADD \t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      PUSH 20\t\t\toller_ The address\n      ADD \t\t\toller_ The address\n      DUP1 \t\t\toller_ The address\n      DUP4 \t\t\toller_ The address\n      GT \t\t\toller_ The address\n      PUSH [tag] 271\t\t\toller_ The address\n      JUMPI \t\t\toller_ The address\n      DUP3 \t\t\toller_ The address\n      SWAP1 \t\t\toller_ The address\n      SUB \t\t\toller_ The address\n      PUSH 1F\t\t\toller_ The address\n      AND \t\t\toller_ The address\n      DUP3 \t\t\toller_ The address\n      ADD \t\t\toller_ The address\n      SWAP2 \t\t\toller_ The address\n    tag 269\t\t\toller_ The address\n      JUMPDEST \t\t\toller_ The address\n      POP \t\t\toller_ The address\n      POP \t\t\toller_ The address\n      POP \t\t\toller_ The address\n      POP \t\t\toller_ The address\n      POP \t\t\toller_ The address\n      DUP2 \t\t\toller_ The address\n      JUMP [out]\t\t\toller_ The address\n    tag 73\t\t\t\n      JUMPDEST \t\t\t\n      CALLER \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH F\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      DUP6 \t\t\t\n      MSTORE \t\t\t\n      SWAP3 \t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 273\t\t\t\n      SWAP1 \t\t\t\n      DUP8 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\\r\\n}\\r\\n\n      SWAP1 \t\t\t\\r\\n}\\r\\n\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 273\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 79\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 275\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 276\t\t\t\n      JUMP [in]\t\t\t\n    tag 275\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 88\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 278\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 279\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 278\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 282\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 282\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 283\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 183\t\t\t\n      JUMP [in]\t\t\t\n    tag 283\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 94\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 285\t\t\t\n      PUSH [tag] 286\t\t\t\n      JUMP [in]\t\t\t\n    tag 285\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 99\t\t\t  constructor(address underlyi...\n      JUMPDEST \t\t\t  constructor(address underlyi...\n      PUSH [tag] 288\t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\n      DUP7 \t\t\t);\\r\\n\\r\\n      \n      DUP7 \t\t\t// Initialize the \n      DUP7 \t\t\trket\\r\\n        initialize(und\n      DUP7 \t\t\tlying\n      DUP7 \t\t\t comptr\n      DUP7 \t\t\tler_, int\n      PUSH [tag] 188\t\t\tayable(msg.sende\n      JUMP [in]\t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\n    tag 288\t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\n      JUMPDEST \t\t\tayable(msg.sender);\\r\\n\\r\\n   ...\n      PUSH 11\t\t\t, decimals\n      DUP1 \t\t\t, decimals_);\\r\\n\\r\\n       \n      SLOAD \t\t\t, decimals_);\\r\\n\\r\\n       \n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      AND \t\t\t, decimals_);\\r\\n\\r\\n       \n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP10 \t\t\t, decimals_);\\r\\n\\r\\n       \n      AND \t\t\t, decimals_);\\r\\n\\r\\n       \n      SWAP1 \t\t\t, decimals_);\\r\\n\\r\\n       \n      DUP2 \t\t\t, decimals_);\\r\\n\\r\\n       \n      OR \t\t\t, decimals_);\\r\\n\\r\\n       \n      SWAP1 \t\t\t, decimals_);\\r\\n\\r\\n       \n      SWAP2 \t\t\t, decimals_);\\r\\n\\r\\n       \n      SSTORE \t\t\t, decimals_);\\r\\n\\r\\n       \n      PUSH 40\t\t\t proper admin now that initial...\n      DUP1 \t\t\t proper admin now that initial...\n      MLOAD \t\t\t proper admin now that initial...\n      PUSH 18160DDD\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t proper admin now that initial...\n      MSTORE \t\t\t proper admin now that initial...\n      SWAP1 \t\t\t proper admin now that initial...\n      MLOAD \t\t\t proper admin now that initial...\n      PUSH 18160DDD\t\t\t proper admin now that initial...\n      SWAP2 \t\t\t proper admin now that initial...\n      PUSH 4\t\t\t proper admin now that initial...\n      DUP1 \t\t\t proper admin now that initial...\n      DUP3 \t\t\t proper admin now that initial...\n      ADD \t\t\t proper admin now that initial...\n      SWAP3 \t\t\t proper admin now that initial...\n      PUSH 20\t\t\t proper admin now that initial...\n      SWAP3 \t\t\t proper admin now that initial...\n      SWAP1 \t\t\t proper admin now that initial...\n      SWAP2 \t\t\t proper admin now that initial...\n      SWAP1 \t\t\t proper admin now that initial...\n      DUP3 \t\t\t proper admin now that initial...\n      SWAP1 \t\t\t proper admin now that initial...\n      SUB \t\t\t proper admin now that initial...\n      ADD \t\t\t proper admin now that initial...\n      DUP2 \t\t\t proper admin now that initial...\n      DUP7 \t\t\t, decimals_);\\r\\n\\r\\n       \n      GAS \t\t\t proper admin now that initial...\n      STATICCALL \t\t\t proper admin now that initial...\n      ISZERO \t\t\t proper admin now that initial...\n      DUP1 \t\t\t proper admin now that initial...\n      ISZERO \t\t\t proper admin now that initial...\n      PUSH [tag] 290\t\t\t proper admin now that initial...\n      JUMPI \t\t\t proper admin now that initial...\n      RETURNDATASIZE \t\t\t proper admin now that initial...\n      PUSH 0\t\t\t proper admin now that initial...\n      DUP1 \t\t\t proper admin now that initial...\n      RETURNDATACOPY \t\t\t proper admin now that initial...\n      RETURNDATASIZE \t\t\t proper admin now that initial...\n      PUSH 0\t\t\t proper admin now that initial...\n      REVERT \t\t\t proper admin now that initial...\n    tag 290\t\t\t proper admin now that initial...\n      JUMPDEST \t\t\t proper admin now that initial...\n      POP \t\t\t proper admin now that initial...\n      POP \t\t\t proper admin now that initial...\n      POP \t\t\t proper admin now that initial...\n      POP \t\t\t proper admin now that initial...\n      PUSH 40\t\t\t proper admin now that initial...\n      MLOAD \t\t\t proper admin now that initial...\n      RETURNDATASIZE \t\t\t proper admin now that initial...\n      PUSH 1F\t\t\t proper admin now that initial...\n      NOT \t\t\t proper admin now that initial...\n      PUSH 1F\t\t\t proper admin now that initial...\n      DUP3 \t\t\t proper admin now that initial...\n      ADD \t\t\t proper admin now that initial...\n      AND \t\t\t proper admin now that initial...\n      DUP3 \t\t\t proper admin now that initial...\n      ADD \t\t\t proper admin now that initial...\n      DUP1 \t\t\t proper admin now that initial...\n      PUSH 40\t\t\t proper admin now that initial...\n      MSTORE \t\t\t proper admin now that initial...\n      POP \t\t\t proper admin now that initial...\n      DUP2 \t\t\t proper admin now that initial...\n      ADD \t\t\t proper admin now that initial...\n      SWAP1 \t\t\t proper admin now that initial...\n      PUSH [tag] 291\t\t\t proper admin now that initial...\n      SWAP2 \t\t\t proper admin now that initial...\n      SWAP1 \t\t\t proper admin now that initial...\n      PUSH [tag] 292\t\t\t proper admin now that initial...\n      JUMP [in]\t\t\t proper admin now that initial...\n    tag 291\t\t\t proper admin now that initial...\n      JUMPDEST \t\t\t proper admin now that initial...\n      POP \t\t\t proper admin now that initial...\n      POP \t\t\t  constructor(address underlyi...\n      POP \t\t\t  constructor(address underlyi...\n      POP \t\t\t  constructor(address underlyi...\n      POP \t\t\t  constructor(address underlyi...\n      POP \t\t\t  constructor(address underlyi...\n      POP \t\t\t  constructor(address underlyi...\n      POP \t\t\t  constructor(address underlyi...\n      JUMP [out]\t\t\t  constructor(address underlyi...\n    tag 103\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3\t\t\t\n      SLOAD \t\t\t\n      PUSH 100\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 294\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 2F\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 4345726332303A3A7377656570546F6B656E3A206F6E6C792061646D696E2063\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 616E20737765657020746F6B656E73\t\t\t\n      PUSH 88\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 294\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 11\t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 297\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 32\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 4345726332303A3A7377656570546F6B656E3A2063616E206E6F742073776565\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 38103AB73232B9363CB4B733903A37B5B2B7\t\t\t\n      PUSH 71\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 297\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 70A08231\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 70A08231\t\t\t\n      SWAP1 \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 302\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 302\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 303\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 303\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH A9059CBB\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      PUSH 100\t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      DIV \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH A9059CBB\t\t\t\n      SWAP1 \t\t\t\n      PUSH 44\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      DUP1 \t\t\t\n      EXTCODESIZE \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 306\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 306\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 308\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 308\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 107\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 310\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 310\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 313\t\t\t\n      CALLER \t\t\t\n      DUP7 \t\t\t\n      DUP7 \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 314\t\t\t\n      JUMP [in]\t\t\t\n    tag 313\t\t\t\n      JUMPDEST \t\t\t\n      EQ \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 111\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 316\t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 317\t\t\t\n      JUMP [in]\t\t\t\n    tag 316\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 123\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 319\t\t\t\n      PUSH [tag] 216\t\t\t\n      JUMP [in]\t\t\t\n    tag 319\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP5 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 320\t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 321\t\t\t\n      JUMP [in]\t\t\t\n    tag 320\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 126\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 285\t\t\t\n      PUSH [tag] 324\t\t\t\n      JUMP [in]\t\t\t\n    tag 130\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 326\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 327\t\t\t\n      JUMP [in]\t\t\t\n    tag 326\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 135\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 329\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH D219DC1F\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 329\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 3F1EE9\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP3 \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      SWAP3 \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      PUSH 7E3DD2\t\t\t\n      SWAP2 \t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      SWAP3 \t\t\t\n      PUSH 20\t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      ADD \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 331\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 331\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 332\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 333\t\t\t\n      JUMP [in]\t\t\t\n    tag 332\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 334\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1C\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6D61726B6572206D6574686F642072657475726E65642066616C736500000000\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 334\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      SSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      SWAP3 \t\t\t\n      DUP5 \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 7AC369DBD14FA5EA3F473ED67CC9D598964A77501540BA6751EB0B3DECF5870D\t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n    tag 337\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 146\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 340\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 340\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 343\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 343\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 283\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 345\t\t\t\n      JUMP [in]\t\t\t\n    tag 166\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 348\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 348\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 351\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 351\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH B\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 170\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3\t\t\t\n      SLOAD \t\t\t\n      PUSH 100\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 353\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 2D\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6F6E6C79207468652061646D696E206D6179207365742074686520636F6D702D\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6C696B652064656C6567617465\t\t\t\n      PUSH 98\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 353\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 11\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 17066A57\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 4\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 5C19A95C\t\t\t\n      SWAP1 \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      DUP1 \t\t\t\n      EXTCODESIZE \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 357\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 357\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 359\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 359\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 173\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 275\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 362\t\t\t\n      JUMP [in]\t\t\t\n    tag 179\t\t\test rate model\\r\\n    \n      JUMPDEST \t\t\test rate model\\r\\n    \n      PUSH 2\t\t\test rate model\\r\\n    \n      DUP1 \t\t\test rate model\\r\\n    \n      SLOAD \t\t\test rate model\\r\\n    \n      PUSH [tag] 266\t\t\test rate model\\r\\n    \n      SWAP1 \t\t\test rate model\\r\\n    \n      PUSH [tag] 267\t\t\test rate model\\r\\n    \n      JUMP [in]\t\t\test rate model\\r\\n    \n    tag 183\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 326\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 370\t\t\t\n      JUMP [in]\t\t\t\n    tag 188\t\t\toller_,\\r\\n                Int...\n      JUMPDEST \t\t\toller_,\\r\\n                Int...\n      PUSH 3\t\t\tthe c\n      SLOAD \t\t\tthe c\n      PUSH 100\t\t\tthe c\n      SWAP1 \t\t\tthe c\n      DIV \t\t\tthe c\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\tthe c\n      CALLER \t\t\t// Creator\n      EQ \t\t\t// Creator of the c\n      PUSH [tag] 372\t\t\t        // Creator of the cont...\n      JUMPI \t\t\t        // Creator of the cont...\n      PUSH 40\t\t\t        // Creator of the cont...\n      MLOAD \t\t\t        // Creator of the cont...\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t        // Creator of the cont...\n      MSTORE \t\t\t        // Creator of the cont...\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t        // Creator of the cont...\n      DUP3 \t\t\t        // Creator of the cont...\n      ADD \t\t\t        // Creator of the cont...\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6F6E6C792061646D696E206D617920696E697469616C697A6520746865206D61\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1C9AD95D\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t        // Creator of the cont...\n      JUMP \t\t\t\n    tag 372\t\t\t        // Creator of the cont...\n      JUMPDEST \t\t\t        // Creator of the cont...\n      PUSH 9\t\t\t);\\r\\n\\r\\n        // I\n      SLOAD \t\t\t);\\r\\n\\r\\n        // I\n      ISZERO \t\t\t);\\r\\n\\r\\n        // Initia\n      DUP1 \t\t\t);\\r\\n\\r\\n        // Initializ...\n      ISZERO \t\t\t);\\r\\n\\r\\n        // Initializ...\n      PUSH [tag] 375\t\t\t);\\r\\n\\r\\n        // Initializ...\n      JUMPI \t\t\t);\\r\\n\\r\\n        // Initializ...\n      POP \t\t\t\n      PUSH A\t\t\t the market\n      SLOAD \t\t\t the market\n      ISZERO \t\t\t the market\\r\\n   \n    tag 375\t\t\t);\\r\\n\\r\\n        // Initializ...\n      JUMPDEST \t\t\t);\\r\\n\\r\\n        // Initializ...\n      PUSH [tag] 376\t\t\tn = payable(msg.sender);\\r\\n\\r...\n      JUMPI \t\t\tn = payable(msg.sender);\\r\\n\\r...\n      PUSH 40\t\t\tn = payable(msg.sender);\\r\\n\\r...\n      MLOAD \t\t\tn = payable(msg.sender);\\r\\n\\r...\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tn = payable(msg.sender);\\r\\n\\r...\n      MSTORE \t\t\tn = payable(msg.sender);\\r\\n\\r...\n      PUSH 20\t\t\t\n      PUSH 4\t\t\tn = payable(msg.sender);\\r\\n\\r...\n      DUP3 \t\t\tn = payable(msg.sender);\\r\\n\\r...\n      ADD \t\t\tn = payable(msg.sender);\\r\\n\\r...\n      MSTORE \t\t\t\n      PUSH 23\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6D61726B6574206D6179206F6E6C7920626520696E697469616C697A6564206F\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6E6365\t\t\t\n      PUSH E8\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\tn = payable(msg.sender);\\r\\n\\r...\n      JUMP \t\t\t\n    tag 376\t\t\tn = payable(msg.sender);\\r\\n\\r...\n      JUMPDEST \t\t\tn = payable(msg.sender);\\r\\n\\r...\n      PUSH 7\t\t\tals_);\\r\\n\\r\\n        // Set t...\n      DUP5 \t\t\tals_);\\r\\n\\r\\n        // Set t...\n      SWAP1 \t\t\tals_);\\r\\n\\r\\n        // Set t...\n      SSTORE \t\t\tals_);\\r\\n\\r\\n        // Set t...\n      DUP4 \t\t\tadmin_;\\r\\n    }\\r\\n}\\r\\n\n      PUSH [tag] 379\t\t\tdone\\r\\n        admin = admin_...\n      JUMPI \t\t\tdone\\r\\n        admin = admin_...\n      PUSH 40\t\t\tdone\\r\\n        admin = admin_...\n      MLOAD \t\t\tdone\\r\\n        admin = admin_...\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\tdone\\r\\n        admin = admin_...\n      MSTORE \t\t\tdone\\r\\n        admin = admin_...\n      PUSH 20\t\t\t\n      PUSH 4\t\t\tdone\\r\\n        admin = admin_...\n      DUP3 \t\t\tdone\\r\\n        admin = admin_...\n      ADD \t\t\tdone\\r\\n        admin = admin_...\n      MSTORE \t\t\t\n      PUSH 30\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 696E697469616C2065786368616E67652072617465206D757374206265206772\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 32B0BA32B9103A3430B7103D32B93797\t\t\t\n      PUSH 81\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\tdone\\r\\n        admin = admin_...\n      JUMP \t\t\t\n    tag 379\t\t\tdone\\r\\n        admin = admin_...\n      JUMPDEST \t\t\tdone\\r\\n        admin = admin_...\n      PUSH 0\t\t\t\n      PUSH [tag] 382\t\t\t\n      DUP8 \t\t\t\n      PUSH [tag] 135\t\t\t\n      JUMP [in]\t\t\t\n    tag 382\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 383\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1A\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 73657474696E6720636F6D7074726F6C6C6572206661696C6564000000000000\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 383\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SSTORE \t\t\t\n      PUSH DE0B6B3A7640000\t\t\t * @\n      PUSH A\t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 388\t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 389\t\t\t\n      JUMP [in]\t\t\t\n    tag 388\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 390\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 73657474696E6720696E7465726573742072617465206D6F64656C206661696C\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1959\t\t\t\n      PUSH F2\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 390\t\t\t\n      JUMPDEST \t\t\t\n      DUP4 \t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 393\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 394\t\t\t\n      JUMP [in]\t\t\t\n    tag 393\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 395\t\t\t\n      SWAP1 \t\t\t\n      PUSH 2\t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      DUP7 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 394\t\t\t\n      JUMP [in]\t\t\t\n    tag 395\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 3\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      AND \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      SWAP3 \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\toller_,\\r\\n                Int...\n    tag 191\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 275\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 398\t\t\t\n      JUMP [in]\t\t\t\n    tag 194\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      TIMESTAMP \t\t\t\n      SWAP1 \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 401\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 401\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 402\t\t\t\n      PUSH [tag] 324\t\t\t\n      JUMP [in]\t\t\t\n    tag 402\t\t\t\n      JUMPDEST \t\t\t\n      PUSH B\t\t\t\n      SLOAD \t\t\t\n      PUSH C\t\t\t\n      SLOAD \t\t\t\n      PUSH A\t\t\t\n      SLOAD \t\t\t\n      PUSH 6\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 15F24053\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP7 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 44\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP5 \t\t\t\n      SWAP6 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP4 \t\t\t\n      SWAP2 \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      PUSH 0\t\t\t\n      SWAP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 15F24053\t\t\t\n      SWAP1 \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 406\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 406\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 407\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 407\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 5D21DBA000\t\t\t of this t\n      DUP2 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 408\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1C\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 626F72726F772072617465206973206162737572646C79206869676800000000\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 408\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 411\t\t\t\n      DUP8 \t\t\t\n      DUP10 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 411\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 413\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 414\t\t\t\n      JUMP [in]\t\t\t\n    tag 413\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 415\t\t\t\n      DUP3 \t\t\t\n      DUP9 \t\t\t\n      PUSH [tag] 321\t\t\t\n      JUMP [in]\t\t\t\n    tag 415\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 416\t\t\t\n      DUP9 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 416\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 418\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      PUSH 8\t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP5 \t\t\t\n      DUP11 \t\t\t\n      PUSH [tag] 419\t\t\t\n      JUMP [in]\t\t\t\n    tag 418\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 420\t\t\t\n      DUP6 \t\t\t\n      DUP10 \t\t\t\n      DUP11 \t\t\t\n      PUSH [tag] 419\t\t\t\n      JUMP [in]\t\t\t\n    tag 420\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 9\t\t\t\n      DUP15 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH A\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH B\t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH C\t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      DUP14 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH 4DEC04E750CA11537CABCD8A9EAB06494DE08DA3735BC8871CD41250E190BC04\t\t\t\n      SWAP1 \t\t\t\n      PUSH 80\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      PUSH 0\t\t\t\n      SWAP14 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 198\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 423\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 423\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 426\t\t\t\n      CALLER \t\t\t\n      DUP1 \t\t\t\n      DUP7 \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 314\t\t\t\n      JUMP [in]\t\t\t\n    tag 426\t\t\t\n      JUMPDEST \t\t\t\n      EQ \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 204\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 6\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH B8168816\t\t\t\n      PUSH [tag] 428\t\t\t\n      PUSH [tag] 324\t\t\t\n      JUMP [in]\t\t\t\n    tag 428\t\t\t\n      JUMPDEST \t\t\t\n      PUSH B\t\t\t\n      SLOAD \t\t\t\n      PUSH C\t\t\t\n      SLOAD \t\t\t\n      PUSH 8\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      PUSH E0\t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      SHL \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP5 \t\t\t\n      SWAP1 \t\t\t\n      SWAP5 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 44\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n    tag 429\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 431\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 431\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 285\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 208\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 434\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 434\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 437\t\t\t\n      CALLER \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 438\t\t\t\n      JUMP [in]\t\t\t\n    tag 437\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 213\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 440\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 5CB56C2B\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 440\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP5 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      SSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      MSTORE \t\t\t\n      PUSH CA4F2F25D0898EDD99413412FB94012F9E54EC8142F9B093E7720646A95B16A9\t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 337\t\t\t\n      JUMP \t\t\t\n    tag 216\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 444\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 444\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 447\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 447\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 448\t\t\t\n      PUSH [tag] 94\t\t\t\n      JUMP [in]\t\t\t\n    tag 448\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 220\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 450\t\t\t\n      DUP8 \t\t\t\n      PUSH [tag] 370\t\t\t\n      JUMP [in]\t\t\t\n    tag 450\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 451\t\t\t\n      PUSH [tag] 286\t\t\t\n      JUMP [in]\t\t\t\n    tag 451\t\t\t\n      JUMPDEST \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP4 \t\t\t\n      JUMP [out]\t\t\t\n    tag 225\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 275\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 454\t\t\t\n      JUMP [in]\t\t\t\n    tag 229\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 275\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 457\t\t\t\n      JUMP [in]\t\t\t\n    tag 237\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 460\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      CALLER \t\t\t\n      ISZERO \t\t\t\n    tag 460\t\t\t\n      JUMPDEST \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 461\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1BA24F29\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 461\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 4\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      PUSH 100\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MUL \t\t\t\n      PUSH 100\t\t\t\n      PUSH 1\t\t\t\n      PUSH A8\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      OR \t\t\t\n      SWAP7 \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      SSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      SWAP5 \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      DUP7 \t\t\t\n      MSTORE \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      SWAP6 \t\t\t\n      DIV \t\t\t\n      AND \t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      PUSH F9FFABCA9C8276E99321725BCB43FB076A6C66A54B7F21C4E8146D8519B417DC\t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      PUSH 4\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP1 \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      AND \t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH CA4F2F25D0898EDD99413412FB94012F9E54EC8142F9B093E7720646A95B16A9\t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 242\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 465\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 465\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 326\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 389\t\t\t\n      JUMP [in]\t\t\t\n    tag 251\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 468\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 469\t\t\t\n      JUMP [in]\t\t\t\n    tag 468\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 257\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 6\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH 15F24053\t\t\t\n      PUSH [tag] 471\t\t\t\n      PUSH [tag] 324\t\t\t\n      JUMP [in]\t\t\t\n    tag 471\t\t\t\n      JUMPDEST \t\t\t\n      PUSH B\t\t\t\n      SLOAD \t\t\t\n      PUSH C\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      PUSH E0\t\t\t\n      DUP7 \t\t\t\n      SWAP1 \t\t\t\n      SHL \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 429\t\t\t\n      JUMP \t\t\t\n    tag 261\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 477\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 477\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 480\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 480\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 283\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 482\t\t\t\n      JUMP [in]\t\t\t\n    tag 276\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 484\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 484\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 487\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 487\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 488\t\t\t\n      CALLER \t\t\t\n      CALLER \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 489\t\t\t\n      JUMP [in]\t\t\t\n    tag 488\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      JUMP [out]\t\t\t\n    tag 286\t\t\t\n      JUMPDEST \t\t\t\n      PUSH D\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 491\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 7\t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 491\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 493\t\t\t\n      PUSH [tag] 324\t\t\t\n      JUMP [in]\t\t\t\n    tag 493\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH C\t\t\t\n      SLOAD \t\t\t\n      PUSH B\t\t\t\n      SLOAD \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 494\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 494\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 495\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 495\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 496\t\t\t\n      PUSH DE0B6B3A7640000\t\t\t * @\n      DUP5 \t\t\t\n      PUSH [tag] 497\t\t\t\n      JUMP [in]\t\t\t\n    tag 496\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 498\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 499\t\t\t\n      JUMP [in]\t\t\t\n    tag 498\t\t\t\n      JUMPDEST \t\t\t\n      SWAP6 \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 492\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 314\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 17B9B84B\t\t\t\n      PUSH E3\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 24\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP5 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 44\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      DUP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH BDCDC258\t\t\t\n      SWAP1 \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 504\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 504\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 505\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 505\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 506\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 89D4277\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\\r\\n}\\r\\n\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 506\t\t\t\n      JUMPDEST \t\t\t\n      DUP4 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP6 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 508\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 8CD22D19\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 508\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP6 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP8 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 509\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      PUSH [tag] 510\t\t\t\n      JUMP \t\t\t\n    tag 509\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP1 \t\t\t\n      DUP7 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH F\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      DUP11 \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n    tag 510\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 511\t\t\t\n      DUP6 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 511\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP9 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP2 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 512\t\t\t\n      SWAP1 \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 512\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP9 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      SWAP2 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 513\t\t\t\n      SWAP1 \t\t\t\n      DUP9 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 513\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP1 \t\t\t\n      DUP12 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      KECCAK256 \t\t\t\n      DUP7 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP2 \t\t\t\n      DUP12 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      DUP5 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 514\t\t\t\n      JUMPI \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP1 \t\t\t\n      DUP11 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH F\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      DUP15 \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n    tag 514\t\t\t\n      JUMPDEST \t\t\t\n      DUP8 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP10 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 20\t\t\t\n      PUSH data ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC\t\t\t\n      DUP4 \t\t\t\n      CODECOPY \t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      DUP10 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 515\t\t\t\n      SWAP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\\r\\n}\\r\\n\n      SWAP1 \t\t\t\\r\\n}\\r\\n\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 515\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SWAP10 \t\t\t\n      SWAP9 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 317\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 517\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 517\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 520\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 520\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 521\t\t\t\n      CALLER \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 489\t\t\t\n      JUMP [in]\t\t\t\n    tag 521\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 321\t\t\ts payable admin_) {\\r\\n       ...\n      JUMPDEST \t\t\ts payable admin_) {\\r\\n       ...\n      PUSH 0\t\t\tliza\n      DUP1 \t\t\t admin = payable(m\n      PUSH [tag] 523\t\t\tsender);\\r\\n\\r\\n   \n      DUP5 \t\t\tr\n      DUP5 \t\t\t\\r\\n\\r\\n  \n      PUSH [tag] 414\t\t\tsend\n      JUMP [in]\t\t\tsender);\\r\\n\\r\\n   \n    tag 523\t\t\tsender);\\r\\n\\r\\n   \n      JUMPDEST \t\t\tsender);\\r\\n\\r\\n   \n      SWAP1 \t\t\t admin = payable(msg.sender);\\...\n      POP \t\t\t admin = payable(msg.sender);\\...\n      PUSH [tag] 524\t\t\t the market\\r\\n    \n      DUP2 \t\t\tet\\r\\n   \n      PUSH [tag] 525\t\t\t the mar\n      JUMP [in]\t\t\t the market\\r\\n    \n    tag 524\t\t\t the market\\r\\n    \n      JUMPDEST \t\t\t the market\\r\\n    \n      SWAP5 \t\t\ttialize the market\\r\\n    \n      SWAP4 \t\t\ts payable admin_) {\\r\\n       ...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\ts payable admin_) {\\r\\n       ...\n    tag 324\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 11\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 70A08231\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 70A08231\t\t\t\n      SWAP1 \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 529\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 529\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 530\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 530\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 327\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 532\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 532\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 535\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 535\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 536\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 537\t\t\t\n      JUMP [in]\t\t\t\n    tag 536\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 345\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 539\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH F7E5E6D\t\t\t\n      PUSH E4\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 539\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 541\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH DFF50CB\t\t\t\n      PUSH E4\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 541\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 542\t\t\t\n      PUSH [tag] 324\t\t\t\n      JUMP [in]\t\t\t\n    tag 542\t\t\t\n      JUMPDEST \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 543\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 3345E999\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 543\t\t\t\n      JUMPDEST \t\t\t\n      PUSH C\t\t\t\n      SLOAD \t\t\t\n      DUP4 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 544\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 78D29805\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 544\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      PUSH C\t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 545\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 545\t\t\t\n      JUMPDEST \t\t\t\n      PUSH C\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH 3\t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 546\t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 547\t\t\t\n      JUMP [in]\t\t\t\n    tag 546\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3BAD0C59CF2F06E7314077049F48A93578CD16F5EF92329F1DAB1420A99C177E\t\t\t\n      PUSH 3\t\t\t\n      PUSH 1\t\t\t\n      SWAP1 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      EXP \t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 337\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 549\t\t\t\n      JUMP [in]\t\t\t\n    tag 362\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 551\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 551\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 554\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 554\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 555\t\t\t\n      CALLER \t\t\t\n      PUSH 0\t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 556\t\t\t\n      JUMP [in]\t\t\t\n    tag 555\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      JUMP [out]\t\t\t\n    tag 370\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 10\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      KECCAK256 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 558\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 558\t\t\t\n      JUMPDEST \t\t\t\n      PUSH A\t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP2 \t\t\t\n      PUSH [tag] 559\t\t\t\n      SWAP2 \t\t\t\n      PUSH [tag] 497\t\t\t\n      JUMP [in]\t\t\t\n    tag 559\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SLOAD \t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 524\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 499\t\t\t\n      JUMP [in]\t\t\t\n    tag 389\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 563\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 407FDED5\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 563\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 565\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH BE2A5CB\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 565\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 6\t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      EXP \t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP3 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH 2191F92A\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 567\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 567\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 568\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 333\t\t\t\n      JUMP [in]\t\t\t\n    tag 568\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 569\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1C\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6D61726B6572206D6574686F642072657475726E65642066616C736500000000\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 569\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 6\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      SSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      SWAP3 \t\t\t\n      DUP5 \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH EDFFC32E068C7C95DFD4BDFD5C4D939A084D6B11C4199EAC8436ED234D72F926\t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 337\t\t\t\n      JUMP \t\t\t\n    tag 398\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 574\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 574\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 577\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 577\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 555\t\t\t\n      CALLER \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 579\t\t\t\n      JUMP [in]\t\t\t\n    tag 414\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 583\t\t\t\n      DUP6 \t\t\t\n      PUSH 0\t\t\t\n      ADD \t\t\t\n      MLOAD \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 584\t\t\t\n      JUMP [in]\t\t\t\n    tag 583\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 419\t\t\tn now that initialization is d...\n      JUMPDEST \t\t\tn now that initialization is d...\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 586\t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 414\t\t\t\n      JUMP [in]\t\t\t\n    tag 586\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 498\t\t\t\n      PUSH [tag] 588\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 525\t\t\t\n      JUMP [in]\t\t\t\n    tag 588\t\t\t\n      JUMPDEST \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 589\t\t\t\n      JUMP [in]\t\t\t\n    tag 438\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH D02F7351\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP7 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 24\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 44\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP5 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 64\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH D02F7351\t\t\t\n      SWAP1 \t\t\t\n      PUSH A4\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 594\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 594\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 595\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 595\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 596\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 63E00E33\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\\r\\n}\\r\\n\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 596\t\t\t\n      JUMPDEST \t\t\t\n      DUP4 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 598\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 3A946267\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 598\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 599\t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      PUSH 6379DA05B60000\t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      PUSH [tag] 600\t\t\t\n      JUMP [in]\t\t\t\n    tag 599\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 601\t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 601\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 602\t\t\t\n      PUSH [tag] 286\t\t\t\n      JUMP [in]\t\t\t\n    tag 602\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 603\t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 321\t\t\t\n      JUMP [in]\t\t\t\n    tag 603\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      PUSH C\t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 604\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 604\t\t\t\n      JUMPDEST \t\t\t\n      PUSH C\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH D\t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 605\t\t\t\n      SWAP1 \t\t\t\n      DUP7 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 605\t\t\t\n      JUMPDEST \t\t\t\n      PUSH D\t\t\t\n      SSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP9 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 606\t\t\t\n      SWAP1 \t\t\t\n      DUP9 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 606\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP1 \t\t\t\n      DUP11 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      SSTORE \t\t\t\n      SWAP1 \t\t\t\n      DUP12 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 607\t\t\t\n      SWAP1 \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 607\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP1 \t\t\t\n      DUP12 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      SSTORE \t\t\t\n      SWAP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP11 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 20\t\t\t\n      PUSH data ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC\t\t\t\n      DUP4 \t\t\t\n      CODECOPY \t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 608\t\t\t\n      SWAP1 \t\t\t\n      DUP9 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\\r\\n}\\r\\n\n      SWAP1 \t\t\t\\r\\n}\\r\\n\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 608\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP11 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 20\t\t\t\n      PUSH data ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC\t\t\t\n      DUP4 \t\t\t\n      CODECOPY \t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      PUSH A91E67C5EA634CD43A12C5A482724B03DE01E85CA68702A53D0C2F45CB7C1DC5\t\t\t\n      ADDRESS \t\t\t\n      DUP4 \t\t\t\n      DUP4 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 610\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 549\t\t\t\n      JUMP [in]\t\t\t\n    tag 610\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 454\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 613\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 613\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 616\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 616\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 555\t\t\t\n      CALLER \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 618\t\t\t\n      JUMP [in]\t\t\t\n    tag 457\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 620\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 620\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 623\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 623\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 555\t\t\t\n      CALLER \t\t\t\n      DUP3 \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 556\t\t\t\n      JUMP [in]\t\t\t\n    tag 469\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      AND \t\t\t\n      PUSH [tag] 626\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 280\t\t\t\n      JUMP [in]\t\t\t\n    tag 626\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 629\t\t\t\n      PUSH [tag] 194\t\t\t\n      JUMP [in]\t\t\t\n    tag 629\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH A6AFED95\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 631\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 631\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 632\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 632\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 633\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 3EEA49B7\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\\r\\n}\\r\\n\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 633\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 635\t\t\t\n      CALLER \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 636\t\t\t\n      JUMP [in]\t\t\t\n    tag 635\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      PUSH 1\t\t\t\n      OR \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 482\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 3\t\t\t\n      SLOAD \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 100\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      CALLER \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 638\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1205B57B\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 638\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 640\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 7DFCA6B7\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 640\t\t\t\n      JUMPDEST \t\t\t\n      PUSH DE0B6B3A7640000\t\t\t   C\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 641\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 717220F3\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 641\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 8\t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      SWAP1 \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH AAA68312E2EA9D50E16AF5068410AB56E1A1FD06037B1A35664812C30F821460\t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 337\t\t\t\n      JUMP \t\t\t\n    tag 489\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 12004531\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 24\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP5 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 44\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      DUP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 24008A62\t\t\t\n      SWAP1 \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 647\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 647\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 648\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 648\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 649\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 8C81362D\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\\r\\n}\\r\\n\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 649\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 652\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH C9021E2F\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 652\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 653\t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 370\t\t\t\n      JUMP [in]\t\t\t\n    tag 653\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      DUP6 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 654\t\t\t\n      JUMPI \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 655\t\t\t\n      JUMP \t\t\t\n    tag 654\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n    tag 655\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 656\t\t\t\n      DUP9 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 657\t\t\t\n      JUMP [in]\t\t\t\n    tag 656\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 658\t\t\t\n      DUP3 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 658\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      PUSH B\t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 659\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 659\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP11 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 10\t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      DUP8 \t\t\t\n      DUP2 \t\t\t\n      SSTORE \t\t\t\n      PUSH A\t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      SSTORE \t\t\t\n      PUSH B\t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP4 \t\t\t\n      DUP16 \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      MSTORE \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 80\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH 1A2A22CB034D26D1854BDC6666A5B91FE25EFBBB5DCAD3B0355478D6F5C362A1\t\t\t\n      SWAP1 \t\t\t\n      PUSH A0\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      POP \t\t\t\n      SWAP1 \t\t\t\n      SWAP9 \t\t\t\n      SWAP8 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 525\t\t\tonstructor(address underlying_...\n      JUMPDEST \t\t\tonstructor(address underlying_...\n      DUP1 \t\t\tntissa_,\\r\\n  \n      MLOAD \t\t\tntissa_,\\r\\n  \n      PUSH 0\t\t\tlerI\n      SWAP1 \t\t\tlerI\n      PUSH [tag] 326\t\t\tntissa_,\\r\\n             \n      SWAP1 \t\t\tntissa_,\\r\\n             \n      PUSH DE0B6B3A7640000\t\t\t * @\n      SWAP1 \t\t\t * @\n      PUSH [tag] 499\t\t\tntissa_,\\r\\n             \n      JUMP [in]\t\t\tntissa_,\\r\\n             \n    tag 537\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      DUP1 \t\t\t\n      DUP1 \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 666\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 38ACF799\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\\r\\n}\\r\\n\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 666\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 668\t\t\t\n      CALLER \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 657\t\t\t\n      JUMP [in]\t\t\t\n    tag 668\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      PUSH C\t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 669\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 669\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      PUSH C\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      POP \t\t\t\n      PUSH A91E67C5EA634CD43A12C5A482724B03DE01E85CA68702A53D0C2F45CB7C1DC5\t\t\t\n      CALLER \t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 670\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 549\t\t\t\n      JUMP [in]\t\t\t\n    tag 670\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      PUSH 0\t\t\t\n      SWAP6 \t\t\t\n      SWAP1 \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 547\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 11\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH A9059CBB\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP5 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 4\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH A9059CBB\t\t\t\n      SWAP1 \t\t\t\n      PUSH 44\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      DUP1 \t\t\t\n      EXTCODESIZE \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 673\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 673\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 675\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 675\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 677\t\t\t\n      JUMPI \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 678\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 677\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 676\t\t\t\n      JUMP \t\t\t\n    tag 678\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      PUSH 0\t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 676\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 679\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 19\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 544F4B454E5F5452414E534645525F4F55545F4641494C454400000000000000\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 679\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 556\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 683\t\t\t\n      JUMPI \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n    tag 683\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 684\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 34\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6F6E65206F662072656465656D546F6B656E73496E206F722072656465656D41\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 6D6F756E74496E206D757374206265207A65726F\t\t\t\n      PUSH 60\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 684\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 687\t\t\t\n      PUSH [tag] 286\t\t\t\n      JUMP [in]\t\t\t\n    tag 687\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      DUP5 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 688\t\t\t\n      JUMPI \t\t\t\n      DUP5 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 689\t\t\t\n      DUP4 \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 321\t\t\t\n      JUMP [in]\t\t\t\n    tag 689\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 690\t\t\t\n      JUMP \t\t\t\n    tag 688\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 691\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 692\t\t\t\n      JUMP [in]\t\t\t\n    tag 691\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n    tag 690\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH EABE7D91\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH EABE7D91\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 693\t\t\t\n      SWAP1 \t\t\t\n      ADDRESS \t\t\t\n      SWAP1 \t\t\t\n      DUP12 \t\t\t\n      SWAP1 \t\t\t\n      DUP9 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 694\t\t\t\n      JUMP [in]\t\t\t\n    tag 693\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 696\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 696\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 697\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 697\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 698\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 480F4247\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\\r\\n}\\r\\n\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 698\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 701\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 97B5CFCD\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 701\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 702\t\t\t\n      PUSH [tag] 324\t\t\t\n      JUMP [in]\t\t\t\n    tag 702\t\t\t\n      JUMPDEST \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 703\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 91240A1B\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 703\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      PUSH D\t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 704\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 704\t\t\t\n      JUMPDEST \t\t\t\n      PUSH D\t\t\t\n      SSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 705\t\t\t\n      SWAP1 \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 705\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP9 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 706\t\t\t\n      DUP8 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 547\t\t\t\n      JUMP [in]\t\t\t\n    tag 706\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP10 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 20\t\t\t\n      PUSH data ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC\t\t\t\n      DUP4 \t\t\t\n      CODECOPY \t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      PUSH E5B754FB1ABB7F01B499791D0B820AE3B6AF3424AC1C59768EDB53F4EC31A929\t\t\t\n      DUP8 \t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 708\t\t\t\n      SWAP4 \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 549\t\t\t\n      JUMP [in]\t\t\t\n    tag 708\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 51DFF989\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP10 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 24\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP7 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 51DFF989\t\t\t\n      SWAP1 \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      DUP1 \t\t\t\n      EXTCODESIZE \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 711\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 711\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 713\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 713\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 579\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 4EF4C3E1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 4EF4C3E1\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 715\t\t\t\n      SWAP1 \t\t\t\n      ADDRESS \t\t\t\n      SWAP1 \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 694\t\t\t\n      JUMP [in]\t\t\t\n    tag 715\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 718\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 718\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 719\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 719\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 720\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 49ABD4FD\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\\r\\n}\\r\\n\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 720\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 723\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 38D88597\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 723\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 724\t\t\t\n      PUSH [tag] 286\t\t\t\n      JUMP [in]\t\t\t\n    tag 724\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 725\t\t\t\n      DUP6 \t\t\t\n      DUP6 \t\t\t\n      PUSH [tag] 657\t\t\t\n      JUMP [in]\t\t\t\n    tag 725\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 726\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 692\t\t\t\n      JUMP [in]\t\t\t\n    tag 726\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      PUSH D\t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 727\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 727\t\t\t\n      JUMPDEST \t\t\t\n      PUSH D\t\t\t\n      SSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP7 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 728\t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 728\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH E\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      SSTORE \t\t\t\n      MLOAD \t\t\t\n      PUSH 4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 729\t\t\t\n      SWAP1 \t\t\t\n      DUP9 \t\t\t\n      SWAP1 \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 549\t\t\t\n      JUMP [in]\t\t\t\n    tag 729\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      ADDRESS \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 20\t\t\t\n      PUSH data ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC\t\t\t\n      DUP4 \t\t\t\n      CODECOPY \t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG3 \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 41C728B9\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP9 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 24\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP5 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 41C728B9\t\t\t\n      SWAP1 \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      DUP1 \t\t\t\n      EXTCODESIZE \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 733\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 733\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 735\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 735\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 584\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 320\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 497\t\t\t\n      JUMP [in]\t\t\t\n    tag 589\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 320\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 600\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH DE0B6B3A7640000\t\t\t * @\n      PUSH [tag] 741\t\t\t\n      DUP5 \t\t\t\n      DUP5 \t\t\t\n      PUSH 0\t\t\t\n      ADD \t\t\t\n      MLOAD \t\t\t\n      PUSH [tag] 584\t\t\t\n      JUMP [in]\t\t\t\n    tag 741\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 320\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 499\t\t\t\n      JUMP [in]\t\t\t\n    tag 618\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 368F5153\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH DA3D454C\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 744\t\t\t\n      SWAP1 \t\t\t\n      ADDRESS \t\t\t\n      SWAP1 \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 694\t\t\t\n      JUMP [in]\t\t\t\n    tag 744\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 746\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 746\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 747\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 747\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 748\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 918DB40F\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\\r\\n}\\r\\n\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 748\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 751\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH E8D8C61\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 751\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 752\t\t\t\n      PUSH [tag] 324\t\t\t\n      JUMP [in]\t\t\t\n    tag 752\t\t\t\n      JUMPDEST \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 753\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 48C25881\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 753\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 754\t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 370\t\t\t\n      JUMP [in]\t\t\t\n    tag 754\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 755\t\t\t\n      DUP5 \t\t\t\n      DUP4 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 755\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP5 \t\t\t\n      PUSH B\t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 756\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 417\t\t\t\n      JUMP [in]\t\t\t\n    tag 756\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 10\t\t\t\n      PUSH 20\t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      SWAP1 \t\t\t\n      KECCAK256 \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      SSTORE \t\t\t\n      PUSH A\t\t\t\n      SLOAD \t\t\t\n      PUSH 1\t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      SSTORE \t\t\t\n      PUSH B\t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SSTORE \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 757\t\t\t\n      DUP7 \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 547\t\t\t\n      JUMP [in]\t\t\t\n    tag 757\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP9 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 13ED6866D4E1EE6DA46F845C46D7E54120883D75C5EA9A2DACC1C4CA8984AB80\t\t\t\n      SWAP1 \t\t\t\n      PUSH 80\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 636\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 2FE3F38F\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 24\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP7 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 44\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP6 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 64\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP3 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 5FC7E71E\t\t\t\n      SWAP1 \t\t\t\n      PUSH A4\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 763\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 763\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 764\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 764\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 765\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH A14D179\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\\r\\n}\\r\\n\n      ADD \t\t\t\\r\\n}\\r\\n\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\tsymbol_, decimals_);\\r\\n\\r\\n  ...\n    tag 765\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      PUSH 9\t\t\t\n      SLOAD \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 768\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 80965B1B\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 768\t\t\t\n      JUMPDEST \t\t\t\n      TIMESTAMP \t\t\t\n      DUP3 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      PUSH 6C540BAF\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP2 \t\t\t\n      PUSH FFFFFFFF\t\t\t\n      AND \t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 771\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 771\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 772\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 772\t\t\t\n      JUMPDEST \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 773\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1046F38D\t\t\t\n      PUSH E3\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 773\t\t\t\n      JUMPDEST \t\t\t\n      DUP5 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      DUP5 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 774\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1BD1A621\t\t\t\n      PUSH E2\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 774\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 775\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH D29DA7EF\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 775\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      DUP4 \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 776\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 5982C5BB\t\t\t\n      PUSH E1\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      REVERT \t\t\t\n    tag 776\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 777\t\t\t\n      DUP7 \t\t\t\n      DUP7 \t\t\t\n      DUP7 \t\t\t\n      PUSH [tag] 489\t\t\t\n      JUMP [in]\t\t\t\n    tag 777\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 5\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH C488847B\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      SWAP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH C488847B\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 778\t\t\t\n      SWAP1 \t\t\t\n      ADDRESS \t\t\t\n      SWAP1 \t\t\t\n      DUP10 \t\t\t\n      SWAP1 \t\t\t\n      DUP9 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 694\t\t\t\n      JUMP [in]\t\t\t\n    tag 778\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 780\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 780\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 781\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 782\t\t\t\n      JUMP [in]\t\t\t\n    tag 781\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 783\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 33\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 4C49515549444154455F434F4D5054524F4C4C45525F43414C43554C4154455F\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 105353D5539517D4D152569157D19052531151\t\t\t\n      PUSH 6A\t\t\t\n      SHL \t\t\t\n      PUSH 64\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 84\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 783\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 70A08231\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP9 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 4\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP3 \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 70A08231\t\t\t\n      SWAP1 \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 788\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 788\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 789\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 789\t\t\t\n      JUMPDEST \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 790\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 18\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 4C49515549444154455F5345495A455F544F4F5F4D5543480000000000000000\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 790\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP6 \t\t\t\n      AND \t\t\t\n      ADDRESS \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 793\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 794\t\t\t\n      ADDRESS \t\t\t\n      DUP10 \t\t\t\n      DUP10 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 438\t\t\t\n      JUMP [in]\t\t\t\n    tag 794\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 800\t\t\t\n      JUMP \t\t\t\n    tag 793\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH B2A02FF1\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH B2A02FF1\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 796\t\t\t\n      SWAP1 \t\t\t\n      DUP13 \t\t\t\n      SWAP1 \t\t\t\n      DUP13 \t\t\t\n      SWAP1 \t\t\t\n      DUP8 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 694\t\t\t\n      JUMP [in]\t\t\t\n    tag 796\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 798\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 798\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 799\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 799\t\t\t\n      JUMPDEST \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 800\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 14\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1D1BDAD95B881CD95A5E9D5C994819985A5B1959\t\t\t\n      PUSH 62\t\t\t\n      SHL \t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 800\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP11 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      DUP10 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP2 \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      DUP7 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      DUP8 \t\t\t\n      AND \t\t\t\n      PUSH 60\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 80\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 298637F684DA70674F26509B10F07EC2FBC77A335AB1E7D6215A4B2484D8BB52\t\t\t\n      SWAP2 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      SUB \t\t\t\n      PUSH A0\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      LOG1 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 657\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 11\t\t\t\n      SLOAD \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 70A08231\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP2 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      SWAP1 \t\t\t\n      DUP4 \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 70A08231\t\t\t\n      SWAP1 \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 808\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 808\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 809\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 809\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 23B872DD\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP4 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 23B872DD\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 810\t\t\t\n      SWAP1 \t\t\t\n      DUP10 \t\t\t\n      SWAP1 \t\t\t\n      ADDRESS \t\t\t\n      SWAP1 \t\t\t\n      DUP11 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 4\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 694\t\t\t\n      JUMP [in]\t\t\t\n    tag 810\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      DUP8 \t\t\t\n      DUP1 \t\t\t\n      EXTCODESIZE \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 811\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 811\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      GAS \t\t\t\n      CALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 813\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 813\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 0\t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 815\t\t\t\n      JUMPI \t\t\t\n      PUSH 20\t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 816\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 815\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 814\t\t\t\n      JUMP \t\t\t\n    tag 816\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      PUSH 0\t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 814\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 817\t\t\t\n      JUMPI \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 461BCD\t\t\t\n      PUSH E5\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 18\t\t\t\n      PUSH 24\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 544F4B454E5F5452414E534645525F494E5F4641494C45440000000000000000\t\t\t\n      PUSH 44\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 64\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 279\t\t\t\n      JUMP \t\t\t\n    tag 817\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 70A08231\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      ADDRESS \t\t\t\n      PUSH 4\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 0\t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP7 \t\t\t\n      AND \t\t\t\n      SWAP1 \t\t\t\n      PUSH 70A08231\t\t\t\n      SWAP1 \t\t\t\n      PUSH 24\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      DUP4 \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t\n      DUP7 \t\t\t\n      GAS \t\t\t\n      STATICCALL \t\t\t\n      ISZERO \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 822\t\t\t\n      JUMPI \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      RETURNDATACOPY \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 822\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      RETURNDATASIZE \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      PUSH 1F\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      POP \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 823\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 292\t\t\t\n      JUMP [in]\t\t\t\n    tag 823\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      PUSH [tag] 824\t\t\t\n      DUP4 \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 412\t\t\t\n      JUMP [in]\t\t\t\n    tag 824\t\t\t\n      JUMPDEST \t\t\t\n      SWAP9 \t\t\t\n      SWAP8 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 692\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 320\t\t\t\n      PUSH [tag] 827\t\t\t\n      DUP5 \t\t\t\n      PUSH DE0B6B3A7640000\t\t\t * @\n      PUSH [tag] 584\t\t\t\n      JUMP [in]\t\t\t\n    tag 827\t\t\t\n      JUMPDEST \t\t\t\n      DUP4 \t\t\t\n      MLOAD \t\t\t\n      PUSH 0\t\t\t\n      PUSH [tag] 320\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      PUSH [tag] 499\t\t\t\n      JUMP [in]\t\t\t\n    tag 394\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      DUP1 \t\t\t\n      SLOAD \t\t\t\n      PUSH [tag] 831\t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 267\t\t\t\n      JUMP [in]\t\t\t\n    tag 831\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      PUSH 0\t\t\t\n      KECCAK256 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 1F\t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      DIV \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP3 \t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 833\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP6 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 836\t\t\t\n      JUMP \t\t\t\n    tag 833\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      PUSH 1F\t\t\t\n      LT \t\t\t\n      PUSH [tag] 834\t\t\t\n      JUMPI \t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH FF\t\t\t\n      NOT \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      DUP1 \t\t\t\n      ADD \t\t\t\n      OR \t\t\t\n      DUP6 \t\t\t\n      SSTORE \t\t\t\n      PUSH [tag] 836\t\t\t\n      JUMP \t\t\t\n    tag 834\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      DUP1 \t\t\t\n      ADD \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      DUP6 \t\t\t\n      SSTORE \t\t\t\n      DUP3 \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 836\t\t\t\n      JUMPI \t\t\t\n      SWAP2 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n    tag 835\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      DUP2 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 836\t\t\t\n      JUMPI \t\t\t\n      DUP3 \t\t\t\n      MLOAD \t\t\t\n      DUP3 \t\t\t\n      SSTORE \t\t\t\n      SWAP2 \t\t\t\n      PUSH 20\t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      PUSH [tag] 835\t\t\t\n      JUMP \t\t\t\n    tag 836\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 492\t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 839\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 492\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      SSTORE \t\t\t\n      PUSH 1\t\t\t\n      ADD \t\t\t\n      PUSH [tag] 839\t\t\t\n      JUMP \t\t\t\n    tag 69\t\t\te-Identifier: BSD-3-Clause\\r\\n...\n      JUMPDEST \t\t\te-Identifier: BSD-3-Clause\\r\\n...\n      PUSH 0\t\t\t20Im\n      PUSH 20\t\t\tic\n      DUP1 \t\t\t-2\n      DUP4 \t\t\twrap an E\n      MSTORE \t\t\t which wrap an EIP-20\n      DUP4 \t\t\t\\r\\n * @\n      MLOAD \t\t\tutable\\r\\n * @a\n      DUP1 \t\t\tImmuta\n      DUP3 \t\t\tEr\n      DUP6 \t\t\t\\ncontract\n      ADD \t\t\t */\\r\\ncontract CErc\n      MSTORE \t\t\tpound\\r\\n */\\r\\ncontract CErc2...\n      PUSH 0\t\t\t \n    tag 848\t\t\t  * @notice Construct a new mo...\n      JUMPDEST \t\t\t  * @notice Construct a new mo...\n      DUP2 \t\t\tnstruc\n      DUP2 \t\t\t \n      LT \t\t\tice Construct\n      ISZERO \t\t\t  * @notice Construct a new mo...\n      PUSH [tag] 850\t\t\t  * @notice Construct a new mo...\n      JUMPI \t\t\t  * @notice Construct a new mo...\n      DUP6 \t\t\t * @param comp\n      DUP2 \t\t\t * @param comp\n      ADD \t\t\t * @param comp\n      DUP4 \t\t\t     * @param comptroll\n      ADD \t\t\t     * @param comptroll\n      MLOAD \t\t\tsset\\r\\n     * @param comptrol...\n      DUP6 \t\t\tress of the under\n      DUP3 \t\t\tress of the under\n      ADD \t\t\tress of the under\n      PUSH 40\t\t\tin\n      ADD \t\t\t address of the underlying\n      MSTORE \t\t\tng_ The address of the underly...\n      DUP3 \t\t\toney marke\n      ADD \t\t\toney marke\n      PUSH [tag] 848\t\t\t  * @notice Construct a new mo...\n      JUMP \t\t\t  * @notice Construct a new mo...\n    tag 850\t\t\t  * @notice Construct a new mo...\n      JUMPDEST \t\t\t  * @notice Construct a new mo...\n      DUP2 \t\t\tller\\r\\n\n      DUP2 \t\t\tt\n      GT \t\t\tomptroller\\r\\n \n      ISZERO \t\t\te Comptroller\\r\\n     * @param...\n      PUSH [tag] 851\t\t\te Comptroller\\r\\n     * @param...\n      JUMPI \t\t\te Comptroller\\r\\n     * @param...\n      PUSH 0\t\t\te\n      PUSH 40\t\t\tt \n      DUP4 \t\t\te inte\n      DUP8 \t\t\tdress of \n      ADD \t\t\te address of the inter\n      ADD \t\t\t_ The address of the interest ...\n      MSTORE \t\t\tteModel_ The address of the in...\n    tag 851\t\t\te Comptroller\\r\\n     * @param...\n      JUMPDEST \t\t\te Comptroller\\r\\n     * @param...\n      POP \t\t\t\n      PUSH 1F\t\t\tra\n      ADD \t\t\tThe initial exc\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      AND \t\t\tsa_ The initial exchange rate\n      SWAP3 \t\t\thangeRateMantissa_ The initial...\n      SWAP1 \t\t\thangeRateMantissa_ The initial...\n      SWAP3 \t\t\thangeRateMantissa_ The initial...\n      ADD \t\t\thangeRateMantissa_ The initial...\n      PUSH 40\t\t\tca\n      ADD \t\t\tlExchangeRateMantissa_ The ini...\n      SWAP4 \t\t\tlExchangeRateMantissa_ The ini...\n      SWAP3 \t\t\te-Identifier: BSD-3-Clause\\r\\n...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\te-Identifier: BSD-3-Clause\\r\\n...\n    tag 841\t\t\t\\n     * @param name_ ERC-20 n...\n      JUMPDEST \t\t\t\\n     * @param name_ ERC-20 n...\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      DUP2 \t\t\t0 symbol of this token\\r\\n    ...\n      AND \t\t\t0 symbol of this token\\r\\n    ...\n      DUP2 \t\t\tbol_ ERC-20 symbol of this tok...\n      EQ \t\t\tbol_ ERC-20 symbol of this tok...\n      PUSH [tag] 853\t\t\t@param symbol_ ERC-20 symbol o...\n      JUMPI \t\t\t@param symbol_ ERC-20 symbol o...\n      PUSH 0\t\t\t_\n      DUP1 \t\t\ta\n      REVERT \t\t\tm decimals_ \n    tag 853\t\t\t@param symbol_ ERC-20 symbol o...\n      JUMPDEST \t\t\t@param symbol_ ERC-20 symbol o...\n      POP \t\t\t\\n     * @param name_ ERC-20 n...\n      JUMP [out]\t\t\t\\n     * @param name_ ERC-20 n...\n    tag 72\t\t\tl precision of this token\\r\\n ...\n      JUMPDEST \t\t\tl precision of this token\\r\\n ...\n      PUSH 0\t\t\tistrat\n      DUP1 \t\t\t of th\n      PUSH 40\t\t\trl\n      DUP4 \t\t\taddress u\n      DUP6 \t\t\tstructo\n      SUB \t\t\t constructor(address un\n      SLT \t\t\t\\n    constructor(address unde...\n      ISZERO \t\t\t*/\\r\\n    constructor(address ...\n      PUSH [tag] 855\t\t\t*/\\r\\n    constructor(address ...\n      JUMPI \t\t\t*/\\r\\n    constructor(address ...\n      PUSH 0\t\t\t \n      DUP1 \t\t\t \n      REVERT \t\t\t_,\\r\\n        \n    tag 855\t\t\t*/\\r\\n    constructor(address ...\n      JUMPDEST \t\t\t*/\\r\\n    constructor(address ...\n      DUP3 \t\t\tler_,\\r\\n  \n      CALLDATALOAD \t\t\tface comptroller_,\\r\\n   \n      PUSH [tag] 856\t\t\t    InterestRateModel interest...\n      DUP2 \t\t\terest\n      PUSH [tag] 841\t\t\t    InterestRateModel interest...\n      JUMP [in]\t\t\t    InterestRateModel interest...\n    tag 856\t\t\t    InterestRateModel interest...\n      JUMPDEST \t\t\t    InterestRateModel interest...\n      SWAP5 \t\t\t     \n      PUSH 20\t\t\t  \n      SWAP4 \t\t\tissa_,\\r\\n          \n      SWAP1 \t\t\tissa_,\\r\\n          \n      SWAP4 \t\t\tissa_,\\r\\n          \n      ADD \t\t\tissa_,\\r\\n          \n      CALLDATALOAD \t\t\thangeRateMantissa_,\\r\\n       ...\n      SWAP4 \t\t\thangeRateMantissa_,\\r\\n       ...\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\tl precision of this token\\r\\n ...\n    tag 78\t\t\tzation\\r\\n        admin = paya...\n      JUMPDEST \t\t\tzation\\r\\n        admin = paya...\n      PUSH 0\t\t\tInitia\n      PUSH 20\t\t\t, \n      DUP3 \t\t\t(underlyi\n      DUP5 \t\t\tnitiali\n      SUB \t\t\t   initialize(underlyin\n      SLT \t\t\t       initialize(underlying_,...\n      ISZERO \t\t\t\\r\\n        initialize(underly...\n      PUSH [tag] 859\t\t\t\\r\\n        initialize(underly...\n      JUMPI \t\t\t\\r\\n        initialize(underly...\n      PUSH 0\t\t\ti\n      DUP1 \t\t\t_\n      REVERT \t\t\ttroller_, in\n    tag 859\t\t\t\\r\\n        initialize(underly...\n      JUMPDEST \t\t\t\\r\\n        initialize(underly...\n      POP \t\t\t\n      CALLDATALOAD \t\t\ttialExchangeRateMantiss\n      SWAP2 \t\t\ttialExchangeRateMantiss\n      SWAP1 \t\t\tzation\\r\\n        admin = paya...\n      POP \t\t\t\n      JUMP [out]\t\t\tzation\\r\\n        admin = paya...\n    tag 87\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 862\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 862\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 320\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 842\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 41\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 843\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      PUSH 1F\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      SLT \t\t\t\n      PUSH [tag] 866\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 866\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH FFFFFFFFFFFFFFFF\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 868\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 868\t\t\t\n      PUSH [tag] 842\t\t\t\n      JUMP [in]\t\t\t\n    tag 868\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 40\t\t\t\n      MLOAD \t\t\t\n      PUSH 1F\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      PUSH 1F\t\t\t\n      NOT \t\t\t\n      SWAP1 \t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      PUSH 3F\t\t\t\n      ADD \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      DUP2 \t\t\t\n      DUP4 \t\t\t\n      LT \t\t\t\n      OR \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 870\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 870\t\t\t\n      PUSH [tag] 842\t\t\t\n      JUMP [in]\t\t\t\n    tag 870\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      PUSH 40\t\t\t\n      MSTORE \t\t\t\n      DUP4 \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      DUP7 \t\t\t\n      PUSH 20\t\t\t\n      DUP6 \t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      ADD \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 871\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 871\t\t\t\n      JUMPDEST \t\t\t\n      DUP4 \t\t\t\n      PUSH 20\t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      CALLDATACOPY \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP6 \t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      DUP1 \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 844\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH FF\t\t\t\n      DUP2 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 873\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 873\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 98\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      PUSH E0\t\t\t\n      DUP9 \t\t\t\n      DUP11 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 875\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 875\t\t\t\n      JUMPDEST \t\t\t\n      DUP8 \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 876\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 876\t\t\t\n      JUMPDEST \t\t\t\n      SWAP7 \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 877\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 877\t\t\t\n      JUMPDEST \t\t\t\n      SWAP6 \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 878\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 878\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      PUSH 60\t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      PUSH 80\t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH FFFFFFFFFFFFFFFF\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 879\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 879\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 880\t\t\t\n      DUP12 \t\t\t\n      DUP4 \t\t\t\n      DUP13 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 843\t\t\t\n      JUMP [in]\t\t\t\n    tag 880\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      PUSH A0\t\t\t\n      DUP11 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 881\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 881\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 882\t\t\t\n      DUP11 \t\t\t\n      DUP3 \t\t\t\n      DUP12 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 843\t\t\t\n      JUMP [in]\t\t\t\n    tag 882\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH [tag] 883\t\t\t\n      PUSH C0\t\t\t\n      DUP10 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 844\t\t\t\n      JUMP [in]\t\t\t\n    tag 883\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP6 \t\t\t\n      SWAP9 \t\t\t\n      SWAP2 \t\t\t\n      SWAP5 \t\t\t\n      SWAP8 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP6 \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 106\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP5 \t\t\t\n      DUP7 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 888\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 888\t\t\t\n      JUMPDEST \t\t\t\n      DUP4 \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 889\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 889\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 890\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 890\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      SWAP6 \t\t\t\n      SWAP3 \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 187\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH C0\t\t\t\n      DUP8 \t\t\t\n      DUP10 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 899\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 899\t\t\t\n      JUMPDEST \t\t\t\n      DUP7 \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 900\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 900\t\t\t\n      JUMPDEST \t\t\t\n      SWAP6 \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 901\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 901\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP4 \t\t\t\n      POP \t\t\t\n      PUSH 60\t\t\t\n      DUP8 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH FFFFFFFFFFFFFFFF\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 902\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 902\t\t\t\n      JUMPDEST \t\t\t\n      PUSH [tag] 903\t\t\t\n      DUP11 \t\t\t\n      DUP4 \t\t\t\n      DUP12 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 843\t\t\t\n      JUMP [in]\t\t\t\n    tag 903\t\t\t\n      JUMPDEST \t\t\t\n      SWAP5 \t\t\t\n      POP \t\t\t\n      PUSH 80\t\t\t\n      DUP10 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 904\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 904\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      PUSH [tag] 905\t\t\t\n      DUP10 \t\t\t\n      DUP3 \t\t\t\n      DUP11 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 843\t\t\t\n      JUMP [in]\t\t\t\n    tag 905\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      PUSH [tag] 906\t\t\t\n      PUSH A0\t\t\t\n      DUP9 \t\t\t\n      ADD \t\t\t\n      PUSH [tag] 844\t\t\t\n      JUMP [in]\t\t\t\n    tag 906\t\t\t\n      JUMPDEST \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP6 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP6 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP6 \t\t\t\n      JUMP [out]\t\t\t\n    tag 233\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 912\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 912\t\t\t\n      JUMPDEST \t\t\t\n      DUP3 \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 913\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 913\t\t\t\n      JUMPDEST \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 914\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 914\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 250\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 0\t\t\t\n      PUSH 60\t\t\t\n      DUP5 \t\t\t\n      DUP7 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 920\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 920\t\t\t\n      JUMPDEST \t\t\t\n      DUP4 \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 921\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 921\t\t\t\n      JUMPDEST \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      PUSH 20\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      PUSH 40\t\t\t\n      DUP5 \t\t\t\n      ADD \t\t\t\n      CALLDATALOAD \t\t\t\n      PUSH [tag] 922\t\t\t\n      DUP2 \t\t\t\n      PUSH [tag] 841\t\t\t\n      JUMP [in]\t\t\t\n    tag 922\t\t\t\n      JUMPDEST \t\t\t\n      DUP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      POP \t\t\t\n      SWAP3 \t\t\t\n      JUMP [out]\t\t\t\n    tag 267\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      DUP2 \t\t\t\n      DUP2 \t\t\t\n      SHR \t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      DUP1 \t\t\t\n      PUSH [tag] 924\t\t\t\n      JUMPI \t\t\t\n      PUSH 7F\t\t\t\n      DUP3 \t\t\t\n      AND \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n    tag 924\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 925\t\t\t\n      JUMPI \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 22\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 925\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 280\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 20\t\t\t\n      DUP1 \t\t\t\n      DUP3 \t\t\t\n      MSTORE \t\t\t\n      PUSH A\t\t\t\n      SWAP1 \t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 1C994B595B9D195C9959\t\t\t\n      PUSH B2\t\t\t\n      SHL \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 292\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 928\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 928\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      MLOAD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    tag 333\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      DUP5 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 933\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 933\t\t\t\n      JUMPDEST \t\t\t\n      DUP2 \t\t\t\n      MLOAD \t\t\t\n      DUP1 \t\t\t\n      ISZERO \t\t\t\n      ISZERO \t\t\t\n      DUP2 \t\t\t\n      EQ \t\t\t\n      PUSH [tag] 320\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 845\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 11\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 412\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      DUP3 \t\t\t\n      LT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 948\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 948\t\t\t\n      PUSH [tag] 845\t\t\t\n      JUMP [in]\t\t\t\n    tag 948\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      SUB \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 417\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      NOT \t\t\t\n      DUP3 \t\t\t\n      GT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 951\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 951\t\t\t\n      PUSH [tag] 845\t\t\t\n      JUMP [in]\t\t\t\n    tag 951\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 497\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP2 \t\t\t\n      PUSH 0\t\t\t\n      NOT \t\t\t\n      DIV \t\t\t\n      DUP4 \t\t\t\n      GT \t\t\t\n      DUP3 \t\t\t\n      ISZERO \t\t\t\n      ISZERO \t\t\t\n      AND \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 955\t\t\t\n      JUMPI \t\t\t\n      PUSH [tag] 955\t\t\t\n      PUSH [tag] 845\t\t\t\n      JUMP [in]\t\t\t\n    tag 955\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      MUL \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 499\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP3 \t\t\t\n      PUSH [tag] 957\t\t\t\n      JUMPI \t\t\t\n      PUSH 4E487B71\t\t\t\n      PUSH E0\t\t\t\n      SHL \t\t\t\n      PUSH 0\t\t\t\n      MSTORE \t\t\t\n      PUSH 12\t\t\t\n      PUSH 4\t\t\t\n      MSTORE \t\t\t\n      PUSH 24\t\t\t\n      PUSH 0\t\t\t\n      REVERT \t\t\t\n    tag 957\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      DIV \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 549\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP4 \t\t\t\n      SWAP1 \t\t\t\n      SWAP4 \t\t\t\n      AND \t\t\t\n      DUP4 \t\t\t\n      MSTORE \t\t\t\n      PUSH 20\t\t\t\n      DUP4 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 694\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 1\t\t\t\n      PUSH 1\t\t\t\n      PUSH A0\t\t\t\n      SHL \t\t\t\n      SUB \t\t\t\n      SWAP4 \t\t\t\n      DUP5 \t\t\t\n      AND \t\t\t\n      DUP2 \t\t\t\n      MSTORE \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      AND \t\t\t\n      PUSH 20\t\t\t\n      DUP3 \t\t\t\n      ADD \t\t\t\n      MSTORE \t\t\t\n      PUSH 40\t\t\t\n      DUP2 \t\t\t\n      ADD \t\t\t\n      SWAP2 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      MSTORE \t\t\t\n      PUSH 60\t\t\t\n      ADD \t\t\t\n      SWAP1 \t\t\t\n      JUMP [out]\t\t\t\n    tag 782\t\t\t\n      JUMPDEST \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      PUSH 40\t\t\t\n      DUP4 \t\t\t\n      DUP6 \t\t\t\n      SUB \t\t\t\n      SLT \t\t\t\n      ISZERO \t\t\t\n      PUSH [tag] 973\t\t\t\n      JUMPI \t\t\t\n      PUSH 0\t\t\t\n      DUP1 \t\t\t\n      REVERT \t\t\t\n    tag 973\t\t\t\n      JUMPDEST \t\t\t\n      POP \t\t\t\n      POP \t\t\t\n      DUP1 \t\t\t\n      MLOAD \t\t\t\n      PUSH 20\t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      ADD \t\t\t\n      MLOAD \t\t\t\n      SWAP1 \t\t\t\n      SWAP3 \t\t\t\n      SWAP1 \t\t\t\n      SWAP2 \t\t\t\n      POP \t\t\t\n      JUMP [out]\t\t\t\n    .data\n      ADA389E1FC24A8587C776340EFB91B36E675792AB631816100D55DF0B5CF3CBC:\n        ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n"
}